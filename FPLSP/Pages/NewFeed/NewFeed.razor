@page "/newfeed"
@using FPLSP.Server.Infrastructure.ViewModels.NewFeed
@using Microsoft.AspNetCore.SignalR.Client
@using FPLSP.Repositories.Interfaces
@using FPLSP.Server.Domain.Entities.CoresParts
@using FPLSP.Server.Infrastructure.ViewModels.NewFeed
@using FPLSP.Shared
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Identity
@attribute [Authorize(Roles = "Student")]
@layout MainLayout2
<div class="pad">
    <div id="carouselExampleCaptions" class="carousel slide mb-3" data-bs-ride="true">
        <div class="carousel-indicators">
            <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
            <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="1" aria-label="Slide 2"></button>
            <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="2" aria-label="Slide 3"></button>
        </div>
        <div class="carousel-inner">
            <div class="carousel-item active">
                <img src="https://caodang.fpt.edu.vn/wp-content/uploads/BannerWeb-10.png" class="d-block w-100" alt="...">
                <div class="carousel-caption d-none d-md-block">
                    <h5>First slide label</h5>
                    <p>Some representative placeholder content for the first slide.</p>
                </div>
            </div>
            <div class="carousel-item">
                <img src="https://caodang.fpt.edu.vn/wp-content/uploads/BannerWeb-10.png" class="d-block w-100" alt="...">
                <div class="carousel-caption d-none d-md-block">
                    <h5>Second slide label</h5>
                    <p>Some representative placeholder content for the second slide.</p>
                </div>
            </div>
            <div class="carousel-item">
                <img src="https://caodang.fpt.edu.vn/wp-content/uploads/BannerWeb-10.png" class="d-block w-100" alt="...">
                <div class="carousel-caption d-none d-md-block">
                    <h5>Third slide label</h5>
                    <p>Some representative placeholder content for the third slide.</p>
                </div>
            </div>
        </div>
        <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Previous</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Next</span>
        </button>
    </div>
    <div class="row">
        <div class="col-lg-4">
            <div class="card text-center">
                <div class="card-header fst-italic">
                    Bảng Tin Chung <i class="fa-solid fa-bell"></i>
                </div>
                <div class="card-body">
                    @foreach (var x in _lstNewFeed.Where(c => c.IdTypeOfNewFeed == Guid.Parse("9a0ccc99-f28a-4608-8bd4-48ee2bd2e0fb")))
                    {
                        <div class="mb-2">
                        </div>
                        <h6 class="card-title">@x.CratedTime - @x.EndDate</h6>
                        <h4 class="card-title "><i class="fa-solid fa-graduation-cap"></i> @x.ClassName | @x.SubjectName</h4>
                        <p>Người Đăng : @x.Sender</p>
                        <span class="card-text fs-5 text-danger"> <i class="fa-regular fa-flag"></i> @x.Title</span>
                        <a href="/viewclass" class="nav-link"> <i class="fa-solid fa-angles-right"></i> @x.Content</a>
                        <hr class="border border-danger border-2 opacity-50">
                    }
                </div>

            </div>

        </div>
        <div class="col-lg-4">
            <div class="card text-center">
                <div class="card-header">
                    Bảng Tin Về Assignment <i class="fa-solid fa-bell"></i>
                </div>
                <div class="card-body">
                    @foreach (var x in _lstNewFeed.Where(c => c.IdTypeOfNewFeed == Guid.Parse("2c153826-33ae-471c-b4e2-048b5408e384")))
                    {
                        <div class="mb-2">
                        </div>
                        <h6 class="card-title">@x.CratedTime - @x.EndDate</h6>
                        <h4 class="card-title "><i class="fa-solid fa-graduation-cap"></i> @x.ClassName | @x.SubjectName</h4>
                        <p>Người Đăng : @x.Sender</p>
                        <span class="card-text fs-5 text-danger"> <i class="fa-regular fa-flag"></i> @x.Title</span>
                        <a href="/viewclass" class="nav-link"> <i class="fa-solid fa-angles-right"></i> @x.Content</a>
                        <hr class="border border-danger border-2 opacity-50">
                    }
                </div>

            </div>
        </div>
        <div class="col-lg-4">
            <div id="carouselExampleDark" class="carousel carousel-dark slide" data-bs-ride="carousel" style="height:500px">
                <div class="carousel-indicators">
                    <button type="button" data-bs-target="#carouselExampleDark" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
                    <button type="button" data-bs-target="#carouselExampleDark" data-bs-slide-to="1" aria-label="Slide 2"></button>
                    <button type="button" data-bs-target="#carouselExampleDark" data-bs-slide-to="2" aria-label="Slide 3"></button>
                </div>
                <div class="carousel-inner">
                    <div class="carousel-item active" data-bs-interval="1000">
                        <img src="https://caodang.fpt.edu.vn/wp-content/uploads/390x640-26.png" class="d-block w-100" alt="...">
                        <div class="carousel-caption d-none d-md-block">
                        </div>
                    </div>
                    <div class="carousel-item" data-bs-interval="2000">
                        <img src="https://caodang.fpt.edu.vn/wp-content/uploads/390x640-26.png" class="d-block w-100" alt="...">
                        <div class="carousel-caption d-none d-md-block">
                        </div>
                    </div>
                    <div class="carousel-item">
                        <img src="https://caodang.fpt.edu.vn/wp-content/uploads/390x640-26.png" class="d-block w-100" alt="...">
                        <div class="carousel-caption d-none d-md-block">
                        </div>
                    </div>
                </div>
                <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleDark" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Previous</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleDark" data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Next</span>
                </button>
            </div>

        </div>
    </div>
</div>

@code {
    [CascadingParameter]
    private Error _error { get; set; }
    [Inject]
    public INewFeedRepo _newFeedRepo { get; set; }
    private List<NewFeedOverView> _lstNewFeed;
    private List<NewFeedOverView> _lstNewFeedforclass = new List<NewFeedOverView>();
    //
    [Inject]
    public IHttpContextAccessor _httpContextAccessor { get; set; }
    //
    [Inject]
    public UserManager<UserSignIn> _userManager { get; set; }
    //

    public NewFeed()
    {
        _lstNewFeed = new List<NewFeedOverView>();
    }
    protected async override Task OnInitializedAsync()
    {
        await GetNewFeed();
        await ConnectToServer();
    }
    private async Task GetNewFeed()
    {
        var getusername = _httpContextAccessor.HttpContext.User.Identity.Name;
      
        var getID = _userManager.Users.ToList().Where(c => c.Email == getusername).Select(c => c.Id).FirstOrDefault();
        _lstNewFeed = await _newFeedRepo.GetListNewForUser(Guid.Parse(getID));
    }

    private async Task ConnectToServer()
    {
        try
        {
            //string url = "https://localhost:5001/notificationhub";
            //HubConnection _connection = null;
            //bool isConnected = false;
            //string connectionStatus = "Closed";
            //_connection = new HubConnectionBuilder()
            //    .WithUrl(url)
            //    .Build();

            //await _connection.StartAsync();
            //isConnected = true;
            //connectionStatus = "Connected :-)";

            //_connection.Closed += async (s) =>
            //{
            //    isConnected = false;
            //    connectionStatus = "Disconnected";
            //    await _connection.StartAsync();
            //    isConnected = true;
            //};

            //_connection.On<bool>("Noticafications", async res =>
            //{
            //    if (res == true)
            //    {
            //        await GetNewFeed();
            //        StateHasChanged();
            //    }
            //});
        }
        catch (Exception ex)
        {

            _error.ProcessError(ex);
        }
    }
}