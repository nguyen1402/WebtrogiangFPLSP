@page "/lessonContentUPDetail/{idsubjectUP}/{Id}"
@using FPLSP.Repositories.Interfaces
@using FPLSP.Server.Infrastructure.ViewModels.LessonContentUP
@using FPLSP.Server.Infrastructure.ViewModels.LessonUP
@using FPLSP.Server.Infrastructure.ViewModels.ResourceLinkUP
@attribute [Authorize(Roles = "AdminCore,AdminCS")]
<h3>Chi tiết nội dung bài học UP</h3>

@if (lessonContentUP == null)
{
    <LoadingIndicator></LoadingIndicator>
}
else
{
    <table class="table">
        <tr>
            <th>Mã nội dung bài học</th>
            <th>Tên nội dung bài học</th>
            <th>Nội dung</th>
            <th>Mô tả</th>
            <th>Trạng thái</th>
            <th>Tên bài học</th>
            <th>Link tài nguyên</th>
        </tr>
        <tr>

            <td>@lessonContentUP.LessonContentCode</td>
            <td>@lessonContentUP.LessonContentName</td>
            <td>@lessonContentUP.Content</td>
            <td>@lessonContentUP.Descriptions</td>
            <td>@(@lessonContentUP.Status==1?"Hoạt động":"Không hoạt động")</td>
            <td>
                @if (@lessonContentUP.LessonId != null) @_lstLessonUP.FirstOrDefault(x=>x.Id==@lessonContentUP.LessonId).LessonName
            </td>
            <td>
                @if (@lessonContentUP.ResuorceLinkId != null) @_lstResourceLinkUP.FirstOrDefault(x=>x.Id==@lessonContentUP.ResuorceLinkId).ResourcesTitle
            </td>
        </tr>
    </table>
}

<div class="col-md-6 text-center" style="margin-top: 25px">
    <a href="/lessonContentUP/@idsubjectUP/@Id" class="btn btn-danger">Quay lại</a>
</div>
@code {
    [Parameter]
    public string Id { get; set; }
    [Inject] ILessonContentUPRepo LessonContentUPRepo { get; set; }
    [Inject] NavigationManager navigationManager { get; set; }
    [Inject] private ILessonUPRepo _lessonUPRepo { get; set; }
    private List<LessonUPViewModel> _lstLessonUP { get; set; }
    [Inject] private IResourceLinkUPRepo _resourceLinkUPRepo { get; set; }
    private List<ResourceLinkUPViewModel> _lstResourceLinkUP { get; set; }
    [Parameter]
    public string idsubjectUP { get; set; }
    private LessonContentUPViewModel lessonContentUP { get; set; }

    protected override async Task OnInitializedAsync()
    {

        _lstLessonUP = await _lessonUPRepo.GetAll();
        _lstResourceLinkUP = await _resourceLinkUPRepo.GetAll();
        lessonContentUP = await LessonContentUPRepo.GetById(Id);
    }
}