@page "/subjects/{idpecNonDecrypt}"
@using Blazored.Toast.Services
@using FPLSP.Components
@using FPLSP.Components.Subject
@using FPLSP.Data.Securities;
@using FPLSP.Repositories
@using FPLSP.Repositories.Interfaces
@using FPLSP.Server.Data.SeedWork
@using FPLSP.Server.Domain.Dtos
@using FPLSP.Server.Infrastructure.ViewModels.Lesson
@using FPLSP.Server.Infrastructure.ViewModels.LessonContentCP
@using FPLSP.Server.Infrastructure.ViewModels.ResourceLink
@using FPLSP.Server.Infrastructure.ViewModels.Subject

@using AntDesign
@attribute [Authorize(Roles = "AdminCore,AdminCS")]
<div class="row">
    <h2 class="ps-0" style="
    font-family: serif;
    font-weight: bold;
">
        Danh sách môn của ngành: @specializedDto.SpecializationName
    </h2>
</div>
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/SpecializedCP/@_cryptoServices.Encrypt((maxlevel).ToString()).Replace("/", "I0H")/@_cryptoServices.Encrypt((IdCoSo).ToString()).Replace("/", "I0H")">Chuyên ngành</a></li>
        <li class="breadcrumb-item active" aria-current="page">@specializedDto.SpecializationName</li>
    </ol>
</nav>
@*<div class="d-grid gap-2 d-md-flex justify-content-md-end mt-1" style="z-index: 1000;right: 25px;position: fixed;">
    <a class="btn btn-outline-success" title="" @onclick="RedirectToSubjectCreate"><i class="fa-solid fa-circle-plus fa-2xl"></i></a>
</div>*@
<div class="row pt-3 pl-3">
    <div class="col-3 ps-0">
        <a class="btn btn-outline-danger me-3" href="/SpecializedCP/@_cryptoServices.Encrypt((maxlevel).ToString()).Replace("/", "I0H")/@_cryptoServices.Encrypt((IdCoSo).ToString()).Replace("/", "I0H")">Quay Lại</a>
        <a class="btn btn-primary me-3" @onclick="RedirectToSubjectCreate">Thêm Môn</a>
        @*<a class="btn btn-primary me-3" @onclick="@(() => { RedirectToCreate(_cryptoServices.Encrypt((idpec.ToString()))); })">Thêm Môn</a>*@
    </div>
    <div class="col-7 ps-0">
        <div class="row">
            <div class="col-4">
                <EditForm Model="SubjectListSearch">
                    <div class="col-12">
                        <InputSelect ValueExpression="@(()=>SubjectListSearch.Status)" Value="@SubjectListSearch.Status" ValueChanged="@((int newValue) => ChangeValue(newValue))" class="form-select">
                            <option value="3">Tất cả</option>
                            <option value="1">Đang hoạt động</option>
                            <option value="0">Không hoạt động</option>
                        </InputSelect>
                    </div>
                </EditForm>
            </div>
            <div class="col-8">
                <EditForm Model="SubjectListSearch">
                    <div class="row">
                        <div class="col-6 ps-0 pe-0">
                            <InputText placeholder="Nhập tên môn" class="form-control" @bind-Value="SubjectListSearch.Name"></InputText>
                        </div>
                        <div class="col-6">
                            <button @onclick="() => TimKiem()" class="btn btn-primary">Tìm kiếm</button>
                            <button class="btn btn-outline-success ms-2" @onclick="() => Undo()">Làm mới</button>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
    <div class="col-2 ps-3">
        <div class="dropdown-center">
            <button class="btn btn-info ps-4 dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                Chức Năng
            </button>
            <ul class="dropdown-menu">
                <li>
                    <a class="dropdown-item text-center" @onclick="()=>RedirectToLink()">Quản lý Link</a>
                </li>
                <li>
                    <a class="dropdown-item text-center" @onclick="()=>RedirectToCreatLink()">Thêm Link</a>
                </li>
            </ul>
        </div>
    </div>
</div>

@if (SubjectCPList.Count() > 0 || (tg = DateTime.Now - time).Days < 7)
{
    <div>
        <div class="text-center pt-3 mb-2 row">
            <div class="col-12">
                <Steps Current="current">
                    <div class="row">
                        <div style="width:16%">  <Step Title="Danh sách môn học" /> </div>
                        <div style="width:13% "><Step Title="Thêm môn học" /></div>
                        <div style="width:13%"> <Step Title="Sửa môn học" /></div>
                        <div style="width:12%"> <Step Title="Thêm bài học" /></div>
                        <div style="width:11%"><Step Title="Sửa bài học" /></div>
                        <div style="width:10%"> <Step Title="Thêm link" /></div>
                        <div style="width:13%"><Step Title="Thêm nôi dung" /></div>
                        <div style="width:12%"><Step Title="Sửa nội dung" /></div>
                    </div>
                </Steps>
            </div>
        </div>
        <div class="steps-content">
            
            @if (string.IsNullOrEmpty(@steps[current].Content))
            {
                <nav class="navbar bg-light navbar-light pl-4 ">
                    <div class="navbar-nav w-100">
                        <MudPaper Width="100%" Elevation="0" Style="color:#f27125; " Class="txt-nav">
                            <MudTreeView Style="color:#f27125;" T="string" ExpandOnClick="true" Hover="true">
                                @foreach (var subject in SubjectCPList)
                                {
                                    <div class="row">
                                        <div class="col-10">
                                            <MudTreeViewItem Value="@subject.SubjectName" IconColor="MudBlazor.Color.Warning" Icon="@Icons.Filled.School">

                                                @foreach (var lessonCreate in ListLesson.Where(c => c.SubjectId == subject.Id).ToList())
                                                {
                                                    <div class="row">
                                                        <div class="col-10">
                                                            <MudTreeViewItem Value="@(lessonCreate.LessonName)" IconColor="MudBlazor.Color.Warning" Icon="@Icons.Filled.Dns">

                                                            @foreach (var lessonContentCreate in ListLessonContent.Where(c => c.IdLesson == lessonCreate.Id).ToList())
                                                            {
                                                                <div class="row ">
                                                                    <div class="col-10">
                                                                        <MudTreeViewItem Value="@(lessonContentCreate.LessonContentName)" IconColor="MudBlazor.Color.Warning" Icon="@Icons.Filled.FiberManualRecord" />
                                                                    </div>
                                                                    <div class="col-2 text-center">
                                                                        <div class="row">


                                                                            <div class="col-6">
                                                                                <a class="btn btn-outline-primary text-center" type="button" title="Sửa nôi dung" @onclick="() => RedirectToUpdateLessonContent(subject.Id,lessonCreate.Id,lessonContentCreate.Id)"><i class="fas fa-edit"></i></a>
                                                                            </div>
                                                                            <div class="col-6">
                                                                                <a class="btn btn-outline-primary text-center" type="button" title="Xóa nôi dung" @onclick="() => DeleteLessonContent(lessonCreate.Id)"><i class="fas fa-trash-alt"></i></a>

                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            }
                                                            <div class="row text-center">
                                                                <div class="col-3">
                                                                </div>
                                                                <div class="col-6">
                                                                    <a class="btn btn-outline-primary text-center" @onclick="() => RedirectToCreatLessonContent(subject.Id,lessonCreate.Id)">Thêm nôi dung</a>
                                                                </div>
                                                                <div class="col-3">
                                                                </div>
                                                            </div>
                                                        </MudTreeViewItem>
                                                    </div>
                                                    <div class="col-2 text-center">
                                                        <div class="row">


                                                            <div class="col-6">
                                                                <a class="btn btn-outline-primary text-center" type="button" title="Sửa bài học" @onclick="() => RedirectToUpdateLesson(subject.Id,lessonCreate.Id)"><i class="fas fa-edit"></i></a>
                                                            </div>
                                                            <div class="col-6">
                                                                <a class="btn btn-outline-primary text-center" type="button" title="Xóa bài học" @onclick="() => DeleteLesson(lessonCreate.Id)"><i class="fas fa-trash-alt"></i></a>

                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                }
                                                <div class="row text-center">
                                                    <div class="col-3">
                                                    </div>
                                                    <div class="col-6">
                                                        <a class="btn btn-outline-primary " @onclick="() => RedirectToCreatLesson(subject.Id)">Thêm bài học</a>
                                                    </div>
                                                    <div class="col-3">
                                                    </div>

                                                </div>


                                            </MudTreeViewItem>
                                        </div>
                                        <div class="col-2 text-center">
                                            <div class="row">

                                                <div class="col-4">
                                                    <a class="btn btn-outline-primary text-center" type="button" title="Quản lý quiz" @onclick="() => RedirectToQuiz(idpec,subject.Id)"><i class="fa-solid fa-question"></i></a>
                                                </div>
                                                <div class="col-4">
                                                    <a class="btn btn-outline-primary text-center" type="button" title="Sửa môn học" @onclick="() => RedirectToUpdateSubject(subject.Id)"><i class="fas fa-edit"></i></a>
                                                </div>

                                                <div class="col-4">
                                                    <a class="btn btn-outline-primary text-center" type="button" title="Xóa bài học" @onclick="() => DeleteSubject(subject.Id)"><i class="fas fa-trash-alt"></i></a>
                                                </div>
                                                @* <div class="col-6">
                                    <a class="btn btn-outline-primary text-center" type="button" title="Quản lý quiz" @onclick="() => RedirectToQuiz(idpec,subject.Id)"><i class="fa-solid fa-question"></i></a>
                                    </div>

                                    <div class="col-6">
                                    <a class="btn btn-outline-primary text-center" type="button" title="Xóa bài học" @onclick="() => DeleteSubject(subject.Id)"><i class="fas fa-trash-alt"></i></a>

                                    </div>*@
                                            </div>
                                        </div>

                                    </div>

                                }

                            </MudTreeView>
                        </MudPaper>

                    </div>
                </nav>
                <div class="footer text-muted">
                    <div class="row mt-3">
                        <span>
                            <Pagingation MetaData="MetaData" Spread="2" SelectedPage="SelectedPage"></Pagingation>
                        </span>
                    </div>
                </div>
            }
            else
            {
                <div class="row">
                    <div class="col-1"> </div>
                    <div class="col-10">
                        @if (steps[current].Content == "LessonCreate")
                        {
                            <div class="row pt-3">
                                <h3 class="ps-0">Thêm bài học môn : @SubjectCPList.Where(c=>c.Id == _idSubject).Select(c=>c.SubjectName).FirstOrDefault()</h3>
                                <EditForm Model="lessonCreate" OnSubmit="CreateLesson" class="card card-body bg-light mt-1">
                                    <DataAnnotationsValidator />
                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-6">
                                                <div class="row">
                                                    <div class="form-group pt-2 col-12">
                                                        <label for="name" class="col-6 col-form-label">Bài:</label>
                                                        <div class="col-12">
                                                            <Microsoft.AspNetCore.Components.Forms.InputNumber min=1 id="name" class="form-control" @bind-Value="lessonCreate.Index" />
                                                            <div class="text-danger"><ValidationMessage For="@(() => lessonCreate.Index)" /></div>

                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="form-group pt-2 col-12">
                                                        <label for="name" class="col-6 col-form-label">Mô tả :</label>
                                                        <div class="col-12">
                                                            <InputText class="form-control" @bind-Value="lessonCreate.Descriptions" />
                                                            <div class="text-danger"><ValidationMessage For="@(() => lessonCreate.Descriptions)" /></div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-6">
                                                <div class="row">
                                                    <div class="form-group pt-2 col-12">
                                                        <label for="name" class="col-6 col-form-label">Tên bài học:</label>
                                                        <div class="col-12">
                                                            <InputText id="name" class="form-control" @bind-Value="lessonCreate.LessonName" />
                                                            <div class="text-danger"><ValidationMessage For="@(() => lessonCreate.LessonName)" /></div>

                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="form-group pt-2 col-12">
                                                        <label for="name" class="col-6 col-form-label">Trạng thái:</label>
                                                        <div class="col-12">
                                                            <InputSelect @bind-Value="lessonCreate.Status" class="form-select">
                                                                <option value="0">Không hoạt động</option>
                                                                <option value="1">Đang hoạt động</option>
                                                            </InputSelect>
                                                        </div>
                                                    </div>
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                    <div class="row mt-3">
                                        <div class="col-4"></div>
                                        <div class="col-4" style="text-align:center">
                                            <div class="row">
                                                <div class="col-6"> <button type="submit" class="btn btn-primary me-2">Thêm bài học</button></div>
                                                <div class="col-6">  <a @onclick="()=>RedirectToListSubject()" class="btn btn-outline-danger">Quay Lại</a></div>
                                            </div>

                                        </div>
                                        <div class="col-4">
                                        </div>

                                    </div>
                                </EditForm>
                            </div>
                        }
                        else if (steps[current].Content == "LessonUpdate")
                        {
                            <h3 class="ps-0">Sửa bài học : @ListLesson.Where(c=>c.Id == _idLesson).Select(c=>c.LessonName).FirstOrDefault()</h3>
                            <EditForm Model="lessonUpdate" OnSubmit="UpdateLesson" class="card card-body bg-light mt-1">
                                <DataAnnotationsValidator />
                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-6">
                                            <div class="row">
                                                <div class="form-group pt-2 col-md-12">
                                                    <label for="name" class="col-6 col-form-label">Bài:</label>
                                                    <div class="col-md-12">
                                                        <Microsoft.AspNetCore.Components.Forms.InputNumber min=1 id="name" class="form-control" @bind-Value="lessonUpdate.Index" />
                                                        <div class="text-danger"><ValidationMessage For="@(() => lessonUpdate.Index)" /></div>

                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="form-group pt-2 col-md-12">
                                                    <label for="name" class="col-6 col-form-label">Mô tả :</label>
                                                    <div class="col-md-12">
                                                        <InputText class="form-control" @bind-Value="lessonUpdate.Descriptions" />
                                                        <div class="text-danger"><ValidationMessage For="@(() => lessonUpdate.Descriptions)" /></div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-6">
                                            <div class="row">
                                                <div class="form-group pt-2 col-md-12">
                                                    <label for="name" class="col-6 col-form-label">Tên bài học:</label>
                                                    <div class="col-md-12">
                                                        <InputText id="name" class="form-control" @bind-Value="lessonUpdate.LessonName" />
                                                        <div class="text-danger"><ValidationMessage For="@(() => lessonUpdate.LessonName)" /></div>

                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="form-group pt-2 col-md-12">
                                                    <label for="name" class="col-6 col-form-label">Trạng thái:</label>
                                                    <div class="col-md-12">
                                                        <InputSelect @bind-Value="lessonUpdate.Status" class="form-select">
                                                            <option value="0">Không hoạt động</option>
                                                            <option value="1">Đang hoạt động</option>
                                                        </InputSelect>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                                <div class="row mt-3">
                                    <div class="col-4"></div>
                                    <div class="col-4" style="text-align:center">
                                        <div class="row">
                                            <div class="col-6"> <button type="submit" class="btn btn-primary me-2">Cập Nhật</button></div>
                                            <div class="col-6"> <a @onclick="()=>RedirectToListSubject()" class="btn btn-outline-danger">Quay Lại</a></div>
                                        </div>

                                    </div>
                                    <div class="col-4">
                                    </div>

                                </div>
                            </EditForm>

                        }
                        else if (steps[current].Content == "SubjectCreate")
                        {
                            <EditForm Model="subjectCreate" OnSubmit="CreateSubject" class="card card-body bg-light">
                                <DataAnnotationsValidator />
                                @*<div class="row text-danger"><ValidationSummary /></div>*@
                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-2 pt-4">
                                            <div class="row">
                                                <img src="@subjectCreate.Image" width=195px height=232px style="object-fit:contain">
                                            </div>
                                            <div class="row">
                                                <div class="form-group">
                                                    <label for="image" class="col-12 col-form-label">Hình Ảnh:</label>
                                                    @if (@image != null)
                                                    {
                                                        <div class="col-12">
                                                            <ImageUpload OnChange="AssignImageUrlSub" />
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="col-12">
                                                            <ImageUpload OnChange="AssignImageUrlSub" />
                                                        </div>
                                                    }
                                                    <div class="text-danger"><ValidationMessage For="@(() => subjectCreate.Image)" /></div>

                                                </div>
                                            </div>

                                        </div>
                                        <div class="col-10 pt-1">
                                            <div class="row">
                                                <div class="form-group pt-2 col-6">
                                                    <label for="name" class="col-4 col-form-label">Mã Môn:</label>
                                                    <div class="col-12">
                                                        <InputText id="name" class="form-control" @bind-Value="subjectCreate.SubjectCode" />

                                                        <div class="text-danger"><ValidationMessage For="@(() => subjectCreate.SubjectCode)" /></div>
                                                    </div>
                                                </div>
                                                <div class="form-group pt-2 col-6">
                                                    <label for="name" class="col-4 col-form-label">Tên Môn:</label>
                                                    <div class="col-12">
                                                        <InputText id="name" class="form-control" @bind-Value="subjectCreate.SubjectName" />

                                                        <div class="text-danger"><ValidationMessage For="@(() => subjectCreate.SubjectName)" /></div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">

                                                <div class="form-group pt-2 col-6">
                                                    <label for="name" class="col-2 col-form-label">Số buổi:</label>
                                                    <div class="col-12">
                                                        <Microsoft.AspNetCore.Components.Forms.InputNumber min=10 max=29 id="name" class="form-control" @bind-Value="subjectCreate.TotalOfSub" />

                                                        <div class="text-danger"><ValidationMessage For="@(() => subjectCreate.TotalOfSub)" /></div>
                                                    </div>
                                                </div>
                                                <div class="form-group pt-2 col-6">
                                                    <label for="name" class="col-3 col-form-label">Trạng thái:</label>
                                                    <div class="col-12">
                                                        <InputSelect @bind-Value="subjectCreate.Status" class="form-select">

                                                            <option value="1">Đang hoạt động</option>
                                                            <option value="0">Không hoạt động</option>
                                                        </InputSelect>
                                                    </div>
                                                </div>

                                            </div>
                                            <div class="row">
                                                <div class="form-group pt-2 col-12">
                                                    <label for="name" class="col-3 col-form-label">Môn chính/Môn mẫu:</label>
                                                    <div class="col-12">
                                                        <InputSelect @bind-Value="subjectCreate.IsDemo" class="form-select">
                                                            <option value="false">Môn chính</option>
                                                            <option value="true">Môn mẫu</option>
                                                        </InputSelect>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="col-12">
                                                    <div class="row">
                                                        <div class="col-3">
                                                        </div>
                                                        <div class="col-6 mt-2 pt-4" style="text-align:center">
                                                            <div class="row">
                                                                <div class="col-6"><button type="submit" class="btn btn-primary me-2">Thêm Mới</button></div>
                                                                <div class="col-6"><a @onclick="()=>RedirectToListSubject()" class="btn btn-outline-danger">Quay Lại</a></div>
                                                            </div>
                                                        </div>
                                                        <div class="col-3">
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </EditForm>
                        }
                        else if (steps[current].Content == "SubjectUpdate")
                        {
                            <EditForm Model="subjectUpdate" OnSubmit="UpdateSubject" class="card card-body bg-light">
                                <DataAnnotationsValidator />
                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-2 pt-4">
                                            <div class="row">
                                                <img src="@subjectUpdate.Image" onerror="this.src='./css/images/Others/logoFPT.png'" width=195px height=232px style="object-fit:contain">
                                            </div>
                                            <div class="row">
                                                <div class="form-group">
                                                    <label for="image" class="col-12 col-form-label">Hình Ảnh:</label>
                                                    @if (@image != null)
                                                    {
                                                        <div class="col-12">
                                                            <ImageUpload OnChange="AssignImageUrlSubUpdate" />
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="col-12">
                                                            <ImageUpload OnChange="AssignImageUrlSubUpdate" />
                                                        </div>
                                                    }

                                                </div>
                                            </div>

                                        </div>
                                        <div class="col-10 pt-1">
                                            <div class="row">
                                                <div class="form-group pt-2 col-6">
                                                    <label for="name" class="col-6 col-form-label">Mã Môn:</label>
                                                    <div class="col-12">
                                                        <InputText id="name" class="form-control" @bind-Value="subjectUpdate.SubjectCode" disabled />
                                                        <ValidationMessage For="@(() => subjectUpdate.SubjectCode)" />
                                                    </div>
                                                </div>
                                                <div class="form-group pt-2 col-6">
                                                    <label for="name" class="col-6 col-form-label">Tên Môn:</label>
                                                    <div class="col-12">
                                                        <InputText id="name" class="form-control" @bind-Value="subjectUpdate.SubjectName" />
                                                        <div class="text-danger"><ValidationMessage For="@(() => subjectUpdate.SubjectName)" /></div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="form-group pt-2 col-6">
                                                    <label for="name" class="col-6 col-form-label">Số buổi:</label>
                                                    <div class="col-12">
                                                        <Microsoft.AspNetCore.Components.Forms.InputNumber min=10 max=29 id="name" class="form-control" @bind-Value="subjectUpdate.TotalOfSub" />
                                                        <ValidationMessage For="@(() => subjectUpdate.TotalOfSub)" />
                                                    </div>
                                                </div>
                                                <div class="form-group pt-2 col-6">
                                                    <label for="name" class="col-6 col-form-label">Trạng thái:</label>
                                                    <div class="col-12">
                                                        <InputSelect @bind-Value="subjectUpdate.Status" class="form-select">
                                                            <option value="0">Không hoạt động</option>
                                                            <option value="1">Đang hoạt động</option>
                                                        </InputSelect>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="form-group pt-2 col-12">
                                                    <label for="name" class="col-6 col-form-label">Môn chính/Môn mẫu:</label>
                                                    <div class="col-12">
                                                        <InputSelect @bind-Value="subjectUpdate.IsDemo" class="form-select">
                                                            <option value="false">Môn chính</option>
                                                            <option value="true">Môn mẫu</option>
                                                        </InputSelect>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="col-12">
                                                    <div class="row">
                                                        <div class="col-3">
                                                        </div>
                                                        <div class="col-6 mt-2 pt-4" style="text-align:center">
                                                            <div class="row">
                                                                <div class="col-6"> <button type="submit" class="btn btn-primary me-2">Cập Nhật</button></div>
                                                                <div class="col-6"><a @onclick="()=>RedirectToListSubject()" class="btn btn-outline-danger">Quay Lại</a></div>
                                                            </div>

                                                        </div>
                                                        <div class="col-3">
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </EditForm>
                        }
                        else if (steps[current].Content == "LessonContenCreate")
                        {
                            <EditForm Model="lessonContentCreate" OnSubmit="CreateLessonContent" class="card card-body bg-light mt-1">
                                <DataAnnotationsValidator />
                                <div class="row" style="text-align:center"><p>Lưu ý: Hãy chọn link trước khi nhập dữ liệu( nếu không có link thì ấn thêm)</p></div>
                                <div class="row">

                                    <div class="col-12">
                                        <div class="row">
                                            <div class="form-group row pt-2">
                                                <label for="name" class="col-6 col-form-label float-end">Link nội dung bài học:</label>
                                                <div class="col-9 mb-3">
                                                    <InputText id="name" class="form-control" @bind-Value="lessonContentCreate.Path" disabled />
                                                </div>
                                            </div>
                                            <div class="col-9">
                                                <div class="row">
                                                    <div class="mb-3">
                                                        <input autocomplete="on" class="form-control form-text" id="exampleFormControlInput1"
                                                   @oninput="((ChangeEventArgs e)=>ChangedLinkNameCreateLessonContent(e))"
                                                   list="txt" placeholder="Điền tên link cần tìm kiếm" />
                                                    </div>
                                                </div>
                                                <div class="row d-flex justify-content-center">
                                                    <datalist id="txt">
                                                        @if (lsDtoLink.Count != 0)
                                                        {

                                                            foreach (var item in lsDtoLink)
                                                            {
                                                                <option value="@item.ResourcesTitle"></option>
                                                            }
                                                        }
                                                    </datalist>
                                                </div>
                                            </div>
                                            <div class="col-3">
                                                <div class="col-md-12" style="text-align:center">
                                                    <a @onclick="()=>RedirectToCreatLink()" class="btn btn-success">Thêm Link</a>
                                                </div>
                                            </div>
                                        </div>


                                        <div class="form-group row pt-2">
                                            <label for="name" class="col-6 col-form-label float-end">Vị trí nội dung bài học:</label>
                                            <div class="col-md-9">
                                                <Microsoft.AspNetCore.Components.Forms.InputNumber min=1 max=100 id="name" class="form-control" @bind-Value="lessonContentCreate.Index"></Microsoft.AspNetCore.Components.Forms.InputNumber>
                                                <div class="text-danger"><ValidationMessage For="@(() => lessonContentCreate.Index)" /></div>
                                            </div>
                                        </div>
                                        <div class="form-group row pt-2">
                                            <label for="name" class="col-6 col-form-label float-end">Mã nội dung bài học:</label>
                                            <div class="col-md-9">
                                                <input id="name" class="form-control" value="@lessonContentCreate.LessonContentCode" disabled />
                                            </div>
                                        </div>
                                        <div class="form-group row pt-2">
                                            <label for="name" class="col-6 pe-0 col-form-label float-end">Tiêu đề nội dung bài học:</label>
                                            <div class="col-md-9">
                                                <InputText id="name" class="form-control" @bind-Value="lessonContentCreate.LessonContentName" />
                                                <div class="text-danger"><ValidationMessage For="@(() => lessonContentCreate.LessonContentName)" /></div>
                                            </div>
                                        </div>
                                        <div class="form-group row pt-2">
                                            <label for="name" class="col-6 col-form-label float-end">Nội dung bài học:</label>
                                            <div class="col-md-9">
                                                <InputTextArea rows=3 cols=55 id="name" class="form-control" @bind-Value="lessonContentCreate.Content" />
                                                <div class="text-danger"><ValidationMessage For="@(() => lessonContentCreate.Content)" /></div>

                                            </div>
                                        </div>
                                        <div class="form-group row pt-2">
                                            <label for="name" class="col-6 col-form-label float-end">Mô tả:</label>
                                            <div class="col-md-9">
                                                <InputText id="name" class="form-control" @bind-Value="lessonContentCreate.Descriptions" />
                                                <div class="text-danger"><ValidationMessage For="@(() => lessonContentCreate.Descriptions)" /></div>
                                            </div>
                                        </div>
                                        <div class="form-group row pt-2">
                                            <label for="name" class="col-6 col-form-label float-end">Trạng thái:</label>
                                            <div class="col-md-9">
                                                <InputSelect class="form-select" @bind-Value="lessonContentCreate.Status">
                                                    <option value="0">Không hoạt động</option>
                                                    <option value="1">Đang hoạt động</option>
                                                </InputSelect>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="row mt-4">
                                    <div class="col-md-4">
                                    </div>
                                    <div class="col-md-4 text-center">
                                        <div class="row">
                                            <div class="col-6">  <button type="submit" class="btn btn-success me-2">Tạo mới</button></div>
                                            <div class="col-6"> <a @onclick="()=>RedirectToListSubject()" class="btn btn-outline-danger">Quay Lại</a></div>
                                        </div>

                                    </div>
                                    <div class="col-md-4">
                                    </div>
                                </div>

                            </EditForm>

                        }
                        else if (steps[current].Content == "LessonContenUpdate")
                        {
                            <EditForm Model="lessonContentUpdate" OnSubmit="UpdateLessonContents" class="card card-body bg-light mt-1">
                                <DataAnnotationsValidator />
                                <div class="row" style="text-align:center"><p>Lưu ý: Hãy chọn link trước khi nhập dữ liệu( nếu không có link thì ấn thêm )</p></div>
                                <div class="row">

                                    <div class="col-12">
                                        <div class="row">
                                            <div class="form-group row pt-2">
                                                <label for="name" class="col-6 col-form-label float-end">Link nội dung bài học:</label>
                                                <div class="col-9 mb-3">
                                                    <InputText id="name" class="form-control" @bind-Value="lessonContentCreate.Path" disabled />
                                                </div>
                                            </div>
                                            <div class="col-9">
                                                <div class="row">
                                                    <div class="mb-3">
                                                        <input autocomplete="on" class="form-control form-text" id="exampleFormControlInput1"
                                                   @oninput="((ChangeEventArgs e)=>ChangedLinkNameUpdateLessonContent(e))"
                                                   list="txt" placeholder="Điền tên link cần tìm kiếm" />
                                                    </div>
                                                </div>
                                                <div class="row d-flex justify-content-center">
                                                    <datalist id="txt">
                                                        @if (lsDtoLink.Count != 0)
                                                        {

                                                            foreach (var item in lsDtoLink)
                                                            {
                                                                <option value="@item.ResourcesTitle"></option>
                                                            }
                                                        }
                                                    </datalist>
                                                </div>
                                            </div>
                                            <div class="col-3">
                                                <div class="col-md-12" style="text-align:center">
                                                    <a @onclick="()=>RedirectToCreatLink()" class="btn btn-success">Thêm Link</a>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group row pt-2">
                                            <label for="name" class="col-6 col-form-label float-end">Vị trí nội dung bài học:</label>
                                            <div class="col-md-9">
                                                <Microsoft.AspNetCore.Components.Forms.InputNumber min=1 max=100 id="name" class="form-control" @bind-Value="lessonContentUpdate.Index"></Microsoft.AspNetCore.Components.Forms.InputNumber>
                                                <div class="text-danger"><ValidationMessage For="@(() => lessonContentUpdate.Index)" /></div>
                                            </div>
                                        </div>
                                        <div class="form-group row pt-2">
                                            <label for="name" class="col-6 col-form-label float-end">Mã nội dung bài học:</label>
                                            <div class="col-md-9">
                                                <input id="name" class="form-control" value="@lessonContentUpdate.LessonContentCode" disabled />
                                            </div>
                                        </div>
                                        <div class="form-group row pt-2">
                                            <label for="name" class="col-6 pe-0 col-form-label float-end">Tiêu đề nội dung bài học:</label>
                                            <div class="col-md-9">
                                                <InputText id="name" class="form-control" @bind-Value="lessonContentUpdate.LessonContentName" />
                                                <div class="text-danger"><ValidationMessage For="@(() => lessonContentUpdate.LessonContentName)" /></div>
                                            </div>
                                        </div>
                                        <div class="form-group row pt-2">
                                            <label for="name" class="col-6 col-form-label float-end">Nội dung bài học:</label>
                                            <div class="col-md-9">
                                                <InputTextArea rows=3 cols=55 id="name" class="form-control" @bind-Value="lessonContentUpdate.Content" />
                                                <div class="text-danger"><ValidationMessage For="@(() => lessonContentUpdate.Content)" /></div>

                                            </div>
                                        </div>
                                        <div class="form-group row pt-2">
                                            <label for="name" class="col-6 col-form-label float-end">Mô tả:</label>
                                            <div class="col-md-9">
                                                <InputText id="name" class="form-control" @bind-Value="lessonContentUpdate.Descriptions" />
                                                <div class="text-danger"><ValidationMessage For="@(() => lessonContentUpdate.Descriptions)" /></div>
                                            </div>
                                        </div>
                                        <div class="form-group row pt-2">
                                            <label for="name" class="col-6 col-form-label float-end">Trạng thái:</label>
                                            <div class="col-md-9">
                                                <InputSelect class="form-select" @bind-Value="lessonContentUpdate.Status">
                                                    <option value="0">Không hoạt động</option>
                                                    <option value="1">Đang hoạt động</option>
                                                </InputSelect>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="row mt-4">
                                    <div class="col-md-4">
                                    </div>
                                    <div class="col-md-4 text-center">
                                        <div class="row">
                                            <div class="col-6"> <button type="submit" class="btn btn-success me-2">Update</button>  </div>
                                            <div class="col-6">   <a @onclick="()=>RedirectToListSubject()" class="btn btn-outline-danger">Quay Lại</a></div>
                                        </div>


                                    </div>
                                    <div class="col-md-4">
                                    </div>
                                </div>

                            </EditForm>
                        }
                        else if (steps[current].Content == "LinkCreate")
                        {
                            <EditForm Model="LinkCreate" OnSubmit="CreateLink" class="card card-body bg-light mt-1">
                                <DataAnnotationsValidator />

                                <div class="form-group">
                                    <div class="row">
                                        <div class="col-lg-6 pt-1 pl-5">
                                            @if (LinkCreate.PathId() != null)
                                            {
                                                <iframe class="modal-xl" style="height: 308px;width:480px;padding-top: 10px;" src='https://www.youtube.com/embed/@LinkCreate.PathId()' frameborder='0' allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe>
                                            }
                                            else
                                            {
                                                <h5>Video sẽ được hiển thị ở đây</h5>
                                            }
                                        </div>
                                        <div class="col-lg-6">
                                            <div class="form-group pt-2 ">
                                                <label for="name" class="form-label">Tiêu đề:</label>
                                                <div class="text-danger">
                                                    <InputText class="form-control" @bind-Value="LinkCreate.ResourcesTitle"></InputText>
                                                    <ValidationMessage For="()=>LinkCreate.ResourcesTitle"></ValidationMessage>
                                                </div>
                                            </div>
                                            <div class="form-group pt-2">
                                                <label for="name" class="form-label">Đường dẫn:</label>
                                                <div class="text-danger">
                                                    <InputText class="form-control" @bind-Value="LinkCreate.Path"></InputText>
                                                    <ValidationMessage For="()=>LinkCreate.Path"></ValidationMessage>
                                                </div>
                                            </div>
                                            <div class="form-group pt-2">
                                                <label for="name" class="form-label">Mô tả:</label>
                                                <div class="text-danger">
                                                    <InputText class="form-control" @bind-Value="LinkCreate.Descriptions"></InputText>
                                                    <ValidationMessage For="()=>LinkCreate.Descriptions"></ValidationMessage>
                                                </div>
                                            </div>
                                            <div class="form-group pt-2 ">
                                                <label for="name" class="form-label">Trạng thái:</label>
                                                <div class="text-danger">
                                                    <InputSelect class="form-select" @bind-Value="LinkCreate.Status">
                                                        <option value="0">Không hoạt động</option>
                                                        <option value="1">Đang Hoạt động</option>
                                                    </InputSelect>
                                                </div>
                                            </div>
                                            <div class="form-group row pt-2">
                                                <label for="name" class="col-6 col-form-label float-end">Chọn môn:</label>
                                                <div>
                                                    <InputSelect class="form-select" @bind-Value="LinkCreate.IdSubject">
                                                        <option value="00000000-0000-0000-0000-000000000000">Chọn môn </option>
                                                        @if (lstSubjectDtosCreateLink != null)
                                                        {
                                                            @foreach (var item in lstSubjectDtosCreateLink.OrderBy(c => c.SubjectName))
                                                            {
                                                                <option value="@item.Id">@item.SubjectName</option>
                                                            }
                                                        }
                                                    </InputSelect>
                                                    <div class="text-danger"><ValidationMessage For="@(() => LinkCreate.IdSubject)" /></div>
                                                </div>

                                            </div>
                                        </div>

                                        <div class="justify-content-center pt-3 mb-2">
                                            <div class="p-2">
                                                <div class="row">

                                                    @if (_idLesson == Guid.Empty)
                                                    {
                                                        <div class="col-6">  <button type="submit" class="btn btn-success">Thêm Mới Link</button></div>
                                                        <div class="col-6"> <a @onclick="()=>RedirectToListSubject()" class="btn btn-outline-danger">Quay Lại môn học</a></div>

                                                    }
                                                    else
                                                    {
                                                        <div style="width:23%"> </div>
                                                        <div style="width:16%">  <button type="submit" class="btn btn-success">Thêm Mới Link</button></div>
                                                        <div style="width:19%"> <a @onclick="()=>RedirectToListSubject()" class="btn btn-outline-danger">Quay Lại môn học</a></div>
                                                        <div style="width:19%"> <a @onclick="()=>RedirectToCreatLessonContent(_idSubject,_idLesson)" class="btn btn-outline-danger">Quay Lại nội dung</a></div>
                                                        <div style="width:23%"> </div>
                                                    }
                                                </div>

                                            </div>
                                            <div class="p-2">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </EditForm>
                        }
                    </div>
                    <div class="col-1"> </div>
                </div>
            }
        </div>

    </div>
}
else
{
    <span>
        <LoadingIndicator></LoadingIndicator>
    </span>

}
<FPLSP.Components.Comfirmation ConfirmationMessage="Bạn có chắc muốn xóa   không?"
                               ConfirmationTitle="Xóa môn học"
                               @ref="DeleteConfirmationSubject"
                               ConfirmationChanged="OnConfirmationDeleteSubject"></FPLSP.Components.Comfirmation>
<FPLSP.Components.Comfirmation ConfirmationMessage="Bạn có chắc muốn xóa  không?"
                               ConfirmationTitle="Xóa bài học"
                               @ref="DeleteConfirmationLesson"
                               ConfirmationChanged="OnConfirmationDeleteLesson"></FPLSP.Components.Comfirmation>
<FPLSP.Components.Comfirmation ConfirmationMessage="Bạn có chắc muốn xóa  không?"
                               ConfirmationTitle="Xóa nôi dung"
                               @ref="DeleteConfirmationLessonContent"
                               ConfirmationChanged="OnConfirmationDeleteLesson"></FPLSP.Components.Comfirmation>
<FPLSP.Components.Comfirmation ConfirmationMessage="Bạn có chắc muốn xóa không?"
                               ConfirmationTitle="Xóa link"
                               @ref="DeleteConfirmationLink"
                               ConfirmationChanged="OnConfirmationDeleteLesson"></FPLSP.Components.Comfirmation>
<FPLSP.Components.Comfirmation ConfirmationMessage="Bạn muốn thêm bài học cho môn vừa tạo không?"
                               ConfirmationTitle="Thêm bài học"
                               @ref="CreateConfirmationLesson"
                               ConfirmationChanged="OnConfirmationCreateLesson"></FPLSP.Components.Comfirmation>
<FPLSP.Components.Comfirmation ConfirmationMessage="Bạn muốn thêm nôi dung cho bài học vừa tạo không?"
                               ConfirmationTitle="Thêm nôi dung"
                               @ref="CreateConfirmationLessonContent"
                               ConfirmationChanged="OnConfirmationCreateLessonContentToLesson"></FPLSP.Components.Comfirmation>
<FPLSP.Components.Comfirmation ConfirmationMessage="Bạn muốn thêm nôi dung cho link vừa tạo không?"
                               ConfirmationTitle="Thêm nôi dung"
                               @ref="CreateConfirmationLessonContentToLink"
                               ConfirmationChanged="OnConfirmationCreateLessonContentToLesson"></FPLSP.Components.Comfirmation>
@inject IMessageService message
@code {

    public class StepItem
    {
        public string Title { get; set; }
        public string Content { get; set; }
    }

    public int current { get; set; } = 0;

    public StepItem[] steps =
    {
        new StepItem {Title = "Danh sách môn học", Content = ""},
        new StepItem {Title = "Thêm môn học", Content = "SubjectCreate"},
        new StepItem {Title = "Sửa môn học", Content = "SubjectUpdate"},
        new StepItem {Title = "Thêm bài học", Content = "LessonCreate"},
        new StepItem {Title = "Sửa bài học", Content = "LessonUpdate"},
        new StepItem {Title = "Thêm link tài nguyên", Content = "LinkCreate"},
        new StepItem {Title = "Thêm nôi dung bài học", Content = "LessonContenCreate"},
        new StepItem {Title = "Sửa nội dung bài học", Content = "LessonContenUpdate"},
    };


}
@code {
    public List<SubjectDto> SubjectCPList { get; set; } = new List<SubjectDto>();
    public MetaData MetaData { get; set; } = new MetaData();
    [Parameter]
    public string idpecNonDecrypt { get; set; }
    public DateTime time { get; set; }
    public TimeSpan tg;
    public string idpec = "";
    public string image { get; set; }
    //private PagingParameters _subjectParameters = new PagingParameters();
    [Inject]
    public NavigationManager NavigationManager { get; set; }
    [Inject]
    public ISubjectClient _iSubjectClient { get; set; }

    private SubjectCPSearch SubjectListSearch = new SubjectCPSearch();
    public string Error { get; set; }
    [Inject]
    public ISpecializedCPRepo _iSpecialized { get; set; }
    [Inject]
    public ILessonCPRepo _iLessonClient { get; set; }

    [Inject]
    public CryptoServices _cryptoServices { get; set; }

    [Inject]
    public ILessonContentCPRepo _iLessonContentClient { get; set; }
    [Inject]
    public IResourceLinkRepo _iResourcelinkClient { get; set; }
    public SpecializedDto specializedDto = new SpecializedDto();
    protected Comfirmation DeleteConfirmationSubject { get; set; }
    protected Comfirmation DeleteConfirmationLesson { get; set; }
    protected Comfirmation DeleteConfirmationLessonContent { get; set; }
    protected Comfirmation DeleteConfirmationLink { get; set; }

    protected Comfirmation CreateConfirmationLesson { get; set; }
    protected Comfirmation CreateConfirmationLessonContent { get; set; }
    protected Comfirmation CreateConfirmationLessonContentToLink { get; set; }
    public Guid idSubject { get; set; }
    private TimelineAlign _timelineAlign { get; set; } = TimelineAlign.Start;
    private int stt = 0;
    private SubjectCreateVM subjectCreate = new SubjectCreateVM();
    private SubjectUpdateVM subjectUpdate = new SubjectUpdateVM();
    private List<Guid> _removeSubject = new List<Guid>();
    public List<LessonDto> ListLesson { get; set; } = new List<LessonDto>();
    public List<LessonContentDto> ListLessonContent { get; set; } = new List<LessonContentDto>();
    private List<ResourceLinkDto> lsDtoLink;
    private LessonListSearch _parametersLesson = new LessonListSearch();
    private LessonContentListSearch _parametersLessonContent = new LessonContentListSearch();
    private bool Check = false;
    [Inject] private IToastService _toastService { get; set; }
    private Guid _idSubject;
    private Guid _idLesson;
    private Guid _idLessonContent;
    private Guid _idResourceLink;
    private string _idPathLink;

    string flag;

    List<SubjectDto> lstSubjectDtosCreateLink = new List<SubjectDto>();
    // Lesson
    private SubjectDto subject { get; set; } = new SubjectDto();
    private LessonCreateVM lessonCreate = new LessonCreateVM();
    private LessonUpdateVM lessonUpdate = new LessonUpdateVM();

    private LessonContentCreateVM lessonContentCreate = new LessonContentCreateVM();
    public LessonContentUpdateVM lessonContentUpdate = new LessonContentUpdateVM();

    private ResourceLinkCreateVM LinkCreate = new ResourceLinkCreateVM();
    private ResourceLinkUpdateVM LinkUpdate = new ResourceLinkUpdateVM();
    Uri uri;
    string maxlevel = "";
    string IdCoSo = "";
    protected async override Task OnInitializedAsync()
    {
        idpec = _cryptoServices.Decrypt(idpecNonDecrypt.Replace("I0H", "/"));
        _idLesson = Guid.Empty;
        _idLessonContent = Guid.Empty;
        _idResourceLink = Guid.Empty;
        _idPathLink = "";
        flag = null;
        SubjectListSearch.Status = 1;
        lstSubjectDtosCreateLink = await _iSubjectClient.GetAllSubjectByIdSpecialzed(Guid.Parse(idpec));
        uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        if (string.IsNullOrEmpty(uri.Query) == false)
        {
            var urifist = uri.Query.Split("?")[1];
            maxlevel = _cryptoServices.Decrypt(urifist.Split("LDN01")[0].Replace("I0H", "/"));
            IdCoSo = _cryptoServices.Decrypt(urifist.Split("LDN01")[1].Replace("I0H", "/"));
        }
        await GetTasks();

    }
    #region Lesson
    private async Task RedirectToCreatLesson(Guid idSubject)
    {
        lessonCreate = new LessonCreateVM();
        lessonCreate.Id = Guid.NewGuid();
        var countlesson = await _iLessonClient.GetAll((_idSubject));
        lessonCreate.Status = 1;
        lessonCreate.Index = countlesson.Count() + 1;
        _idSubject = idSubject;
        await GetTasks();
        flag = "LessonCreate";
        current = 3;

    }
    private async Task RedirectToUpdateLesson(Guid idsubject, Guid idLesson)
    {
        _idSubject = idsubject;
        _idLesson = idLesson;
        var lessondb = await _iLessonClient.GetbyId((idLesson));

        lessonUpdate = new LessonUpdateVM()
            {
                Status = lessondb.Status,
                LessonName = lessondb.LessonName,
                Descriptions = lessondb.Descriptions,
                Index = lessondb.Index
            };
        await GetTasks();
        flag = "LessonUpdate";
        current = 4;

    }
    Guid FlagLessonId = Guid.Empty;
    private async Task CreateLesson()
    {

        var result = await _iLessonClient.Create((_idSubject), lessonCreate);
        if (result != 1)
        {
            _toastService.ShowError("Thêm bài học không thành công");
            await GetTasks();
        }
        else
        {
            _toastService.ShowSuccess("Thêm bài học thành công");
            CreateConfirmationLessonContent.show();
            FlagLessonId = lessonCreate.Id;
            lessonCreate = new LessonCreateVM();
            await GetTasks();
        }
    }
    public async Task OnConfirmationCreateLessonContentToLesson(bool confirmed)
    {
        if (confirmed)
        {
            await RedirectToCreatLessonContent(_idSubject, FlagLessonId);
        }

    }
    private async Task UpdateLesson()
    {

        var result = await _iLessonClient.Update((_idLesson), lessonUpdate);

        if (result != 1)
        {
            Error = "Lỗi";
        }
        else
        {
            _toastService.ShowSuccess("Cập nhật thành công");

            await GetTasks();
        }
    }
    public async void DeleteLesson(Guid id)
    {
        _idLesson = id;
        DeleteConfirmationLesson.show();
    }
    public async Task OnConfirmationDeleteLesson(bool deleteconfirmed)
    {

        stt = 0;
        if (deleteconfirmed && _idLesson == null)
        {
            _toastService.ShowError("Bạn chưa chọn đối tượng để đổi trạng thái");
            await GetTasks();

        }
        else if (deleteconfirmed && _idLesson != null)
        {
            var result = await _iLessonClient.Delete((_idLesson));
            if (result == 1)
            {
                _toastService.ShowSuccess("Đổi trạng thái thành công");
                await GetTasks();
            }
            else
            {
                _toastService.ShowError("Đổi trạng thái thất bại");
                await GetTasks();

            }
        }
        _idLesson = Guid.Empty;

        Check = false;
    }
    #endregion

    #region LessonContent
    private async Task RedirectToCreatLessonContent(Guid idSubject, Guid idLesson)
    {
        lessonContentCreate = new LessonContentCreateVM();
        _idSubject = idSubject;
        _idLesson = idLesson;
        var alllesson = await _iLessonContentClient.GetAll((_idLesson));
        if (alllesson.Count() < 9)
        {
            lessonContentCreate.LessonContentCode = "BH0" + (alllesson.Count() + 1);
        }
        else
        {
            lessonContentCreate.LessonContentCode = "BH" + (alllesson.Count() + 1);
        }
        lessonContentCreate.Status = 1;
        var countlessoncontent = await _iLessonContentClient.GetAll((_idLesson));
        lessonContentCreate.Index = countlessoncontent.Count() + 1;
        await GetTasks();
        flag = "LessonContenCreate";
        current = 6;

    }
    private void ChangedLinkNameCreateLessonContent(ChangeEventArgs args)
    {
        foreach (var item in lsDtoLink)
        {
            if (item.ResourcesTitle == Convert.ToString(args.Value))
            {
                lessonContentCreate.Path = item.Path;
            }
        }

    }
    private void ChangedLinkNameUpdateLessonContent(ChangeEventArgs args)
    {
        foreach (var item in lsDtoLink)
        {
            if (item.ResourcesTitle == Convert.ToString(args.Value))
            {
                lessonContentUpdate.Path = item.Path;
            }
        }

    }
    private async Task RedirectToUpdateLessonContent(Guid idSubject, Guid idLesson, Guid idLessonContent)
    {

        _idSubject = idSubject;
        _idLesson = idLesson;
        _idLessonContent = idLessonContent;
        lessonContentUpdate = await _iLessonContentClient.GetbyId((idLessonContent));
        var a = lessonContentUpdate.PathId();
        await GetTasks();
        flag = "LessonContenUpdate";
        current = 7;

    }
    private async Task CreateLessonContent()
    {
        var result = await _iLessonContentClient.Create(_idLesson, lessonContentCreate);
        if (result != 1)
        {
            _toastService.ShowError("Lỗi! Vui lòng thử lại");
            await GetTasks();
        }
        else
        {
            _toastService.ShowSuccess("Thêm thành công");
            lessonContentCreate = new LessonContentCreateVM();
            await GetTasks();
        }
    }
    private async Task UpdateLessonContents()
    {

        var result = await _iLessonContentClient.Update((_idLessonContent), lessonContentUpdate);
        if (result != 1)
        {
            _toastService.ShowError("lỗi! Vui lòng thử lại");
            await GetTasks();
        }
        else
        {
            _toastService.ShowSuccess("Cập nhật thành công");
            await GetTasks();
        }
    }
    public async void DeleteLessonContent(Guid id)
    {
        _idLesson = id;
        DeleteConfirmationLessonContent.show();
    }
    public async Task OnConfirmationDeleteLessonContent(bool deleteconfirmed)
    {

        stt = 0;
        if (deleteconfirmed && _idLessonContent == Guid.Empty)
        {
            _toastService.ShowError("Bạn chưa chọn đối tượng để đổi trạng thái");
            await GetTasks();
            //NavigationManager.NavigateTo($"/lesson/{idspec}/{idsubject}");
        }
        else if (deleteconfirmed && _idLessonContent != Guid.Empty)
        {
            var result = await _iLessonContentClient.Delete((_idLessonContent));
            if (result == 1)
            {
                _toastService.ShowSuccess("Đổi trạng thái thành công");
                await GetTasks();
            }
            else
            {
                _toastService.ShowError("Đổi trạng thái thất bại");
                await GetTasks();

            }
        }

        _idLessonContent = Guid.Empty;

        Check = false;
    }
    #endregion


    #region Link
    private async Task RedirectToCreatLink()
    {
        LinkCreate = new ResourceLinkCreateVM();
        flag = "LinkCreate";
        current = 5;


    }
    public async Task OnConfirmationCreateLessonContentToLink(bool confirmed)
    {
        if (confirmed)
        {
            await RedirectToCreatLessonContent(_idSubject, FlagLessonId);
            _idPathLink = LinkCreate.Path;
        }

    }
    private async Task RedirectToUpdateLink()
    {
        flag = "LinkUpdate";
        LinkUpdate = await _iResourcelinkClient.GetbyId((_idResourceLink));

    }
    private async Task CreateLink()
    {
        var allResourceLink = await _iResourcelinkClient.GetAllAsync();
        var title = allResourceLink.Where(p => p.ResourcesTitle == LinkCreate.ResourcesTitle);
        var path = allResourceLink.Where(p => p.Path == LinkCreate.Path);
        if (title.Count() > 0)
        {
            _toastService.ShowError("Tiêu đề đã tồn tại");
        }
        else
        {

            var result = await _iResourcelinkClient.Create(LinkCreate);

            if (result != 1)
            {
                _toastService.ShowError("Lỗi! Vui lòng thử lại");
            }
            else
            {
                _toastService.ShowSuccess("Thêm mới thành công");
                LinkCreate = new ResourceLinkCreateVM();
                CreateConfirmationLessonContentToLink.show();
                await GetTasks();
            }
        }

    }

    private async Task UpdateLink()
    {

        var result = await _iResourcelinkClient.Update((_idResourceLink), LinkUpdate);

        if (result != 1)
        {
            _toastService.ShowError("Lỗi! Vui lòng thử lại");
            await GetTasks();
        }
        else
        {
            _toastService.ShowSuccess("Cập nhật thành công");
            await GetTasks();
        }
    }
    public async void DeleteLink(Guid id)
    {
        _idLesson = id;
        DeleteConfirmationLink.show();
    }
    public async Task OnConfirmationDeleteLink(bool deleteconfirmed)
    {

        stt = 0;
        if (deleteconfirmed && _idResourceLink == null)
        {
            _toastService.ShowError("Bạn chưa chọn đối tượng để đổi trạng thái");
            await GetTasks();
            //NavigationManager.NavigateTo($"/lesson/{idspec}/{idsubject}");
        }
        else if (deleteconfirmed && _idResourceLink != null)
        {
            var result = await _iResourcelinkClient.Delete((_idResourceLink));
            if (result == 1)
            {
                _toastService.ShowSuccess("Đổi trạng thái thành công");
                await GetTasks();
            }
            else
            {
                _toastService.ShowError("Đổi trạng thái thất bại");
                await GetTasks();
            }
        }

        _idResourceLink = Guid.Empty;

        Check = false;
    }
    #endregion
    #region Subject
    private async Task Undo()
    {
        SubjectListSearch.Name = "";
        SubjectListSearch.Status = 1;
        SubjectListSearch.PageNumber = 1;
        await GetTasks();

    }
    private void AssignImageUrlSubUpdate(string Image) => subjectUpdate.Image = Image;

    private async Task UpdateSubject()
    {
        var result = await _iSubjectClient.UpdateSubject((_idSubject), subjectUpdate);
        if (result != 1)
        {
            _toastService.ShowError("Lỗi! Vui lòng thử lại");
            await GetTasks();
        }
        else
        {
            _toastService.ShowSuccess("Cập nhật thành công");
            await GetTasks();

        }
    }
    private void AssignImageUrlSubject(string imgUrl)
    {
        subject.Image = imgUrl;
    }
    private void AssignImageUrlSub(string imgUrl)
    {
        subjectCreate.Image = imgUrl;
    }
    Guid FlagSubjectId = Guid.Empty;
    private async Task CreateSubject()
    {

        subjectCreate.idspec = Guid.Parse(idpec);
        subjectCreate.Id = Guid.NewGuid();
        TimeSpan date = subjectCreate.EndDay - subjectCreate.StartDay;
        TimeSpan day = DateTime.Now - subjectCreate.EndDay;
        var allsubject = await _iSubjectClient.GetAllSubjectByIdSpecialzed(Guid.Parse(idpec));
        var subjectcode = allsubject.Where(p => p.SubjectCode == subjectCreate.SubjectCode).ToList();
        if (subjectcode.Count > 0)
        {
            _toastService.ShowError("Mã môn học đã được sử dụng");

        }
        else
        {
            var result = await _iSubjectClient.CreateSubject(subjectCreate);

            if (result != 1)
            {
                _toastService.ShowError("Lỗi");
            }
            else
            {
                _toastService.ShowSuccess("Thêm thành công");
                FlagSubjectId = subjectCreate.Id;
                subjectCreate = new SubjectCreateVM();
                CreateConfirmationLesson.show();
            }
        }



    }
    private async Task TimKiem()
    {
        await GetTasks();
    }
    private async Task ChangeValue(int value)
    {
        SubjectListSearch.Status = value;
        SubjectListSearch.Name = SubjectListSearch.Name;
        await GetTasks();
    }
    private void RedirectToCreate(string id)
    {
        var a = id.Replace("/", "I0H");
        var url = Path.Combine($"/createsubject/{a}?{_cryptoServices.Encrypt((maxlevel).ToString()).Replace("/", "I0H") + "LDN01" + _cryptoServices.Encrypt((IdCoSo).ToString()).Replace("/", "I0H")}");
        NavigationManager.NavigateTo(url);
    }
    public async void DeleteSubject(Guid id)
    {
        _idSubject = id;
        DeleteConfirmationSubject.show();
    }
    private async Task RedirectToListSubject()
    {

        _idLesson = Guid.Empty;
        _idLessonContent = Guid.Empty;
        _idResourceLink = Guid.Empty;
        _idPathLink = "";
        current = 0;
    }
    private async Task RedirectToSubjectCreate()
    {
        subjectCreate = new SubjectCreateVM();
        current = 1;
    }
    public async void RedirectToUpdateSubject(Guid id)
    {

        _idSubject = id;
        subjectUpdate = await _iSubjectClient.GetUpdateSubjectbyId((_idSubject));
        flag = "SubjectUpdate";
        current = 2;

    }
    public async Task OnConfirmationCreateLesson(bool confirmed)
    {
        if (confirmed)
        {
            await RedirectToCreatLesson(FlagSubjectId);
        }

    }
    public async Task OnConfirmationDeleteSubject(bool deleteconfirmed)
    {

        stt = 0;
        if (deleteconfirmed && _idSubject == null && _removeSubject.Count == 0)
        {
            _toastService.ShowError("Bạn chưa chọn đối tượng để đổi trạng thái");
            await GetTasks();

        }
        else if (deleteconfirmed && _idSubject != null)
        {
            var result = await _iSubjectClient.DeleteSubject((_idSubject));
            if (result == 1)
            {
                _toastService.ShowSuccess("Đổi trạng thái thành công");
                await GetTasks();

            }
            else
            {
                _toastService.ShowError("Đổi trạng thái thất bại");
                await GetTasks();

            }
        }
        else if (deleteconfirmed && _removeSubject != null)
        {

            var result = await _iSubjectClient.RemoveListSubjectCP(_removeSubject);
            if (result)
            {
                _toastService.ShowSuccess("Đổi trạng thái thành công");
                await GetTasks();

            }
            else
            {
                _toastService.ShowError("Đổi trạng thái thất bại");

                await GetTasks();

            }
        }

        _idSubject = Guid.Empty;
        _removeSubject = null;

        Check = false;
    }
    #endregion





    private void RedirectToUpdate(Guid id, string idspecialized)
    {
        var url = Path.Combine("/updatesubjetc/", id.ToString(), idspecialized);
        NavigationManager.NavigateTo(url);
    }

    //private async Task RedirectToLesson(string idspec, Guid idsubject)
    //{
    //    var url = Path.Combine("/lessonCreate/" + idspec.ToString() + "/" + idsubject.ToString());
    //    NavigationManager.NavigateTo(url);
    //}
    private async Task RedirectToQuiz(string idspecialzed, Guid idsubject)
    {
        var url = Path.Combine("/MainQuizsCP/" + _cryptoServices.Encrypt((idspecialzed).ToString()).Replace("/", "I0H") + "/" + _cryptoServices.Encrypt((idsubject.ToString()).ToString()).Replace("/", "I0H") + $"?{_cryptoServices.Encrypt((maxlevel).ToString()).Replace("/", "I0H") + "LDN01" + _cryptoServices.Encrypt((IdCoSo).ToString()).Replace("/", "I0H")}");
        NavigationManager.NavigateTo(url);
    }

    private async Task RedirectToLink()
    {
        var url = Path.Combine("/resourcelink/" + _cryptoServices.Encrypt((idpec).ToString()).Replace("/", "I0H") + "/" + _cryptoServices.Encrypt((idSubject).ToString()).Replace("/", "I0H") + "/" + _cryptoServices.Encrypt((_idLesson).ToString()).Replace("/", "I0H") + $"?{_cryptoServices.Encrypt((maxlevel).ToString()).Replace("/", "I0H") + "LDN01" + _cryptoServices.Encrypt((IdCoSo).ToString()).Replace("/", "I0H")}");
        NavigationManager.NavigateTo(url);
    }


    private async Task GetTasks()
    {
        specializedDto = await _iSpecialized.GetbyId(Guid.Empty, Guid.Parse(idpec));
        // Link
        lsDtoLink = await _iResourcelinkClient.GetAllAsync();
        lsDtoLink = lsDtoLink.Where(c => c.IdSubject == _idSubject || c.IdSubject == Guid.Empty).ToList();
        //// Get Task Lesson Content
        //var pagingResponseLessonContent = await _iLessonContentClient.GetLessons(Guid.Parse(idlesson), _parametersLesson);
        //ListLessonContent = pagingResponseLessonContent.Items;
        ListLessonContent = await _iLessonContentClient.GetAllLessonContent();
        //// Get Task Lesson
        //var pagingResponseLesson = await _iLessonClient.GetLessons(Guid.Parse(idsubject), _parametersLessonContent);
        //ListLesson = pagingResponseLesson.Items;
        ListLesson = await _iLessonClient.GetAllLesson();
        // Get task Subject
        if (idSubject != Guid.Empty)
        {
            subject = await _iSubjectClient.GetSubjectbyId((idSubject));
        }
        var pagingResponseSubject = await _iSubjectClient.GetSubjects(Guid.Parse(idpec), SubjectListSearch);
        stt = 0;
        SubjectCPList = pagingResponseSubject.Items;
        foreach (var item in SubjectCPList)
        {
            item.SubjectName = item.SubjectCode + " - " + item.SubjectName;
        }
        MetaData = pagingResponseSubject.MetaData;
        time = DateTime.Now;
        if (SubjectCPList.Count() == 0)
        {
            await RedirectToSubjectCreate();
        }


    }
    private async Task SelectedPage(int page)
    {

        SubjectListSearch.PageNumber = page;
        Check = false;
        await GetTasks();
    }
    public async Task OnDelete(Guid id)
    {
        _idSubject = id;
        DeleteConfirmationSubject.show();
    }


    //void CheckManual(Guid reportId, bool check)
    //{
    //    stt = 0;
    //    if (check == true)
    //    {
    //        foreach (var x in SubjectCPList.Where(c => c.Id == reportId))
    //        {
    //            x.IsChecked = false;
    //        }
    //    }
    //    if (check == false)
    //    {
    //        foreach (var x in SubjectCPList.Where(c => c.Id == reportId))
    //        {
    //            x.IsChecked = true;
    //        }
    //    }
    //}
    //void DeleteAll()
    //{
    //    stt = 0;
    //    _removeSubject = SubjectCPList.Where(c => c.IsChecked == true).Select(c => c.Id).ToList();
    //    DeleteConfirmation.show();
    //}
    //void CheckAllExpense(object checkValue)
    //{
    //    stt = 0;
    //    if (Convert.ToBoolean(checkValue) == false)
    //    {
    //        SubjectCPList.ToList().ForEach(e => e.IsChecked = false);
    //    }
    //    else
    //    {
    //        SubjectCPList.ToList().ForEach(e => e.IsChecked = true);
    //    }
    //}
}

