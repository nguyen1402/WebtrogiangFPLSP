@page "/quizup/{idsubject}/add/"
@using FPLSP.Components
@using FPLSP.Repositories.Interfaces
@using FPLSP.Server.Infrastructure.QuizUp.ViewModels
@using Microsoft.AspNetCore.Components
@using Blazored.Toast.Services

<h3>Thêm mới Quiz</h3>
<EditForm Model="_quizUpVm" class="card card-body bg-light mt-6">
    <DataAnnotationsValidator />
    <div class="form-group">
        <div class="row">
            <div class="form-group pt-2 col-md-6 ">
                <label class="form-label">Tên Quiz:</label>
                <div class="text-danger">
                    <InputText class="form-control" @bind-Value="_quizUpVm.QuizName"></InputText>
                    <ValidationMessage For="()=>_quizUpVm.QuizName"></ValidationMessage>
                </div>
            </div>
            <div class="form-group pt-2 col-md-6">
                <label for="ReportLevel" class="form-label">Tiêu đề :</label>
                <div class="text-danger">
                    <InputText class="form-control" @bind-Value="_quizUpVm.QuizTitle">
                    </InputText>
                    <ValidationMessage For="()=>_quizUpVm.QuizTitle">"></ValidationMessage>
                </div>
            </div>
            <div class="form-group pt-2 col-md-6">
                <label for="Question" class="form-label">Ngày bắt đầu :</label>
                <div class="text-danger">
                    <InputDate class="form-control" @bind-Value="_quizUpVm.StartDay"></InputDate>
                    <ValidationMessage For="()=>_quizUpVm.StartDay">"></ValidationMessage>
                </div>
            </div>
            <div class="form-group pt-2 col-md-6">
                <label for="Question" class="form-label">Ngày kết thúc  :</label>
                <div class="text-danger">
                    <InputDate class="form-control" @bind-Value="_quizUpVm.EndDay"></InputDate>
                    <ValidationMessage For="()=>_quizUpVm.EndDay">"></ValidationMessage>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group pt-2 col-md-6">
                <label for="Answer" class="form-label">Mô tả:</label>
                <div class="text-danger">
                    <InputText class="form-control" @bind-Value="_quizUpVm.Descriptions"></InputText>
                    <ValidationMessage For="()=>_quizUpVm.Descriptions"></ValidationMessage>
                </div>
            </div>
            <div class="form-group pt-2 col-md-6">
                <label for="Describe" class="form-label">Lượt làm tối đa:</label>
                <div class="text-danger">
                    <InputNumber class="form-control" @bind-Value="_quizUpVm.MaxTurn"></InputNumber>
                    <ValidationMessage For="()=>_quizUpVm.MaxTurn"></ValidationMessage>
                </div>
            </div>
            <div class="form-group pt-2 col-md-6">
                <label for="Describe" class="form-label">Trạng thái:</label>
                <div class="text-danger">
                    <InputSelect class="form-select" @bind-Value="_quizUpVm.Status">
                        <option value=0>Đang hoạt động</option>
                        <option value=1>Đã dừng hoạt động</option>
                    </InputSelect>
                    <ValidationMessage For="()=>_quizUpVm.Status"></ValidationMessage>
                </div>
            </div>
            <div class="d-flex justify-content-center mb-2">
                <div class="p-2">
                    <button @onclick="()=> Add()" class="btn btn-success">Tạo mới</button>
                </div>
                <div class="p-2">
                    <a @onclick="()=> LoadForm()" class="btn btn-outline-primary">Clear Form</a>
                </div>
                <div class="p-2">
                    <a href="/quizup/@idsubject" class="btn btn-outline-danger">Quay Lại</a>
                </div>
            </div>
        </div>
    </div>
</EditForm>
@code
{
    [Inject] private IQuizUPRepo _quizUpRepo { get; set; }
    private QuizUpVm _quizUpVm = new QuizUpVm();
    [Inject] NavigationManager NavigationManager { get; set; }
    [Inject] IToastService toastService { get; set; }
    [Parameter]
    public string idsubject { get; set; }
    protected async Task Add()
    {
        if (await _quizUpRepo.Add(_quizUpVm, idsubject))
        {
            NavigationManager.NavigateTo($"/quizup/{idsubject}");
            toastService.ShowSuccess("Thêm thành công");
        }
        else
        {
            toastService.ShowError("Thêm thất bại");
        }


    }
    void LoadForm()
    {
        _quizUpVm.QuizName = "";
        _quizUpVm.QuizTitle = "";
        _quizUpVm.StartDay = DateTime.Now;
        _quizUpVm.EndDay = DateTime.Now;
        _quizUpVm.Descriptions = "";
        _quizUpVm.Status = 0;
        _quizUpVm.MaxTurn = 0;
    }
}
