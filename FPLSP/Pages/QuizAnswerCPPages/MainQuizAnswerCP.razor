@page "/MainQuizAnswerCP"
@using FPLSP.Components.QuizAnswerCPComponents
@using FPLSP.Repositories.Interfaces
@using FPLSP.Server.Data.SeedWork
@using FPLSP.Server.Domain.Dtos.QuizAnswerCPDtos
@using FPLSP.Server.Infrastructure.ViewModels.QuizAnswerCPVm
@attribute [Authorize(Roles = "AdminCore,AdminCS")]



<div class="row">
    <div class="col-md-4">
        <h2>Danh Sách QuizAnswer</h2>
    </div>
    
</div>
<div class="row mt-3">
    <div class="col-md-2">
        <a class="btn btn-outline-primary" href="/CreateQuizAnswerCP">Thêm QuizAnswer</a>
    </div>
    <div class="col-md-4"></div>
    <div class="col-md-6">
        <FormSearchQuizAnswerCP OnSearch="SearchQuizAnswerCP"></FormSearchQuizAnswerCP>
    </div>
    
</div>
<div class="row">
    @if (ListQuizAnswerCP != null)
    {
        <table class="table table-hover align-middle mt-3">
            <thead class="table-success">
                <tr>
                    <th>Mã câu hỏi</th>
                    <th>Câu trả lời</th>
                    <th>Chức năng</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in ListQuizAnswerCP)
                {
                    <tr>
                        <td>@item.QuestionCode</td>
                        <td>@item.Answer</td>
                        <td>
                            <div class="dropdown">
                                <a class="btn btn-secondary dropdown-toggle" role="button" id="dropdownMenuLink" data-bs-toggle="dropdown" aria-expanded="false">
                                </a>
                                <ul class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                                    <li><a class="dropdown-item" @onclick="() => RedirectToUpdate(item.Id)">Cập nhật</a></li>
                                    <li><a class="dropdown-item" @onclick="() => RedirectToDelete(item.Id)">Xóa</a></li>
                                </ul>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <span>
            Loading......
        </span>
    }
</div>
<div class="row">
    <div class="col-11 align-self-center">
        <Pagingation MetaData="MetaData" Spread="2" SelectedPage="SelectedPage"></Pagingation>
    </div>
</div>
@code {
    [Inject]
    public NavigationManager NavigationManager { get; set; }
    public List<QuizAnswerCPDtos> ListQuizAnswerCP { get; set; } = new List<QuizAnswerCPDtos>();

    private PagingParameters _quizParameters = new PagingParameters();
    public MetaData MetaData { get; set; } = new MetaData();
    public string Error { get; set; }
    [Inject] public IQuizAnswerCPRepo _iQuizAnswerCPClient { get; set; }

    private ListSearchQuizAnswerCP QuizAnswerCPListSearch = new ListSearchQuizAnswerCP();
    protected async override Task OnInitializedAsync()
    {
        await GetTasks();
    }
    private async Task GetTasks()
    {
        try
        {
            var pagingResponse = await _iQuizAnswerCPClient.GetQuizAnswerLists(QuizAnswerCPListSearch);
            ListQuizAnswerCP = pagingResponse.Items;
            MetaData = pagingResponse.MetaData;
        }
        catch (Exception ex)
        {
            Error = ex.Message;
        }

    }
    private void RedirectToUpdate(Guid id)
    {

        var url = Path.Combine("/UpdateQuizAnswerCP/", id.ToString());
        NavigationManager.NavigateTo(url);
    }

    private async Task RedirectToDelete(Guid id)
    {
        var url = Path.Combine("/DeleteQuizAnswerCP/", id.ToString());
        NavigationManager.NavigateTo(url);
    }

    private async Task SelectedPage(int page)
    {
        QuizAnswerCPListSearch.PageNumber = page;
        await GetTasks();
    }

    public async Task SearchQuizAnswerCP(ListSearchQuizAnswerCP quiz)
    {
        QuizAnswerCPListSearch = quiz;
        await GetTasks();
    }
}