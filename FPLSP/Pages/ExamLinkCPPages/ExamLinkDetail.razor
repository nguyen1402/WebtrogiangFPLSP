@page "/ExamLinkDetail/{id:guid}"
@using FPLSP.Repositories.Interfaces
@using FPLSP.Server.Domain.Dtos
@using FPLSP.Server.Infrastructure.ViewModels.Exams
@using Microsoft.AspNetCore.Components

<h3>Chi Tiết Link Đề Thi</h3>

@if (_examLinkDto != null)
{
    <div class="row">
        <div class="col-1">
        </div>
        <div class="d-flex justify-content-center col-10 ">

            <EditForm Model="_examLinkDto" class="card card-body bg-light mt-5">
                <DataAnnotationsValidator />
                <div class="form-group row mt-2">
                    <label for="name" class="col-md-2 col-form-label"><i class="fa-solid fa-code"></i> Mã link Đề Thi:</label>
                    <div class="col-md-10">
                        <InputText id="name" class="form-control" @bind-Value="_examLinkDto.ExamLinkCode" />
                        <ValidationMessage For="@(() => _examLinkDto.ExamLinkCode)" />
                    </div>
                </div>
                <div class="form-group row mt-2">
                    <label for="name" class="col-md-2 col-form-label"><i class="fa-regular fas  fa-cloud"></i> Link Đề Thi:</label>
                    <div class="col-md-10">
                        <InputText id="name" class="form-control" @bind-Value="_examLinkDto.Path" />
                        <ValidationMessage For="@(() => _examLinkDto.Path)" />
                    </div>
                </div>
                <div class="form-group row mt-2">
                    <label for="name" class="col-md-2 col-form-label"><i class="fa-solid fa-calendar-days"></i> Ngày Tạo:</label>
                    <div class="col-md-10">
                        <InputDate id="name" class="form-control" @bind-Value="_examLinkDto.CreatedDay" />
                        <ValidationMessage For="@(() => _examLinkDto.CreatedDay)" />
                    </div>
                </div>
                <div class="form-group row mt-2">
                    <label for="name" class="col-md-2 col-form-label"><i class="fa-solid fa-calendar-days"></i> Ngày Đóng:</label>
                    <div class="col-md-10">
                        <InputDate id="name" class="form-control" @bind-Value="_examLinkDto.ExpirationDate" />
                        <ValidationMessage For="@(() => _examLinkDto.ExpirationDate)" />
                    </div>
                </div>
                <div class="form-group row mt-2">
                    <label for="name" class="col-md-2 col-form-label"><i class="fa-solid fa-check"></i> Trạng Thái:</label>
                    <div class="col-md-10">
                        <InputSelect class="form-control" @bind-Value="_examLinkDto.Status">
                            <option value="1">Mở</option>
                            <option value="0">Đóng</option>
                        </InputSelect>
                    </div>
                </div>

                <div class="form-group row mt-2 mt-2">
                    <label for="name" class="col-md-2 col-form-label"><i class="fa-regular fa-file"></i> Đề Thi:</label>
                    <div class="col-md-10">
                        <InputSelect class="form-control" @bind-Value="_examLinkDto.ExamId">
                            @if (_lstExam != null)
                            {
                                @foreach (var item in _lstExam)
                                {
                                    <option value="@item.Id">@item.ExamName</option>
                                }
                            }
                        </InputSelect>
                    </div>
                </div>
                <div class="col-md-12 text-center form-group mt-2">
                    <button><a href="/ExamLinkList" class="btn btn-danger">Quay Lại</a></button>
                </div>
            </EditForm>
        </div>
        <div class="col-1">
        </div>
    </div>

}
else
{
    <LoadingIndicator></LoadingIndicator>
}

@code {
    private ExamLinkDto _examLinkDto;
    [Inject] private IExamLinkCPRepo examLinkApiClient { get; set; }

    [Inject] private IExamCPServicesRepo examApiClient { get; set; }
    [Inject] private NavigationManager _navier { get; set; }

    private List<ExamCPDto> _lstExam;
    private ExamListSearchVm _examListSearchVm;
    public ExamLinkDetail()
    {
        _examListSearchVm = new ExamListSearchVm();
        _lstExam = new List<ExamCPDto>();
    }
    [Parameter]
    public Guid Id { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await Get();
    }
    private async Task Get()
    {

        var pagingResponse = await examApiClient.GetExamCPList(_examListSearchVm);
        _lstExam = pagingResponse.Items;
        var examCp = await examLinkApiClient.GetExamLinkCPById(Id);
        var examDto = new ExamLinkDto()
            {
                ExamId = examCp.Id,
                ExamLinkCode = examCp.ExamLinkCode,
                ExpirationDate = examCp.ExpirationDate,
                CreatedDay = examCp.CreatedDay,
                Path = examCp.Path,
                Status = examCp.Status
            };
        _examLinkDto = examDto;
    }
}