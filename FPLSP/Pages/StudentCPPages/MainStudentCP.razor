@page "/MainStudentsCP"
@using FPLSP.Components.StudentCPComponents
@using FPLSP.Repositories.Interfaces
@using FPLSP.Server.Data.SeedWork
@using FPLSP.Server.Domain.Dtos.StudentCPDtos
@using FPLSP.Server.Infrastructure.ViewModels.StudentCP



<div class="row">
    <div class="col-md-4">
        <h2>Danh Sách Sinh Viên</h2>
    </div>
</div>
<div class="row mt-3">
    <div class="col-md-2 ">
        <a class="btn btn-outline-primary" href="/createstudentcp">Thêm Sinh Viên</a>
    </div>
    <div class="col-md-4 ">
    </div>
    <div class="col-md-6">
        <FormSearchStudent OnSearch="SearchStudentCP"></FormSearchStudent>
    </div>
</div>
<div class="row">
    @if (StudentCPList != null)
    {
        <table class="table table-hover align-middle mt-3">
            <thead class="table-success">
                <tr>
                    <th>Ảnh</th>
                    <th>Mã Sinh Viên</th>
                    <th>Tên Sinh Viên</th>
                    <th>Email</th>
                    <th>Chức năng</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in StudentCPList)
                {
                    <tr>
                        <td><img src="/Image/StudentCP/@item.ImageUrl" alt="@item.ImageUrl" height=190 width=170></td>
                        <td>@item.StudentCode</td>
                        <td>@item.StudentName</td>
                        <td>@item.Email</td>
                        <td>
                            <div class="dropdown">
                                <a class="btn btn-secondary dropdown-toggle" role="button" id="dropdownMenuLink" data-bs-toggle="dropdown" aria-expanded="false">
                                </a>
                                <ul class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                                    <li><a class="dropdown-item" style="cursor:pointer" @onclick="() => RedirectToDetails(item.Id)">Chi tiết sinh viên</a></li>
                                    <li><a class="dropdown-item" style="cursor:pointer" @onclick="() => RedirectToUpdate(item.Id)">Cập nhật sinh viên</a></li>
                                    <li><a class="dropdown-item" style="cursor:pointer" @onclick="() => RedirectToDelete(item.Id)">Xóa sinh viên</a></li>
                                </ul>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <span>
            Loading......
        </span>
    }
</div>

<div class="row">
    <div class="col-11 align-self-center">
        <Pagingation MetaData="MetaData" Spread="2" SelectedPage="SelectedPage"></Pagingation>
    </div>
</div>
@code {
    [Inject]
    public IStudentCPApiClient _iStudentCPApiClient { get; set; }
    [Inject]
    public NavigationManager NavigationManager { get; set; }
    public List<StudentCPDtos> StudentCPList { get; set; } = new List<StudentCPDtos>();

    private PagingParameters _studentParameters = new PagingParameters();
    public MetaData MetaData { get; set; } = new MetaData();
    public string Error { get; set; }

    private StudentCPListSearch studentCPListSearch = new StudentCPListSearch();

    protected async override Task OnInitializedAsync()
    {
        await GetTasks();
    }


    private void RedirectToDetails(Guid id)
    {

        var url = Path.Combine("/DetailStudentCP/", id.ToString());
        NavigationManager.NavigateTo(url);
    }
    private void RedirectToUpdate(Guid id)
    {

        var url = Path.Combine("/updatetudentcp/", id.ToString());
        NavigationManager.NavigateTo(url);
    }

    private async Task RedirectToDelete(Guid id)
    {
        var url = Path.Combine("/deleteStudentCP/", id.ToString());
        NavigationManager.NavigateTo(url);
    }
    private async Task GetTasks()
    {
        try
        {
            var pagingResponse = await _iStudentCPApiClient.GetStudentList(studentCPListSearch);
            StudentCPList = pagingResponse.Items;
            MetaData = pagingResponse.MetaData;
        }
        catch (Exception ex)
        {
            Error = ex.Message;
        }

    }

    private async Task SelectedPage(int page)
    {
        studentCPListSearch.PageNumber = page;
        await GetTasks();
    }

    public async Task SearchStudentCP(StudentCPListSearch studentCPListSearchs)
    {
        studentCPListSearch = studentCPListSearchs;
        await GetTasks();
    }
}