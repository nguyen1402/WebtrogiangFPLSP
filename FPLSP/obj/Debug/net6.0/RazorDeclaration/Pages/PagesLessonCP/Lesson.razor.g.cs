// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace FPLSP.Pages.PagesLessonCP
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using FPLSP;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using FPLSP.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using MudBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Blazored.Typeahead;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using CurrieTechnologies.Razor.SweetAlert2;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\PagesLessonCP\Lesson.razor"
using Blazored.Toast.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\PagesLessonCP\Lesson.razor"
using FPLSP.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\PagesLessonCP\Lesson.razor"
using FPLSP.Components.LessonCP;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\PagesLessonCP\Lesson.razor"
using FPLSP.Repositories;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\PagesLessonCP\Lesson.razor"
using FPLSP.Repositories.Interfaces;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\PagesLessonCP\Lesson.razor"
using FPLSP.Server.Data.SeedWork;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\PagesLessonCP\Lesson.razor"
using FPLSP.Server.Domain.Dtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\PagesLessonCP\Lesson.razor"
using FPLSP.Server.Infrastructure.ViewModels.Lesson;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\PagesLessonCP\Lesson.razor"
           [Authorize(Roles = "AdminCore,AdminCS")]

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Components.RouteAttribute("/lesson/{idspec}/{idsubject}")]
    public partial class Lesson : global::Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 133 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\PagesLessonCP\Lesson.razor"
       
    public List<LessonDto> ListLesson { get; set; } = new List<LessonDto>();
    public MetaData MetaData { get; set; } = new MetaData();
    public DateTime time { get; set; }
    public TimeSpan tg;
    private LessonListSearch _parameters = new LessonListSearch();
    [Inject]
    public NavigationManager NavigationManager { get; set; }
    [Inject]
    public ILessonCPRepo _iLessonClient { get; set; }

    private SubjectDto subject { get; set; } = new SubjectDto();
    [Inject]
    public ISubjectClient _iSubjectClient { get; set; }
    protected Comfirmation DeleteConfirmation { get; set; }

    private List<Guid> _removeLesson = new List<Guid>();

    private int stt = 0;

    [Parameter]
    public string Error { get; set; }

    [Parameter]
    public string idsubject { get; set; }
    [Parameter]
    public string idspec { get; set; }

    private bool Check = false;
    [Inject] private IToastService _toastService { get; set; }

    private string _idLesson;
    public SpecializedDto specializedDto { get; set; } = new SpecializedDto();
    string namespecialized { get; set; }
    [Inject]
    public ISpecializedCPRepo _iSpecialized { get; set; }
    protected async override Task OnInitializedAsync()
    {

        specializedDto = await _iSpecialized.GetbyId(Guid.Empty, Guid.Parse(idspec));
        namespecialized = specializedDto.SpecializationName;
        subject = await _iSubjectClient.GetSubjectbyId(Guid.Parse(idsubject));
        _parameters.Status = 3;
        await GetTasks();
    }

    public async Task SearchTask(LessonListSearch lessonListSearch)
    {
        _parameters = lessonListSearch;
        _parameters.PageNumber = 1;
        Check = false;
        await GetTasks();
    }
    private async Task Undo()
    {
        _parameters.Name = "";
        _parameters.Status = 3;
        _parameters.PageNumber = 1;
        await GetTasks();

    }
    private async Task TimKiem()
    {
        await GetTasks();
    }
    private async Task ChangeValue(int value)
    {
        _parameters.Status = value;
        _parameters.Name = _parameters.Name;
        await GetTasks();
    }
    private async Task RedirectToCreat()
    {
        var url = Path.Combine("/createlesson/" + idspec + "/" + idsubject.ToString());
        NavigationManager.NavigateTo(url);
    }
    private void RedirectToUpdate(string idspecialzed, string idsubjects, Guid id)
    {

        var url = Path.Combine("/updatelesson/" + idspecialzed + "/" + idsubjects + "/" + id.ToString());
        NavigationManager.NavigateTo(url);
    }

    private async Task RedirectToLessonContent(string idspec, string idsubject, Guid id)
    {
        var url = Path.Combine("/lessoncontent/", idspec, idsubject.ToString(), id.ToString());
        NavigationManager.NavigateTo(url);
    }
    private async Task GetTasks()
    {
        try
        {
            var pagingResponse = await _iLessonClient.GetLessons(Guid.Parse(idsubject), _parameters);
            ListLesson = pagingResponse.Items;
            MetaData = pagingResponse.MetaData;
            time = DateTime.Now;
        }
        catch (Exception ex)
        {
            Error = ex.Message;
        }

    }
    private async Task Quaylai()
    {
        var url = Path.Combine("/subjects/", idspec);
        NavigationManager.NavigateTo(url);
    }
    private async Task SelectedPage(int page)
    {
        _parameters.PageNumber = page;
        Check = false;
        await GetTasks();
    }

    public async Task OnDelete(Guid id)
    {
        _idLesson = id.ToString();
        DeleteConfirmation.show();
    }
    public async Task OnConfirmationDelete(bool deleteconfirmed)
    {

        stt = 0;
        if (deleteconfirmed && _idLesson == null && _removeLesson.Count == 0)
        {
            _toastService.ShowError("Bạn chưa chọn đối tượng để đổi trạng thái");
            await GetTasks();
            NavigationManager.NavigateTo($"/lesson/{idspec}/{idsubject}");
        }
        else if (deleteconfirmed && _idLesson != null)
        {
            var result = await _iLessonClient.Delete(Guid.Parse(_idLesson));
            if (result == 1)
            {
                _toastService.ShowSuccess("Đổi trạng thái thành công");
                await GetTasks();
                NavigationManager.NavigateTo($"/lesson/{idspec}/{idsubject}");
            }
            else
            {
                _toastService.ShowError("Đổi trạng thái thất bại");
                await GetTasks();
                NavigationManager.NavigateTo($"/lesson/{idspec}/{idsubject}");
            }
        }
        else if (deleteconfirmed && _removeLesson != null)
        {

            var result = await _iLessonClient.RemoveListLessonCP(_removeLesson);
            if (result)
            {
                _toastService.ShowSuccess("Đổi trạng thái thành công");
                await GetTasks();
                NavigationManager.NavigateTo($"/lesson/{idspec}/{idsubject}");
            }
            else
            {
                _toastService.ShowError("Đổi trạng thái thất bại");

                await GetTasks();
                NavigationManager.NavigateTo($"/lesson/{idspec}/{idsubject}");
            }
        }
        _idLesson = null;
        _removeLesson = null;
        Check = false;
    }
    public void DeleteLesson(Guid id)
    {
        _idLesson = id.ToString();
        DeleteConfirmation.show();
    }
    void CheckManual(Guid reportId, bool check)
    {
        stt = 0;
        if (check == true)
        {
            foreach (var x in ListLesson.Where(c => c.Id == reportId))
            {
                x.IsChecked = false;
            }
        }
        if (check == false)
        {
            foreach (var x in ListLesson.Where(c => c.Id == reportId))
            {
                x.IsChecked = true;
            }
        }
    }
    void DeleteAll()
    {
        stt = 0;
        _removeLesson = ListLesson.Where(c => c.IsChecked == true).Select(c => c.Id).ToList();
        DeleteConfirmation.show();
    }
    void CheckAllExpense(object checkValue)
    {
        stt = 0;
        if (Convert.ToBoolean(checkValue) == false)
        {
            ListLesson.ToList().ForEach(e => e.IsChecked = false);
        }
        else
        {
            ListLesson.ToList().ForEach(e => e.IsChecked = true);
        }
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
