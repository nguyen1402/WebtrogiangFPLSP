// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace FPLSP.Pages.QuizQuesstionQuizCP
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using FPLSP;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using FPLSP.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using MudBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using FPLSP.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Blazored.Typeahead;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using CurrieTechnologies.Razor.SweetAlert2;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\QuizQuesstionQuizCP\MainQuizQuesstionQuizCp.razor"
using Blazored.Toast.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\QuizQuesstionQuizCP\MainQuizQuesstionQuizCp.razor"
using FPLSP.Components.QuizQuesstionQuizCPComponents;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\QuizQuesstionQuizCP\MainQuizQuesstionQuizCp.razor"
using FPLSP.Data.Securities;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\QuizQuesstionQuizCP\MainQuizQuesstionQuizCp.razor"
using FPLSP.Repositories;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\QuizQuesstionQuizCP\MainQuizQuesstionQuizCp.razor"
using FPLSP.Repositories.Interfaces;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\QuizQuesstionQuizCP\MainQuizQuesstionQuizCp.razor"
using FPLSP.Server.Data.SeedWork;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\QuizQuesstionQuizCP\MainQuizQuesstionQuizCp.razor"
using FPLSP.Server.Domain.Dtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\QuizQuesstionQuizCP\MainQuizQuesstionQuizCp.razor"
using FPLSP.Server.Infrastructure.ViewModels.QuizQuesstionQuizCP;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\QuizQuesstionQuizCP\MainQuizQuesstionQuizCp.razor"
using System.Text.RegularExpressions;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\QuizQuesstionQuizCP\MainQuizQuesstionQuizCp.razor"
           [Authorize(Roles = "AdminCore,AdminCS")]

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Components.RouteAttribute("/quizQuesstionQuizCP/{idspecializedNonDecrypt}/{idsubjectNonDecrypt}/{idquizNonDecrypt}")]
    public partial class MainQuizQuesstionQuizCp : global::Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 141 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\QuizQuesstionQuizCP\MainQuizQuesstionQuizCp.razor"
       
    [Parameter]
    public string idquizNonDecrypt { get; set; }
    public string idquiz = "";
    [Parameter]
    public string idsubjectNonDecrypt { get; set; }
    public string idsubject = "";
    [Parameter]
    public string idspecializedNonDecrypt { get; set; }
    public string idspecialized = "";
    public List<QuizQuesstionQuizCPDto> ListQuizQuestionQuizCP { get; set; } = new List<QuizQuesstionQuizCPDto>();
    public MetaData MetaData { get; set; } = new MetaData();
    public DateTime time { get; set; }
    public TimeSpan tg;
    private QuizQuesstionQuizCPListSearch _parameters = new QuizQuesstionQuizCPListSearch();
    [Inject]
    public NavigationManager NavigationManager { get; set; }
    [Inject]
    public IQuizQuesstionQuizCPClient _iQuizQuesstionQuizCPClient { get; set; }
    [Inject]
    public IQuizCPRepo _iQuizCPRepo { get; set; }
    [Parameter]
    public string Error { get; set; }
    public string nameQuiz { get; set; }

    private bool Check = false;
    [Inject] private IToastService _toastService { get; set; }

    private string _idQuizQuestionQuiz;
    protected Comfirmation DeleteConfirmation { get; set; }

    private List<Guid> _removeListQuizQuestionQuiz = new List<Guid>();

    [Inject]
    public CryptoServices _cryptoServices { get; set; }
    private int stt = 0;

    private SubjectDto subject { get; set; } = new SubjectDto();
    [Inject]
    ISubjectClient _iSubjectClient { get; set; }
    public SpecializedDto specializedDto { get; set; } = new SpecializedDto();
    string namespecialized { get; set; }
    [Inject]
    public ISpecializedCPRepo _iSpecialized { get; set; }

    Uri uri;
    string maxlevel = "";
    string IdCoSo = "";
    protected async override Task OnInitializedAsync()
    {
          uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        if (string.IsNullOrEmpty(uri.Query) == false)
        {
            var urifist = uri.Query.Split("?")[1];
            maxlevel = _cryptoServices.Decrypt(urifist.Split("LDN01")[0].Replace("I0H", "/"));
            IdCoSo = _cryptoServices.Decrypt(urifist.Split("LDN01")[1].Replace("I0H", "/"));
        }
        idquiz = _cryptoServices.Decrypt(idquizNonDecrypt.Replace("I0H", "/"));
        idsubject = _cryptoServices.Decrypt(idsubjectNonDecrypt.Replace("I0H", "/"));
        idspecialized = _cryptoServices.Decrypt(idspecializedNonDecrypt.Replace("I0H", "/"));
        specializedDto = await _iSpecialized.GetbyId(Guid.Empty, Guid.Parse(idspecialized));
        namespecialized = specializedDto.SpecializationName;
        subject = await _iSubjectClient.GetSubjectbyId(Guid.Parse(idsubject));
        var quiz = await _iQuizCPRepo.GetQuizById(Guid.Parse(idquiz));
        nameQuiz = quiz.QuizName;
        _parameters.Status = 3;
        await GetTasks();
    }
    private async Task Undo()
    {
        _parameters.Name = "";
        _parameters.Status = 3;
        _parameters.PageNumber = 1;
        await GetTasks();

    }
    private async Task TimKiem()
    {
        await GetTasks();
    }
    private async Task ChangeValue(int value)
    {
        _parameters.Status = value;
        _parameters.Name = _parameters.Name;
        await GetTasks();
    }
    public async Task SearchTask(QuizQuesstionQuizCPListSearch lessonContentListSearch)
    {
        var quiz =
        _parameters = lessonContentListSearch;
        Check = false;
        _parameters.PageNumber = 1;
        await GetTasks();
    }
    private async Task Quaylai()
    {
        var url = Path.Combine("/MainQuizsCP/" + _cryptoServices.Encrypt((idspecialized).ToString()).Replace("/", "I0H")  + "/" + _cryptoServices.Encrypt((idsubject).ToString()).Replace("/", "I0H") + $"?{_cryptoServices.Encrypt((maxlevel).ToString()).Replace("/", "I0H") + "LDN01" + _cryptoServices.Encrypt((IdCoSo).ToString()).Replace("/", "I0H")}");
        NavigationManager.NavigateTo(url);
    }
    private async Task RedirectToCreate()
    {
        var url = Path.Combine("/createquizQuesstionQuizCP/" + _cryptoServices.Encrypt((idspecialized).ToString()).Replace("/", "I0H") + "/" + _cryptoServices.Encrypt((idsubject).ToString()).Replace("/", "I0H") + "/" + _cryptoServices.Encrypt((idquiz.ToString()).ToString()).Replace("/", "I0H") + $"?{_cryptoServices.Encrypt((maxlevel).ToString()).Replace("/", "I0H") + "LDN01" + _cryptoServices.Encrypt((IdCoSo).ToString()).Replace("/", "I0H")}");
        NavigationManager.NavigateTo(url);
    } 
    
    private async Task RedirectToCreateExcel()
    {
        var url = Path.Combine("/addExcelQuizQuestion/" + _cryptoServices.Encrypt((idspecialized).ToString()).Replace("/", "I0H") + "/" + _cryptoServices.Encrypt((idsubject).ToString()).Replace("/", "I0H") + "/" + _cryptoServices.Encrypt((idquiz.ToString()).ToString()).Replace("/", "I0H") + $"?{_cryptoServices.Encrypt((maxlevel).ToString()).Replace("/", "I0H") + "LDN01" + _cryptoServices.Encrypt((IdCoSo).ToString()).Replace("/", "I0H")}");
        NavigationManager.NavigateTo(url);
    }
    private void RedirectToDetails(Guid idQuesstion, Guid idQuiz)
    {

        var url = Path.Combine("/quizQuesstionDetailsQuizCp/", _cryptoServices.Encrypt((idQuesstion.ToString()).ToString()).Replace("/", "I0H"), _cryptoServices.Encrypt((idQuiz.ToString()).ToString()).Replace("/", "I0H"), _cryptoServices.Encrypt((idsubject).ToString()).Replace("/", "I0H") + $"?{_cryptoServices.Encrypt((maxlevel).ToString()).Replace("/", "I0H") + "LDN01" + _cryptoServices.Encrypt((IdCoSo).ToString()).Replace("/", "I0H")}" );
        NavigationManager.NavigateTo(url);
    }
    private void RedirectToUpdate(string idspecialized, string idsubject, string idquiz, Guid idQuizQuesstionQuiz)
    {

        var url = Path.Combine($"/quizQuesstionUpdateAnserQuiz/{_cryptoServices.Encrypt((idspecialized).ToString()).Replace("/", "I0H")}/{_cryptoServices.Encrypt((idsubject).ToString()).Replace("/", "I0H")}/{_cryptoServices.Encrypt((idquiz).ToString()).Replace("/", "I0H")}/{_cryptoServices.Encrypt((idQuizQuesstionQuiz).ToString()).Replace("/", "I0H")}?{_cryptoServices.Encrypt((maxlevel).ToString()).Replace("/", "I0H") + "LDN01" + _cryptoServices.Encrypt((IdCoSo).ToString()).Replace("/", "I0H")}");
        NavigationManager.NavigateTo(url);
    }

    private async Task RedirectToDelete(Guid Idspecialized, Guid Idlecturers)
    {
        var url = Path.Combine("/lectuterSpecializedDelete/", _cryptoServices.Encrypt((idquiz.ToString()).ToString()).Replace("/", "I0H"), _cryptoServices.Encrypt((idsubject.ToString()).ToString()).Replace("/", "I0H"), _cryptoServices.Encrypt((Idspecialized.ToString()).ToString()).Replace("/", "I0H"), _cryptoServices.Encrypt((Idlecturers.ToString()).ToString()).Replace("/", "I0H") + $"?{_cryptoServices.Encrypt((maxlevel).ToString()).Replace("/", "I0H") + "LDN01" + _cryptoServices.Encrypt((IdCoSo).ToString()).Replace("/", "I0H")}");
        NavigationManager.NavigateTo(url);
    }
    private async Task GetTasks()
    {
        try
        {
            var pagingResponse = await _iQuizQuesstionQuizCPClient.GetPagingParamets(Guid.Parse(idquiz), _parameters);
            ListQuizQuestionQuizCP = pagingResponse.Items;
            MetaData = pagingResponse.MetaData;
            time = DateTime.Now;
        }
        catch (Exception ex)
        {
            Error = ex.Message;
        }

    }

    private async Task SelectedPage(int page)
    {
        _parameters.PageNumber = page;
        Check = false;
        await GetTasks();
    }

    public async Task OnDelete(Guid id)
    {
        _idQuizQuestionQuiz = id.ToString();
        DeleteConfirmation.show();
    }
    public async Task OnConfirmationDelete(bool deleteconfirmed)
    {

        stt = 0;
        if (deleteconfirmed && _idQuizQuestionQuiz == null && _removeListQuizQuestionQuiz.Count == 0)
        {
            _toastService.ShowError("Bạn chưa chọn đối tượng để đổi trạng thái");
            await GetTasks();
            NavigationManager.NavigateTo($"/quizQuesstionQuizCP/{_cryptoServices.Encrypt((idspecialized).ToString()).Replace("/", "I0H")}/{_cryptoServices.Encrypt((idsubject).ToString()).Replace("/", "I0H")}/{_cryptoServices.Encrypt((idquiz).ToString()).Replace("/", "I0H")}?{_cryptoServices.Encrypt((maxlevel).ToString()).Replace("/", "I0H") + "LDN01" + _cryptoServices.Encrypt((IdCoSo).ToString()).Replace("/", "I0H")}");

        }
        else if (deleteconfirmed && _idQuizQuestionQuiz != null)
        {
            var result = await _iQuizQuesstionQuizCPClient.Delete(Guid.Parse(_idQuizQuestionQuiz));
            if (result == 1)
            {
                _toastService.ShowSuccess("Đổi trạng thái thành công");
                await GetTasks();
                NavigationManager.NavigateTo($"/quizQuesstionQuizCP/{_cryptoServices.Encrypt((idspecialized).ToString()).Replace("/", "I0H")}/{_cryptoServices.Encrypt((idsubject).ToString()).Replace("/", "I0H")}/{_cryptoServices.Encrypt((idquiz).ToString()).Replace("/", "I0H")}?{_cryptoServices.Encrypt((maxlevel).ToString()).Replace("/", "I0H") + "LDN01" + _cryptoServices.Encrypt((IdCoSo).ToString()).Replace("/", "I0H")}");
            }
            else
            {
                _toastService.ShowError("Đổi trạng thái thất bại");
                await GetTasks();
                NavigationManager.NavigateTo($"/quizQuesstionQuizCP/{_cryptoServices.Encrypt((idspecialized).ToString()).Replace("/", "I0H")}/{_cryptoServices.Encrypt((idsubject).ToString()).Replace("/", "I0H")}/{_cryptoServices.Encrypt((idquiz).ToString()).Replace("/", "I0H")}?{_cryptoServices.Encrypt((maxlevel).ToString()).Replace("/", "I0H") + "LDN01" + _cryptoServices.Encrypt((IdCoSo).ToString()).Replace("/", "I0H")}");

            }
        }
        else if (deleteconfirmed && _removeListQuizQuestionQuiz != null)
        {

            var result = await _iQuizQuesstionQuizCPClient.DeleteListQuizQuestionQuiz(_removeListQuizQuestionQuiz);
            if (result == 1)
            {
                _toastService.ShowSuccess("Đổi trạng thái thành công");
                await GetTasks();
                NavigationManager.NavigateTo($"/quizQuesstionQuizCP/{_cryptoServices.Encrypt((idspecialized).ToString()).Replace("/", "I0H")}/{_cryptoServices.Encrypt((idsubject).ToString()).Replace("/", "I0H")}/{_cryptoServices.Encrypt((idquiz).ToString()).Replace("/", "I0H")}?{_cryptoServices.Encrypt((maxlevel).ToString()).Replace("/", "I0H") + "LDN01" + _cryptoServices.Encrypt((IdCoSo).ToString()).Replace("/", "I0H")}");

            }
            else
            {
                _toastService.ShowError("Đổi trạng thái thất bại");

                await GetTasks();
                NavigationManager.NavigateTo($"/quizQuesstionQuizCP/{_cryptoServices.Encrypt((idspecialized).ToString()).Replace("/", "I0H")}/{_cryptoServices.Encrypt((idsubject).ToString()).Replace("/", "I0H")}/{_cryptoServices.Encrypt((idquiz).ToString()).Replace("/", "I0H")}?{_cryptoServices.Encrypt((maxlevel).ToString()).Replace("/", "I0H") + "LDN01" + _cryptoServices.Encrypt((IdCoSo).ToString()).Replace("/", "I0H")}");

            }
        }
        _idQuizQuestionQuiz = null;
        _removeListQuizQuestionQuiz = null;
        Check = false;
    }
    public void DeleteQuiz(Guid id)
    {
        _idQuizQuestionQuiz = id.ToString();
        DeleteConfirmation.show();
    }
    void CheckManual(Guid reportId, bool check)
    {
        stt = 0;
        if (check == true)
        {
            foreach (var x in ListQuizQuestionQuizCP.Where(c => c.QuizQuestionId == reportId))
            {
                x.IsChecked = false;
            }
        }
        if (check == false)
        {
            foreach (var x in ListQuizQuestionQuizCP.Where(c => c.QuizQuestionId == reportId))
            {
                x.IsChecked = true;
            }
        }
    }
    void DeleteAll()
    {
        stt = 0;
        _removeListQuizQuestionQuiz = ListQuizQuestionQuizCP.Where(c => c.IsChecked == true).Select(c => c.QuizQuestionId).ToList();
        DeleteConfirmation.show();
    }
    void CheckAllExpense(object checkValue)
    {
        stt = 0;
        if (Convert.ToBoolean(checkValue) == false)
        {
            ListQuizQuestionQuizCP.ToList().ForEach(e => e.IsChecked = false);
        }
        else
        {
            ListQuizQuestionQuizCP.ToList().ForEach(e => e.IsChecked = true);
        }
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
