// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace FPLSP.Pages.LessonContentUPPages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using FPLSP;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using FPLSP.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using MudBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using FPLSP.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Blazored.Typeahead;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using CurrieTechnologies.Razor.SweetAlert2;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\LessonContentUPPages\LessonContentUP.razor"
using Blazored.Toast.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\LessonContentUPPages\LessonContentUP.razor"
using FPLSP.Repositories.Interfaces;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\LessonContentUPPages\LessonContentUP.razor"
using FPLSP.Server.Data.SeedWork;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\LessonContentUPPages\LessonContentUP.razor"
using FPLSP.Server.Domain.Dtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\LessonContentUPPages\LessonContentUP.razor"
using FPLSP.Server.Infrastructure.ViewModels.LessonContentUP;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\LessonContentUPPages\LessonContentUP.razor"
using FPLSP.Server.Infrastructure.ViewModels.LessonUP;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\LessonContentUPPages\LessonContentUP.razor"
           [Authorize(Roles = "AdminCore,AdminCS")]

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Components.RouteAttribute("/lessonContentUP/{idsubjectUP}/{Id}")]
    public partial class LessonContentUP : global::Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 105 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\LessonContentUPPages\LessonContentUP.razor"
       
    [Inject] private ILessonContentUPRepo _LessonContentUPRepo { get; set; }
    [Inject] public NavigationManager NavigationManager { get; set; }
    [Inject] private ILessonUPRepo _lessonUPRepo { get; set; }
    [Inject] public ISubjectUPRepo _subjectUPRepo { get; set; }
    //[Inject] private IResourceLinkUPRepo _resourceLinkUPRepo { get; set; }
    public MetaData MetaData { get; set; } = new MetaData();

    private List<LessonContentUPViewModel> _lstLessonContentUPs = new List<LessonContentUPViewModel>();
    private List<Guid> removeListLesson = new List<Guid>();
    private LessonUPViewModel lesson { get; set; } = new LessonUPViewModel();
    private SubjectDto subject { get; set; } = new SubjectDto();
    private LessonContentUPListSearch _LessonContentUPSearch = new LessonContentUPListSearch();
    private bool Check = false;
    [Inject] private IToastService _toastService { get; set; }
    [Parameter]
    public string idsubjectUP { get; set; }
    [Parameter]
    public string id { get; set; }

    [CascadingParameter]
    private Error Error { get; set; }

    private string deleteID { get; set; }
    ObjectFit ImageFit = ObjectFit.Cover;
    protected Comfirmation DeleteConfirmation { get; set; } = new Comfirmation();

    protected override async Task OnInitializedAsync()
    {
        subject = await _subjectUPRepo.GetSubjectbyId(Guid.Parse(idsubjectUP));
        lesson = await _lessonUPRepo.GetById(id);
        await GetTasks();
    }

    public async Task SearchLessonContentUP(LessonContentUPListSearch LessonContentUPSearch)
    {
        _LessonContentUPSearch = LessonContentUPSearch;
        await GetTasks();
    }

    public void OnDelete(Guid id)
    {
        deleteID = id.ToString();
        DeleteConfirmation.show();
    }
    void CheckManual(Guid reportId, bool check)
    {
        if (check == true)
        {
            foreach (var x in _lstLessonContentUPs.Where(c => c.Id == reportId))
            {
                x.IsChecked = false;
            }
        }
        if (check == false)
        {
            foreach (var x in _lstLessonContentUPs.Where(c => c.Id == reportId))
            {
                x.IsChecked = true;
            }
        }
    }
    void CheckAllExpense(object checkValue)
    {
        if (Convert.ToBoolean(checkValue) == false)
        {
            _lstLessonContentUPs.ToList().ForEach(e => e.IsChecked = false);
        }
        else
        {
            _lstLessonContentUPs.ToList().ForEach(e => e.IsChecked = true);
        }
    }
    public async Task OnConfirmDelete(bool deleteConfirmed)
    {
        if (deleteConfirmed)
        {
            var result = await _LessonContentUPRepo.Delete(Guid.Parse(deleteID));
            if (result)
            {
                await GetTasks();
            }
        }
    }

    private async Task GetTasks()
    {
        try
        {
            var pagingResponse = await _LessonContentUPRepo.GetList(_LessonContentUPSearch);
            _lstLessonContentUPs = pagingResponse.Items.Where(c => Equals(Guid.Parse(id), c.LessonId)).ToList();
            MetaData = pagingResponse.MetaData;
        }
        catch (Exception ex)
        {
            Error.ProcessError(ex);
        }
    }

    private async Task SelectedPage(int page)
    {
        _LessonContentUPSearch.PageNumber = page;
        await GetTasks();
    }

    private void RedirectToDetails(Guid id)
    {

        var url = Path.Combine($"/lessonContentUPDetail/{id.ToString()}?{idsubjectUP}");
        NavigationManager.NavigateTo(url);
    }
    private void RedirectToUpdate(Guid id)
    {

        var url = Path.Combine($"/lessonContentUPUpdate/{idsubjectUP}/{id}");
        NavigationManager.NavigateTo(url);
    }
    private async Task RedirectToLesson()
    {
        var url = Path.Combine("/lessonUP/", idsubjectUP.ToString());
        NavigationManager.NavigateTo(url);
    }
    public async Task OnConfirmationDelete(bool deleteconfirmed)
    {

        if (deleteconfirmed && deleteID == null && removeListLesson.Count == 0)
        {
            _toastService.ShowError("Bạn chưa chọn đối tượng để xóa");
            await GetTasks();
        }
        else if (deleteconfirmed && deleteID != null)
        {
            var result = await _LessonContentUPRepo.Delete(Guid.Parse(deleteID));
            if (result)
            {
                _toastService.ShowSuccess("Xóa thành công");
                await GetTasks();
            }
            else
            {
                _toastService.ShowError("Xóa thất bại");
                await GetTasks();
            }
        }
        else if (deleteconfirmed && removeListLesson != null)
        {

            var result = await _LessonContentUPRepo.RemoveAll(removeListLesson);
            if (result)
            {
                _toastService.ShowSuccess("Xóa thành công");
                await GetTasks();
            }
            else
            {
                _toastService.ShowError("Xóa thất bại");

                await GetTasks();
            }
        }
        deleteID = null;
        removeListLesson = null;
        Check = false;
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
