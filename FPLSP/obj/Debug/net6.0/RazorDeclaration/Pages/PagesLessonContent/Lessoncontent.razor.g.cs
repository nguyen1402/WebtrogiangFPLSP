// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace FPLSP.Pages.PagesLessonContent
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using FPLSP;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using FPLSP.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using MudBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Blazored.Typeahead;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using CurrieTechnologies.Razor.SweetAlert2;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\PagesLessonContent\Lessoncontent.razor"
using Blazored.Toast.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\PagesLessonContent\Lessoncontent.razor"
using FPLSP.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\PagesLessonContent\Lessoncontent.razor"
using FPLSP.Components.LessoncontentCP;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\PagesLessonContent\Lessoncontent.razor"
using FPLSP.Components.Subject;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\PagesLessonContent\Lessoncontent.razor"
using FPLSP.Repositories;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\PagesLessonContent\Lessoncontent.razor"
using FPLSP.Repositories.Interfaces;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\PagesLessonContent\Lessoncontent.razor"
using FPLSP.Server.Data.SeedWork;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\PagesLessonContent\Lessoncontent.razor"
using FPLSP.Server.Domain.Dtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\PagesLessonContent\Lessoncontent.razor"
using FPLSP.Server.Infrastructure.ViewModels.LessonContentCP;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\PagesLessonContent\Lessoncontent.razor"
           [Authorize(Roles = "AdminCore,AdminCS")]

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Components.RouteAttribute("/lessoncontent/{idspecialized}/{idsubject}/{idlesson}")]
    public partial class Lessoncontent : global::Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 143 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\PagesLessonContent\Lessoncontent.razor"
       
    public List<LessonContentDto> ListLessonContent { get; set; } = new List<LessonContentDto>();
    public MetaData MetaData { get; set; } = new MetaData();
    public LessonContentUpdateVM lessonContent;
    private LessonContentListSearch _parameters = new LessonContentListSearch();
    [Inject]
    public NavigationManager NavigationManager { get; set; }
    [Inject]
    public ILessonContentCPRepo _iLessonContentClient { get; set; }

    private SubjectDto subject { get; set; } = new SubjectDto();

    [Inject]
    public ISubjectClient _iSubjectClient { get; set; }
    private LessonDto lesson { get; set; } = new LessonDto();
    [Inject]
    public ILessonCPRepo _iLessonClient { get; set; }
    public string Error { get; set; }
    [Parameter]
    public string idsubject { get; set; }
    [Parameter]
    public string idlesson { get; set; }
    [Parameter]
    public string idspecialized { get; set; }
    public DateTime time { get; set; }
    public TimeSpan tg;
    private bool Check = false;
    private int stt = 0;
    protected Comfirmation DeleteConfirmation { get; set; }
    private List<Guid> _removeLesoncontent = new List<Guid>();
    [Inject] private IToastService _toastService { get; set; }
    private string _idLessoncontent;
    private string nameLesson;
    private string codeLesson;
    public SpecializedDto specializedDto { get; set; } = new SpecializedDto();
    string namespecialized { get; set; }
    [Inject]
    public ISpecializedCPRepo _iSpecialized { get; set; }
    protected async override Task OnInitializedAsync()
    {

        specializedDto = await _iSpecialized.GetbyId(Guid.Empty, Guid.Parse(idspecialized));
        namespecialized = specializedDto.SpecializationName;
        subject = await _iSubjectClient.GetSubjectbyId(Guid.Parse(idsubject));
        lesson = await _iLessonClient.GetbyId(Guid.Parse(idlesson));
        nameLesson = lesson.LessonName;
        codeLesson = lesson.LessonCode;
        _parameters.Status = 1;
        await GetTasks();

    }
    public async Task SearchTask(LessonContentListSearch lessonContentListSearch)
    {
        _parameters = lessonContentListSearch;
        _parameters.PageNumber = 1;
        Check = false;
        await GetTasks();
    }
    private async Task Undo()
    {
        _parameters.Name = "";
        _parameters.Status = 3;
        _parameters.PageNumber = 1;
        await GetTasks();

    }
    private async Task Upto(Guid id)
    {
        lessonContent = await _iLessonContentClient.GetbyId(id);
        lessonContent.Index += 1;
        var result = await _iLessonContentClient.Update(id, lessonContent);
        if (result != 1)
        {
            _toastService.ShowError("lỗi! Vui lòng thử lại");

        }
        else
        {
            _toastService.ShowSuccess("Tăng lên thành công");

        }
        await GetTasks();

    }
    private async Task Down(Guid id)
    {
        lessonContent = await _iLessonContentClient.GetbyId(id);
        if (lessonContent.Index == 1)
        {
            _toastService.ShowError("Đã ở mức thấp nhất");

        }
        else
        {
            lessonContent.Index -= 1;
            var result = await _iLessonContentClient.Update(id, lessonContent);
            if (result != 1)
            {
                _toastService.ShowError("lỗi! Vui lòng thử lại");

            }
            else
            {
                _toastService.ShowSuccess("Giảm xuống thành công");
            }

        }
        await GetTasks();

    }
    private async Task TimKiem()
    {
        await GetTasks();
    }
    private async Task ChangeValue(int value)
    {
        _parameters.Status = value;
        _parameters.Name = _parameters.Name;
        await GetTasks();
    }
    private void linkbaihoc()
    {
        var url = Path.Combine("/resourcelink/", idspecialized, idsubject, idlesson);
        NavigationManager.NavigateTo(url);
    }
    private void RedirectToVideo(Guid? idRsLink, Guid? idLessonConten)
    {
        var url = Path.Combine("/lessonContentVideo/", idRsLink.ToString(), idLessonConten.ToString());
        NavigationManager.NavigateTo(url);
    }
    private async Task RedirectToCreat()
    {
        var url = Path.Combine("/createlessoncontent/", idspecialized, idsubject.ToString(), idlesson.ToString());
        NavigationManager.NavigateTo(url);
    }
    private void RedirectToDetails(Guid id)
    {
        var url = Path.Combine("/detailsds/", idsubject.ToString(), id.ToString(), idlesson.ToString());
        NavigationManager.NavigateTo(url);
    }
    private void RedirectToUpdate(Guid id)
    {

        var url = Path.Combine("/leesoncontentupdate/" + idspecialized + "/" + idsubject + "/" + idlesson + "/" + id.ToString());
        NavigationManager.NavigateTo(url);
    }

    private async Task RedirectToDelete(Guid id)
    {
        var url = Path.Combine("/leesoncontentdelete/", idsubject.ToString(), id.ToString(), idlesson.ToString());
        NavigationManager.NavigateTo(url);
    }
    private async Task RedirectToLesson()
    {
        var url = Path.Combine("/lesson/", idsubject.ToString());
        NavigationManager.NavigateTo(url);
    }
    private async Task GetTasks()
    {
        try
        {
            var pagingResponse = await _iLessonContentClient.GetLessons(Guid.Parse(idlesson), _parameters);
            ListLessonContent = pagingResponse.Items;
            MetaData = pagingResponse.MetaData;
            time = DateTime.Now;
        }
        catch (Exception ex)
        {
            Error = ex.Message;
        }

    }

    private async Task Quaylai()
    {
        var url = Path.Combine("/lesson/", idspecialized, idsubject);
        NavigationManager.NavigateTo(url);
    }

    private async Task SelectedPage(int page)
    {
        _parameters.PageNumber = page;
        Check = false;
        await GetTasks();
    }
    public async Task OnDelete(Guid id)
    {
        _idLessoncontent = id.ToString();
        DeleteConfirmation.show();
    }
    public async Task OnConfirmationDelete(bool deleteconfirmed)
    {

        stt = 0;
        if (deleteconfirmed && _idLessoncontent == null && _removeLesoncontent.Count == 0)
        {
            _toastService.ShowError("Bạn chưa chọn đối tượng để đổi trạng thái");
            await GetTasks();
            //NavigationManager.NavigateTo($"/lesson/{idspec}/{idsubject}");
        }
        else if (deleteconfirmed && _idLessoncontent != null)
        {
            var result = await _iLessonContentClient.Delete(Guid.Parse(_idLessoncontent));
            if (result == 1)
            {
                _toastService.ShowSuccess("Đổi trạng thái thành công");
                await GetTasks();
                NavigationManager.NavigateTo($"/lessoncontent/{idspecialized}/{idsubject}/{idlesson}");
            }
            else
            {
                _toastService.ShowError("Đổi trạng thái thất bại");
                await GetTasks();
                NavigationManager.NavigateTo($"/lessoncontent/{idspecialized}/{idsubject}/{idlesson}");
            }
        }
        else if (deleteconfirmed && _removeLesoncontent != null)
        {

            var result = await _iLessonContentClient.RemoveListLessonContentCP(_removeLesoncontent);
            if (result)
            {
                _toastService.ShowSuccess("Đổi trạng thái thành công");
                await GetTasks();
                NavigationManager.NavigateTo($"/lessoncontent/{idspecialized}/{idsubject}/{idlesson}");
            }
            else
            {
                _toastService.ShowError("Đổi trạng thái thất bại");

                await GetTasks();
                NavigationManager.NavigateTo($"/lessoncontent/{idspecialized}/{idsubject}/{idlesson}");
            }
        }
        _idLessoncontent = null;
        _removeLesoncontent = null;
        Check = false;
    }
    public void DeleteLesson(Guid id)
    {
        _idLessoncontent = id.ToString();
        DeleteConfirmation.show();
    }
    void CheckManual(Guid reportId, bool check)
    {
        stt = 0;
        if (check == true)
        {
            foreach (var x in ListLessonContent.Where(c => c.Id == reportId))
            {
                x.IsChecked = false;
            }
        }
        if (check == false)
        {
            foreach (var x in ListLessonContent.Where(c => c.Id == reportId))
            {
                x.IsChecked = true;
            }
        }
    }
    void DeleteAll()
    {
        stt = 0;
        _removeLesoncontent = ListLessonContent.Where(c => c.IsChecked == true).Select(c => c.Id).ToList();
        DeleteConfirmation.show();
    }
    void CheckAllExpense(object checkValue)
    {
        stt = 0;
        if (Convert.ToBoolean(checkValue) == false)
        {
            ListLessonContent.ToList().ForEach(e => e.IsChecked = false);
        }
        else
        {
            ListLessonContent.ToList().ForEach(e => e.IsChecked = true);
        }
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
