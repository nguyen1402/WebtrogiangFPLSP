// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace FPLSP.Pages.ManageHomeWork
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
#nullable restore
#line 1 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using FPLSP;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Blazored.Typeahead;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using CurrieTechnologies.Razor.SweetAlert2;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\ManageHomeWork\HomeWork.razor"
using Blazored.LocalStorage;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\ManageHomeWork\HomeWork.razor"
using FPLSP.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\ManageHomeWork\HomeWork.razor"
using FPLSP.Data.Securities;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\ManageHomeWork\HomeWork.razor"
using Microsoft.AspNetCore.SignalR.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\ManageHomeWork\HomeWork.razor"
using Blazored.Toast.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\ManageHomeWork\HomeWork.razor"
using FPLSP.Repositories.Interfaces;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\ManageHomeWork\HomeWork.razor"
using FPLSP.Server.Data.SeedWork;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\ManageHomeWork\HomeWork.razor"
using FPLSP.Server.Domain.Dtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\ManageHomeWork\HomeWork.razor"
using FPLSP.Server.Domain.Entities.CoresParts;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\ManageHomeWork\HomeWork.razor"
using FPLSP.Server.Domain.Entities.UserParts;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\ManageHomeWork\HomeWork.razor"
using FPLSP.Server.Domain.Entities.UsesParts;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\ManageHomeWork\HomeWork.razor"
using FPLSP.Server.Infrastructure.ViewModels;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\ManageHomeWork\HomeWork.razor"
using FPLSP.Server.Infrastructure.ViewModels.LessonUP;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\ManageHomeWork\HomeWork.razor"
using FPLSP.Server.Infrastructure.ViewModels.NewFeed;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\ManageHomeWork\HomeWork.razor"
using FPLSP.Server.Infrastructure.ViewModels.SubmitHomeWorkVM;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\ManageHomeWork\HomeWork.razor"
using FPLSP.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\ManageHomeWork\HomeWork.razor"
using Microsoft.AspNetCore.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\ManageHomeWork\HomeWork.razor"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\ManageHomeWork\HomeWork.razor"
using MudBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 22 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\ManageHomeWork\HomeWork.razor"
using System.Text.RegularExpressions;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Components.LayoutAttribute(typeof(MainLayout))]
    [global::Microsoft.AspNetCore.Components.RouteAttribute("/homework/{userEmailNonDec}")]
    public partial class HomeWork : global::Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 208 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\ManageHomeWork\HomeWork.razor"
       
    int run = 0;
    string color = "";
    private MudDateRangePicker _picker;
    private bool CheckVoHan = false;
    private bool _autoClose;
    private DateTime GetStart;
    private DateTime GetEnd;
    [Parameter]
    public string userEmailNonDec { get; set; }

    public string userEmail = "";
    private List<BookMarkClass> _bookMarkClasses = new List<BookMarkClass>();
    public StudentUP student = new StudentUP();
    public LecturersCP lecturer = new LecturersCP();
    [Inject]
    public ITaskRepositories<ClassUPViewModel> _taskRepositories { get; set; }
    private List<ClassUPViewModel> _lstClass;

    [Inject]
    public CryptoServices _cryptoServices { get; set; }
    [Inject]
    public NavigationManager navigationManager { get; set; }
    private bool IsHiden = false;
    private ClassSearchDTO _searchDTO = new ClassSearchDTO();
    private int _counter;
    private int _count;
    [CascadingParameter]
    private Error _error { get; set; }
    public MetaData MetaData { get; set; } = new MetaData();

    [Inject]
    public IStudentUPRepo _studentUPRepo { get; set; }
    [Inject]
    public ILecturersCPRepo _lecturersCPRepo { get; set; }

    //
    private List<SubjectUP> _lstSub = new List<SubjectUP>();
    private List<SpecializedDto> _lstSpec = new List<SpecializedDto>();
    private List<LecturersCPViewModel> _lstLec = new List<LecturersCPViewModel>();
    //
    [Inject] IToastService _toast { get; set; }
    [Inject]
    public IBookMarkClassRepo _bookMarker { get; set; }
    //
    [Inject]
    public ILessonUPRepo _IlessonUPRepo { get; set; }
    [Inject] public ISubmitHomeworkForStudentRepo _ISubmiter { get; set; }
    private List<LessonUPViewModel> _lstlessUP = new List<LessonUPViewModel>();
    private List<SetMultipleClass> _lstClassHomeWork = new List<SetMultipleClass>();
    //
    private string pattern = @"^(http|https|ftp|)\://|[a-zA-Z0-9\-\.]+\.[a-zA-Z](:[a-zA-Z0-9]*)?/?([a-zA-Z0-9\-\._\?\,\'/\\\+&amp;%\$#\=~])*[^\.\,\)\(\s]$";
    private string GetMess;
    private string GetTitle;
    private Guid GetIdType;
    [Inject] public ISenderNotification _ISender { get; set; }
    [Inject] public ITypeOfNewFeedRepo _IType { get; set; }
    [Inject]
    public UserManager<UserSignIn> _userManager { get; set; }
    private List<TypeOfNewFeed> _lstnewfeed = new List<TypeOfNewFeed>();
    private List<StudentUP> _lstStudent = new List<StudentUP>();
    [Inject] public IToastService ToastService { get; set; }
    //
    [Inject] public IHttpContextAccessor _httpContextAccessor { get; set; }
    private int encounter;

    protected override async Task OnInitializedAsync()
    {
        userEmail = _cryptoServices.Decrypt(userEmailNonDec.Replace("I0H", "/"));

        _lstlessUP = await _IlessonUPRepo.GetAll();
        //_count = await _taskRepositories.CountAsync();
        _lstSub = await _taskRepositories.GetAllSub();
        _lstLec = await _taskRepositories.GetAllLec();
        _lstSpec = await _taskRepositories.GetAllSpec();
        _lstnewfeed = await _IType.GetNewFeedsAsync();
        _lstStudent = await _studentUPRepo.GetAllStudentUPAsync();


        await GetClassList();
        await GetLecturerByEmail();
    }
    //private async Task SelectType(ChangeEventArgs args)
    //{
    //    GetIdType = Guid.Parse(args.Value.ToString());
    ////}
    private async Task GetLecturerByEmail()
    {
        for (var i = 0; i < 15; i++)
        {
            encounter = i;
        }
        var listLecturer = await _lecturersCPRepo.GetAllLecturerAsync();
        lecturer = listLecturer.FirstOrDefault(x => x.Email == userEmail.Replace("-", "."));


    }
    private async Task GetClassList()
    {

        // Check id user thuoc class => hien thi
        if (userEmail != null)
        {
            _lstClass = await _taskRepositories.GetListClassDetailForLec(userEmail.Replace("-", "."));

            _count = _lstClass.Count;
        }
        else
        {
            _toast.ShowWarning("Bạn chưa có lớp học nào của riêng mình cả");
        }
    }
    private async Task GetMessOfText(ChangeEventArgs args)
    {
        GetMess = Convert.ToString(args.Value);
    }
    private async Task GetMessOfTitle(ChangeEventArgs args)
    {
        GetTitle = Convert.ToString(args.Value);
    }
    void CheckAllExpense(object checkValue)
    {
        //if (Convert.ToBoolean(checkValue) == false)
        //{
        //    _lstStudents.ToList().ForEach(e => e.IsChecked = false);
        //}
        //else
        //{
        //    _lstStudents.ToList().ForEach(e => e.IsChecked = true);
        //}
    }
    public async Task SelectStartOfDeadline(ChangeEventArgs args, Guid idclass, Guid idsub)
    {
        foreach (var x in _lstClassHomeWork.Where(c => c.IdClass == idclass && c.IdSubject == idsub))
        {
            x.StartedDate = Convert.ToDateTime(args.Value);
            GetStart = Convert.ToDateTime(args.Value);
        }
    }
    public async Task SelectEndOfDeadline(ChangeEventArgs args, Guid idclass, Guid idsub)
    {
        foreach (var x in _lstClassHomeWork.Where(c => c.IdClass == idclass && c.IdSubject == idsub))
        {
            x.EndTime = Convert.ToDateTime(args.Value);
            GetEnd = Convert.ToDateTime(args.Value);
        }
    }
    //public async Task SelectDateRange(ChangeEventArgs args, Guid idclass, Guid idsub)
    //{
    //    DateRange dateRange = (DateRange)args.Value;

    //    foreach (var x in _lstClassHomeWork.Where(c => c.IdClass == idclass && c.IdSubject == idsub))
    //    {
    //        x.StartedDate =Convert.ToDateTime( dateRange.Start);
    //        x.EndTime =Convert.ToDateTime( dateRange.End);
    //    }
    //}
    public async Task SelectLesson(ChangeEventArgs args, Guid idclass, Guid idsub)
    {
        if (args.Value != Guid.Empty.ToString())
        {
            foreach (var x in _lstClassHomeWork.Where(c => c.IdClass == idclass && c.IdSubject == idsub))
            {
                x.IdLesson = Guid.Parse(args.Value.ToString());
            }
        }
    }
    void CheckManual(Guid cl, Guid sb, bool check)
    {
        if (check == true)
        {
            foreach (SetMultipleClass x in _lstClassHomeWork.ToList().Where(c => c.IdClass == cl && c.IdSubject == sb))
            {
                _lstClassHomeWork.Remove(_lstClassHomeWork.Find(c => c.IdClass == cl && c.IdSubject == sb));
            }
        }
        if (check == false)
        {
            foreach (SetMultipleClass x in _lstClassHomeWork.ToList().Where(c => c.IdClass == cl && c.IdSubject == sb))
            {
                x.IsChecked = true;
            }
        }
    }
    async void VoHan(Guid cl, Guid sb,int run)
    {
        if (_lstClassHomeWork.ToList().Where(c => c.IdClass == cl && c.IdSubject == sb).Any(c => c.StartedDate== Convert.ToDateTime("1/1/0001 12:00:00 AM")&& c.EndTime == Convert.ToDateTime("1/1/0001 12:00:00 AM") )==false){


            foreach (SetMultipleClass x in _lstClassHomeWork.ToList().Where(c => c.IdClass == cl && c.IdSubject == sb))
            {
                x.StartedDate = Convert.ToDateTime("1/1/0001 12:00:00 AM");
                x.EndTime = Convert.ToDateTime("1/1/0001 12:00:00 AM");

            }
            CheckVoHan = true;
        }
        else
        {


            foreach (SetMultipleClass x in _lstClassHomeWork.ToList().Where(c => c.IdClass == cl && c.IdSubject == sb))
            {
                if (GetEnd == Convert.ToDateTime("1/1/0001 12:00:00 AM") && GetStart == Convert.ToDateTime("1/1/0001 12:00:00 AM")){
                    x.StartedDate = Convert.ToDateTime("10/13/2022 12:00:00 AM");
                    x.EndTime = Convert.ToDateTime("10/16/2022 12:00:00 AM");
                }
                else{
                    x.StartedDate = GetStart;
                    x.EndTime = GetEnd;
                }



            }
            CheckVoHan = false;
        }





    }
    private async Task GetFavoriteClass()
    {
        _bookMarkClasses = await _bookMarker.GetListBookMarkForUser(student.Id);
    }
    private async Task MakeADeadLine()
    {
        if (_lstClassHomeWork.Count != 0 && _lstClassHomeWork!=null){
            foreach (var x in _lstClassHomeWork)
            {
                if (x.IdLesson == Guid.Empty)
                {
                    _toast.ShowError($"Bạn Chưa Chọn Bài Học Cho Lớp {x.ClassNanme}-{x.SubjectName}  !");
                    return;
                }

                var result = DateTime.Compare(x.StartedDate, x.EndTime);
                if (x.StartedDate != Convert.ToDateTime("1/1/0001 12:00:00 AM")){
                    if (result > 0)
                    {   
                        _toast.ShowError($"Bạn Không Thể Để Thời Gian Bắt Đầu Lớn Hơn Thời Gian Kết Thúc {x.ClassNanme}-{x.SubjectName}  !");
                        return;
                    }
                }



            }
            if (String.IsNullOrEmpty(GetTitle))
            {
                _toast.ShowError($"Bạn Chưa Điền Tiêu Đề Thông Báo !");
                return;
            }
            if (String.IsNullOrEmpty(GetMess))
            {
                _toast.ShowError($"Link Tham Khảo Không Được Để Trống !");
                return;
            }
            Regex reg = new Regex(pattern, RegexOptions.Compiled | RegexOptions.IgnoreCase);

            if (!reg.IsMatch(GetMess))
            {
                _toast.ShowError($"Link Không Phù Hợp");
                return;
            }

            var GetIdUser = _userManager.Users.Where(c => c.Email == userEmail.Replace("-", ".")).Select(c => c.Id).FirstOrDefault();
            var res = await _ISubmiter.AddMultipleDeadLine(new ListHomeWorkForStudent()
            {
                Id = Guid.NewGuid(),
                setMultipleClasses = _lstClassHomeWork.Where(c => c.IsChecked == true).ToList(),
                SubmitTime = DateTime.Now,
                SubmitLink = "",
                Titile = GetTitle,
                Status = 0,
                IdStudent = Guid.NewGuid(),

            });

            if (res)
            {
                foreach (var x in _lstClassHomeWork)
                {
                    NewFeedVM newFeedVM = new NewFeedVM()
                    {
                        Id = Guid.NewGuid(),
                        Title = GetTitle,
                        Content = GetMess,
                        Image = "HomeWork",
                        Status = 0,
                        CratedTime = DateTime.Now,
                        EndDate = x.EndTime,
                        Priority = 1,
                        IdLesson = x.IdLesson,
                        IsReaded = false,
                        IdClass = x.IdClass,
                        IdSubject = x.IdSubject,
                        IdTypeOfNewFeed = Guid.Parse("9A0CCC99-F28A-4608-8BD4-48EE2BD2E0FB"),
                        IdUser = _userManager.Users.ToList().Where(c => c.Email.ToLower() == userEmail.Replace("-", ".")).Select(c => c.Id).FirstOrDefault()
                    };
                    var ress = await _ISender.SendAsync(newFeedVM);


                }
                _lstClassHomeWork.Clear();
                GetTitle = "";
                GetMess = "";
                _toast.ShowSuccess(" Thêm Deadline Thành Công !");
                return;
            }
            else
            {
                _toast.ShowError(" Thêm Deadline Thất Bại  !");
                return;
            }
        }
        else{
            _toast.ShowError("Bạn Chưa Chọn Lớp Để Thêm Deadline");
            return;
        }

    }




    private async Task SelectedPage(int page)
    {
        _searchDTO.PageNumber = page;
        await GetClassList();
    }

    private async Task AddToBookMark(Guid IdClass, Guid? IdSubjct, string classromm, string subject, string JoinCode)
    {

        if (_lstlessUP.Any(c => c.SubjectId == IdSubjct) == false)
        {
            ToastService.ShowError("Môn Học Này Chưa Có Bài Học, Không Thể Tạo DeadLine Được");
            return;
        }
        if (_lstClass.Where(c => c.Id == IdClass && c.SubjectId == IdSubjct).Select(c => c.ListStudent).FirstOrDefault().Count() == 0)
        {
            ToastService.ShowError("Lớp Học Này Không Có Sinh Viên Để Gia Hạn");
            return;
        }
        if (_lstClassHomeWork.Any(c => c.IdClass == IdClass && c.IdSubject == IdSubjct) == false)
        {

            _lstClassHomeWork.Add(new SetMultipleClass()
                {
                    IdClass = IdClass,
                    SubjectName = subject,
                    ClassNanme = classromm,
                    StartedDate = DateTime.Now,
                    JoinCode = JoinCode,
                    EndTime = Convert.ToDateTime(DateTime.Now.AddDays(3)),
                    IdSubject = Guid.Parse(IdSubjct.ToString()),
                    IsChecked = true
                });
            ToastService.ShowSuccess("Đã Thêm Thành Công Lớp Vào Danh Sách Deadline");
            return;
        }
    }
    private async Task RedirectToChitiet(string idclass, string specializedId, string lecuId, string subjectId)
    {
        string a = "";
        string b = "";
        string c = "";
        string d = "";

        a = idclass.Replace("/", "I0H");
        b = specializedId.Replace("/", "I0H");
        c = lecuId.Replace("/", "I0H");
        d = subjectId.Replace("/", "I0H");

        var url = Path.Combine($"/ViewChiTitet/{a}/{b}/{c}/{d}");
        navigationManager.NavigateTo(url);
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ILocalStorageService _localStorageService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime jsRuntime { get; set; }
    }
}
#pragma warning restore 1591
