// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace FPLSP.Pages.QuizQuesstionQuizUP
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using FPLSP;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using FPLSP.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using MudBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using FPLSP.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Blazored.Typeahead;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using CurrieTechnologies.Razor.SweetAlert2;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\QuizQuesstionQuizUP\MainQuizQuesstionQuizUp.razor"
using FPLSP.Components.QuizQuesstionQuizUPComponents;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\QuizQuesstionQuizUP\MainQuizQuesstionQuizUp.razor"
using FPLSP.Repositories.Interfaces;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\QuizQuesstionQuizUP\MainQuizQuesstionQuizUp.razor"
using FPLSP.Server.Data.SeedWork;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\QuizQuesstionQuizUP\MainQuizQuesstionQuizUp.razor"
using FPLSP.Server.Domain.Dtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\QuizQuesstionQuizUP\MainQuizQuesstionQuizUp.razor"
using FPLSP.Server.Infrastructure.ViewModels.QuizQuesstionQuizUP;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\QuizQuesstionQuizUP\MainQuizQuesstionQuizUp.razor"
using Blazored.Toast.Services;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Components.RouteAttribute("/quizQuesstionQuizUP/{idspecialized}/{idsubject}/{idquiz}")]
    public partial class MainQuizQuesstionQuizUp : global::Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 93 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\QuizQuesstionQuizUP\MainQuizQuesstionQuizUp.razor"
 
    [Parameter]
    public string idquiz { get; set; }
    [Parameter]
    public string idsubject { get; set; }
    [Parameter]
    public string idspecialized { get; set; }
    public List<QuizQuesstionQuizUPDto> ListQuizQuestionQuizCP { get; set; } = new List<QuizQuesstionQuizUPDto>();
    public MetaData MetaData { get; set; } = new MetaData();

    private QuizQuesstionQuizUPListSearch _parameters = new QuizQuesstionQuizUPListSearch();
    [Inject]
    public NavigationManager NavigationManager { get; set; }
    [Inject]
    public IQuizQuesstionQuizUPClient _iQuizQuesstionQuizCPClient { get; set; }
    [Parameter]
    public string Error { get; set; }

    private bool Check = false;
    [Inject] private IToastService _toastService { get; set; }

    private string _idQuizQuestionQuiz;
    protected Comfirmation DeleteConfirmation { get; set; }

    private List<Guid> _removeListQuizQuestionQuiz = new List<Guid>();


    private int stt = 0;

    protected async override Task OnInitializedAsync()
    {
        await GetTasks();
    }
    public async Task SearchTask(QuizQuesstionQuizUPListSearch lessonContentListSearch)
    {
        _parameters = lessonContentListSearch;
        Check = false;
        await GetTasks();
    }
    private async Task Quaylai()
    {
        var url = Path.Combine("/quizUP/" + idspecialized + "/" + idsubject);
        NavigationManager.NavigateTo(url);
    }
    private async Task RedirectToCreate()
    {
        var url = Path.Combine("/createquizQuesstionQuizUP/" + idspecialized + "/" + idsubject + "/" + idquiz.ToString());
        NavigationManager.NavigateTo(url);
    }
    private void RedirectToDetails(Guid idQuesstion, Guid idQuiz)
    {

        var url = Path.Combine("/quizQuesstionDetailsQuizCp/", idQuesstion.ToString(), idQuiz.ToString(), idsubject);
        NavigationManager.NavigateTo(url);
    }
    private void RedirectToUpdate(string idspecialized, string idsubject, string idquiz, Guid idQuizQuesstionQuiz)
    {

        var url = Path.Combine($"/quizQuesstionUpdateAnserQuizUP/{idspecialized}/{idsubject}/{idquiz}/{idQuizQuesstionQuiz}");
        NavigationManager.NavigateTo(url);
    }

    private async Task RedirectToDelete(Guid Idspecialized, Guid Idlecturers)
    {
        var url = Path.Combine("/lectuterSpecializedDelete/", idquiz.ToString(), idsubject.ToString(), Idspecialized.ToString(), Idlecturers.ToString());
        NavigationManager.NavigateTo(url);
    }
    private async Task GetTasks()
    {
        try
        {
            var pagingResponse = await _iQuizQuesstionQuizCPClient.GetPagingParamets(Guid.Parse(idquiz), _parameters);
            ListQuizQuestionQuizCP = pagingResponse.Items;
            MetaData = pagingResponse.MetaData;
        }
        catch (Exception ex)
        {
            Error = ex.Message;
        }

    }

    private async Task SelectedPage(int page)
    {
        _parameters.PageNumber = page;
        Check = false;
        await GetTasks();
    }

    public async Task OnDelete(Guid id)
    {
        _idQuizQuestionQuiz = id.ToString();
        DeleteConfirmation.show();
    }
    public async Task OnConfirmationDelete(bool deleteconfirmed)
    {

        stt = 0;
        if (deleteconfirmed && _idQuizQuestionQuiz == null && _removeListQuizQuestionQuiz.Count == 0)
        {
            _toastService.ShowError("Bạn chưa chọn đối tượng để xóa");
            await GetTasks();
            NavigationManager.NavigateTo($"/quizQuesstionQuizUP/{idspecialized}/{idsubject}/{idquiz}");
        }
        else if (deleteconfirmed && _idQuizQuestionQuiz != null)
        {
            var result = await _iQuizQuesstionQuizCPClient.Delete(Guid.Parse(_idQuizQuestionQuiz));
            if (result == 1)
            {
                _toastService.ShowSuccess("Xóa thành công");
                await GetTasks();
                NavigationManager.NavigateTo($"/quizQuesstionQuizUP/{idspecialized}/{idsubject}/{idquiz}");
            }
            else
            {
                _toastService.ShowError("Xóa thất bại");
                await GetTasks();
                NavigationManager.NavigateTo($"/quizQuesstionQuizUP/{idspecialized}/{idsubject}/{idquiz}");
            }
        }
        else if (deleteconfirmed && _removeListQuizQuestionQuiz != null)
        {

            var result = await _iQuizQuesstionQuizCPClient.DeleteListQuizQuestionQuiz(_removeListQuizQuestionQuiz);
            if (result == 1)
            {
                _toastService.ShowSuccess("Xóa thành công");
                await GetTasks();
                NavigationManager.NavigateTo($"/quizQuesstionQuizUP/{idspecialized}/{idsubject}/{idquiz}");
            }
            else
            {
                _toastService.ShowError("Xóa thất bại");

                await GetTasks();
                NavigationManager.NavigateTo($"/quizQuesstionQuizUP/{idspecialized}/{idsubject}/{idquiz}");
            }
        }
        _idQuizQuestionQuiz = null;
        _removeListQuizQuestionQuiz = null;
        Check = false;
    }
    public void DeleteQuiz(Guid id)
    {
        _idQuizQuestionQuiz = id.ToString();
        DeleteConfirmation.show();
    }
    void CheckManual(Guid reportId, bool check)
    {
        stt = 0;
        if (check == true)
        {
            foreach (var x in ListQuizQuestionQuizCP.Where(c => c.QuizQuestionId == reportId))
            {
                x.IsChecked = false;
            }
        }
        if (check == false)
        {
            foreach (var x in ListQuizQuestionQuizCP.Where(c => c.QuizQuestionId == reportId))
            {
                x.IsChecked = true;
            }
        }
    }
    void DeleteAll()
    {
        stt = 0;
        _removeListQuizQuestionQuiz = ListQuizQuestionQuizCP.Where(c => c.IsChecked == true).Select(c => c.QuizQuestionId).ToList();
        DeleteConfirmation.show();
    }
    void CheckAllExpense(object checkValue)
    {
        stt = 0;
        if (Convert.ToBoolean(checkValue) == false)
        {
            ListQuizQuestionQuizCP.ToList().ForEach(e => e.IsChecked = false);
        }
        else
        {
            ListQuizQuestionQuizCP.ToList().ForEach(e => e.IsChecked = true);
        }
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
