// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace FPLSP.Pages.QuizQuesstionQuizUP
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
#nullable restore
#line 1 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using FPLSP;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using FPLSP.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using MudBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using FPLSP.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Blazored.Typeahead;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using CurrieTechnologies.Razor.SweetAlert2;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\QuizQuesstionQuizUP\QuizQuesstionUpdateAnserQuizUp.razor"
using FPLSP.Server.Domain.Enums;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\QuizQuesstionQuizUP\QuizQuesstionUpdateAnserQuizUp.razor"
using FPLSP.Server.Infrastructure.ViewModels.QuizQuesstionQuizUP;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\QuizQuesstionQuizUP\QuizQuesstionUpdateAnserQuizUp.razor"
using Microsoft.AspNetCore.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\QuizQuesstionQuizUP\QuizQuesstionUpdateAnserQuizUp.razor"
using FPLSP.Repositories.Interfaces;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\QuizQuesstionQuizUP\QuizQuesstionUpdateAnserQuizUp.razor"
using FPLSP.Server.Domain.Dtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\QuizQuesstionQuizUP\QuizQuesstionUpdateAnserQuizUp.razor"
using Blazored.Toast.Services;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Components.RouteAttribute("/quizQuesstionUpdateAnserQuizUP/{idspecialized}/{idsubject}/{idquiz}/{idquizquesstionquiz}/")]
    public partial class QuizQuesstionUpdateAnserQuizUp : global::Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 299 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\QuizQuesstionQuizUP\QuizQuesstionUpdateAnserQuizUp.razor"
 
     [Parameter]
        public string idquiz { get; set; }
        [Parameter]
        public string idquizquesstionquiz { get; set; }

        [Parameter]
        public string idsubject { get; set; }
        [Parameter]
        public string idspecialized { get; set; }

        private QuizQuesstionQuizUPUpdateVM lessonContent { get; set; } = new QuizQuesstionQuizUPUpdateVM();
        [Inject]
        public NavigationManager Navigation { get; set; }
        public int f = 0;
        public int g = 0;
        public int countAnswer = 0;
        public int answerquestion = 0;
        [Inject]
        public IQuizQuesstionQuizUPClient _iQuizQuesstionQuizUPClient { get; set; }

        public QuizQuesstionQuizUPDto CP;
        public QuizQuesstionQuizUPDto UndoQuizQuestionQuiz;
        public bool ShowAuthError { get; set; }
        [Inject] private IToastService _toastService { get; set; }

        [Parameter]
        public string Error { get; set; }
        protected async override Task OnInitializedAsync()
        {
            CP = await _iQuizQuesstionQuizUPClient.GetbyId(Guid.Parse(idquizquesstionquiz));
            UndoQuizQuestionQuiz = CP;

            lessonContent = new QuizQuesstionQuizUPUpdateVM()
            {
                StatusQuizQuiz = CP.StatusQuizQuiz,
                QuestionName = CP.QuestionName,
                QuestionForm = CP.QuestionForm,
                lsAnswer = CP.Answers,
                lsIsCorrect = CP.lsIsCorrect,
            };
            for (var i = 0; i < lessonContent.lsAnswer.Count; i++)
            {
                if (i == 0)
                {
                    lessonContent.Answer = lessonContent.lsAnswer[i];
                    lessonContent.IsCorrect = lessonContent.lsIsCorrect[i];
                }
                if (i == 1)
                {
                    lessonContent.Answer2 = lessonContent.lsAnswer[i];
                    lessonContent.IsCorrect2 = lessonContent.lsIsCorrect[i];
                }
                if (i == 2)
                {
                    lessonContent.Answer3 = lessonContent.lsAnswer[i];
                    lessonContent.IsCorrect3 = lessonContent.lsIsCorrect[i];
                }
                if (i == 3)
                {
                    lessonContent.Answer4 = lessonContent.lsAnswer[i];
                    lessonContent.IsCorrect4 = lessonContent.lsIsCorrect[i];
                }
            }
        }
        private async Task Update()
        {
            lessonContent.lsAnswer = new List<string>();
            lessonContent.lsIsCorrect = new List<bool>();
            if (lessonContent.QuestionForm == QuestionForms.YesNo)
            {
                lessonContent.Answer = "Yes";
                lessonContent.lsAnswer.Add(lessonContent.Answer);
                lessonContent.lsIsCorrect.Add(lessonContent.IsCorrect);

                lessonContent.Answer2 = "No";
                lessonContent.lsAnswer.Add(lessonContent.Answer2);
                lessonContent.lsIsCorrect.Add(lessonContent.IsCorrect2);

                for (int i = 0; i < lessonContent.lsIsCorrect.Count; i++)
                {
                    if (lessonContent.lsIsCorrect[i] == false)
                    {
                        f += 1;
                    }
                    if (lessonContent.lsIsCorrect[i] == true)
                    {
                        g += 1;
                    }
                }
                if (f == 2 || g == 2)
                {
                    _toastService.ShowError("Không được có 2 đáp án giống nhau");
                    var url = Path.Combine("/quizQuesstionUpdateAnserQuizUP/" + idspecialized + "/" + idsubject + "/" + idquiz + "/" + idquizquesstionquiz);
                    Navigation.NavigateTo(url);
                    f = 0;
                    g = 0;
                    return;
                }
            }
            else if (lessonContent.QuestionForm == QuestionForms.MultipleChoise)
            {
                lessonContent.lsAnswer.Clear();
                lessonContent.lsIsCorrect.Clear();
                countAnswer = 0;
                f = 0;
                g = 0;
                lessonContent.lsAnswer.Add(lessonContent.Answer);
                lessonContent.lsIsCorrect.Add(lessonContent.IsCorrect);

                lessonContent.lsAnswer.Add(lessonContent.Answer2);
                lessonContent.lsIsCorrect.Add(lessonContent.IsCorrect2);

                lessonContent.lsAnswer.Add(lessonContent.Answer3);
                lessonContent.lsIsCorrect.Add(lessonContent.IsCorrect3);

                lessonContent.lsAnswer.Add(lessonContent.Answer4);
                lessonContent.lsIsCorrect.Add(lessonContent.IsCorrect4);
                for (int i = 0; i < lessonContent.lsIsCorrect.Count; i++)
                {
                    if (lessonContent.lsIsCorrect[i] == false)
                    {
                        f += 1;
                    }
                    if (lessonContent.lsAnswer[i] == "")
                    {
                        countAnswer += 1;
                    }
                }
                for (int i = 0; i < lessonContent.lsAnswer.Count; i++)
                {
                    for (int j = i + 1; j < lessonContent.lsAnswer.Count; j++)
                    {
                        if (lessonContent.lsAnswer[i] == lessonContent.lsAnswer[j])
                        {
                            answerquestion += 1;
                        }
                    }


                }
                if (countAnswer >= 1)
                {
                    _toastService.ShowError("Phải nhập đủ 4 câu trả lời");
                    var url = Path.Combine("/quizQuesstionUpdateAnserQuizUP/" + idspecialized + "/" + idsubject + "/" + idquiz + "/" + idquizquesstionquiz);
                    Navigation.NavigateTo(url);
                    countAnswer = 0;
                    return;
                }
                if (answerquestion > 0)
                {
                    _toastService.ShowError("Không được có câu trả lời trùng nhau");
                    var url = Path.Combine("/quizQuesstionUpdateAnserQuizUP/" + idspecialized + "/" + idsubject + "/" + idquiz);
                    Navigation.NavigateTo(url);
                    answerquestion = 0;
                    return;
                }
                else if (f == 4)
                {
                    _toastService.ShowError("Không được có 4 đáp án sai");
                    var url = Path.Combine("/quizQuesstionUpdateAnserQuizUP/" + idspecialized + "/" + idsubject + "/" + idquiz + "/" + idquizquesstionquiz);
                    Navigation.NavigateTo(url);
                    f = 0;
                    return;
                }
            }
            else if (lessonContent.QuestionForm == QuestionForms.SupplyItems)
            {
                lessonContent.lsAnswer.Add(lessonContent.Answer);
                lessonContent.IsCorrect = true;
                lessonContent.lsIsCorrect.Add(lessonContent.IsCorrect);
                if (lessonContent.Answer == "")
                {
                    _toastService.ShowError("Bạn chưa nhập câu trả lời");
                    var url = Path.Combine("/quizQuesstionUpdateAnserQuizUP/" + idspecialized + "/" + idsubject + "/" + idquiz + "/" + idquizquesstionquiz);
                    Navigation.NavigateTo(url);
                    return;
                }
            }
            else if (lessonContent.QuestionForm == QuestionForms.MatchingItems)
            {
                lessonContent.lsAnswer.Clear();
                lessonContent.lsIsCorrect.Clear();
                countAnswer = 0;
                g = 0;
                f = 0;
                lessonContent.lsAnswer.Add(lessonContent.Answer);
                lessonContent.lsIsCorrect.Add(lessonContent.IsCorrect);

                lessonContent.lsAnswer.Add(lessonContent.Answer2);
                lessonContent.lsIsCorrect.Add(lessonContent.IsCorrect2);

                lessonContent.lsAnswer.Add(lessonContent.Answer3);
                lessonContent.lsIsCorrect.Add(lessonContent.IsCorrect3);

                lessonContent.lsAnswer.Add(lessonContent.Answer4);
                lessonContent.lsIsCorrect.Add(lessonContent.IsCorrect4);

                for (int i = 0; i < lessonContent.lsIsCorrect.Count; i++)
                {
                    if (lessonContent.lsIsCorrect[i] == true)
                    {
                        f += 1;
                    }
                    if (lessonContent.lsIsCorrect[i] == false)
                    {
                        g += 1;
                    }
                    if (lessonContent.lsAnswer[i] == "")
                    {
                        countAnswer += 1;
                    }
                }
                for (int i = 0; i < lessonContent.lsAnswer.Count; i++)
                {
                    for (int j = i + 1; j < lessonContent.lsAnswer.Count; j++)
                    {
                        if (lessonContent.lsAnswer[i] == lessonContent.lsAnswer[j])
                        {
                            answerquestion += 1;
                        }
                    }


                }
                if (countAnswer >= 1)
                {
                    _toastService.ShowError("Phải nhập đủ 4 câu trả lời");
                    var url = Path.Combine("/quizQuesstionUpdateAnserQuizUP/" + idspecialized + "/" + idsubject + "/" + idquiz + "/" + idquizquesstionquiz);
                    Navigation.NavigateTo(url);
                    countAnswer = 0;
                    return;
                }
                if (answerquestion > 0)
                {
                    _toastService.ShowError("Không được có câu trả lời trùng nhau");
                    var url = Path.Combine("/quizQuesstionUpdateAnserQuizUP/" + idspecialized + "/" + idsubject + "/" + idquiz);
                    Navigation.NavigateTo(url);
                    answerquestion = 0;
                    return;
                }
                if (g == 4)
                {
                    _toastService.ShowError("Không được có 4 câu trả lời sai!");
                    var url = Path.Combine("/quizQuesstionUpdateAnserQuizUP/" + idspecialized + "/" + idsubject + "/" + idquiz + "/" + idquizquesstionquiz);
                    Navigation.NavigateTo(url);
                    g = 0;
                    return;
                }
                if (f > 1)
                {
                    _toastService.ShowError("Không được có nhiều hơn 1 đáp án đúng!");
                    var url = Path.Combine("/quizQuesstionUpdateAnserQuizUP/" + idspecialized + "/" + idsubject + "/" + idquiz + "/" + idquizquesstionquiz);
                    Navigation.NavigateTo(url);
                    f = 0;
                    return;
                }

            }
            var result = await _iQuizQuesstionQuizUPClient.Update(Guid.Parse(idquizquesstionquiz), lessonContent);

            if (result != 1)
            {
                _toastService.ShowError("Chưa cập nhật được!");
                var url = Path.Combine("/quizQuesstionUpdateAnserQuizUP/" + idspecialized + "/" + idsubject + "/" + idquiz + "/" + idquizquesstionquiz);
                Navigation.NavigateTo(url);
            }
            else
            {
                _toastService.ShowSuccess("Cập nhật thành công!");
                var url = Path.Combine("/quizQuesstionQuizUP/" + idspecialized + "/" + idsubject + "/" + idquiz);
                Navigation.NavigateTo(url);
            }

        }

        private async Task Quaylai()
        {
            var url = Path.Combine("/quizQuesstionQuizUP/" + idspecialized + "/" + idsubject + "/" + idquiz);
            Navigation.NavigateTo(url);
        }
        private async void KhoiPhuc()
        {
            lessonContent = new QuizQuesstionQuizUPUpdateVM()
            {
                StatusQuizQuiz = UndoQuizQuestionQuiz.StatusQuizQuiz,
                QuestionName = UndoQuizQuestionQuiz.QuestionName,
                QuestionForm = UndoQuizQuestionQuiz.QuestionForm,
                lsAnswer = UndoQuizQuestionQuiz.Answers,
                lsIsCorrect = UndoQuizQuestionQuiz.lsIsCorrect,
            };
            for (var i = 0; i < lessonContent.lsAnswer.Count; i++)
            {
                if (i == 0)
                {
                    lessonContent.Answer = lessonContent.lsAnswer[i];
                    lessonContent.IsCorrect = lessonContent.lsIsCorrect[i];
                }
                if (i == 1)
                {
                    lessonContent.Answer2 = lessonContent.lsAnswer[i];
                    lessonContent.IsCorrect2 = lessonContent.lsIsCorrect[i];
                }
                if (i == 2)
                {
                    lessonContent.Answer3 = lessonContent.lsAnswer[i];
                    lessonContent.IsCorrect3 = lessonContent.lsIsCorrect[i];
                }
                if (i == 3)
                {
                    lessonContent.Answer4 = lessonContent.lsAnswer[i];
                    lessonContent.IsCorrect4 = lessonContent.lsIsCorrect[i];
                }
            }
        }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
