// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace FPLSP.Pages.StudentUPPages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
#nullable restore
#line 1 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using FPLSP;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using FPLSP.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using MudBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using FPLSP.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Blazored.Typeahead;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using CurrieTechnologies.Razor.SweetAlert2;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\StudentUPPages\StudentUPCreate.razor"
using Microsoft.AspNetCore.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\StudentUPPages\StudentUPCreate.razor"
using FPLSP.Server.Infrastructure.ViewModels.StudentsUPVm;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\StudentUPPages\StudentUPCreate.razor"
using FPLSP.Server.Domain.Entities.UserParts;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\StudentUPPages\StudentUPCreate.razor"
using Blazored.Toast.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\StudentUPPages\StudentUPCreate.razor"
using FPLSP.Repositories.Interfaces;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\StudentUPPages\StudentUPCreate.razor"
           [Authorize(Roles = "LecturerFPLSP")]

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Components.RouteAttribute("/StudentUPCreate")]
    public partial class StudentUPCreate : global::Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 182 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\StudentUPPages\StudentUPCreate.razor"
       

    [Parameter]
    public string _maxIds { get; set; }

    public StudentUPCreateVm student = new StudentUPCreateVm();
    public StudentUP StudentMaxId { get; set; } = new StudentUP();
    public List<StudentUP> ListStudentUps { get; set; } = new List<StudentUP>();

    [Inject] private IToastService _toastService { get; set; }
    [Inject] public IStudentUPRepo _repo { get; set; }

    [Inject] public NavigationManager navigation { get; set; }
    public bool ShowAuthError { get; set; }
    [Parameter]
    public string Error { get; set; }
    public string path { get; set; }
    public string imageurl { get; set; } = "\\css\\images\\Others\\logoFPT.png";


    public IReadOnlyList<IBrowserFile> selectedFiles;



    protected async override Task OnInitializedAsync()
    {
        student.ImageUrl = "\\css\\images\\Others\\logoFPT.png";
        var temp = "00000";
        StudentMaxId = await _repo.GetMaxIdStudentUP();
        var value = Convert.ToString(Convert.ToInt32(StudentMaxId.StudentCode.Substring(2, StudentMaxId.StudentCode.Length - 2)) + 1);
        if ((temp.Length - value.Length) <= 0)
        {
            temp = value;
        }
        else { temp = temp.Substring(0, temp.Length - value.Length) + value; }

        _maxIds = "PH" + temp;
        ListStudentUps = new List<StudentUP>();
        ListStudentUps = await _repo.GetAllStudentUPAsync();
    }
    private async Task Create()
    {
        ShowAuthError = false;
        if (Equals("\\css\\images\\Others\\logoFPT.png", student.ImageUrl))
        {
            _toastService.ShowError("Bạn chưa chọn ảnh");
            navigation.NavigateTo("/StudentUPCreate");
        }
        else if (CheckMail(student.Email))
        {
            _toastService.ShowError("Email bị trùng");
            ShowAuthError = true;
            navigation.NavigateTo("/StudentUPCreate");
        }
        else if (CheckCMT(student.IdentityCardNumber))
        {
            _toastService.ShowError("CCCD bị trùng");
            ShowAuthError = true;
            navigation.NavigateTo("/StudentUPCreate");
        }
        else if (CheckPhoneNumber(student.PhoneNumber))
        {
            _toastService.ShowError("Số điện thoại bị trùng");
            ShowAuthError = true;
            navigation.NavigateTo("/StudentUPCreate");
        }
        else
        {
            var result = await _repo.CreateStudentUP(student);
            if (result != 1)
            {
                _toastService.ShowError("Lỗi không thêm được Sinh viên");
                ShowAuthError = true;
                navigation.NavigateTo("/StudentUPCreate");
            }
            else
            {
                _toastService.ShowSuccess("Thêm Thành Công");
                navigation.NavigateTo("/StudentUPList");
            }
        }
    }
    private void AssignImageUrl(string imgUrl) => student.ImageUrl = imgUrl;
    public async void ClearForm()
    {
        student.StudentName = null;
        student.Address = null;
        student.DateOfBirth = DateTime.Today;
        student.Description = null;
        student.Email = null;
        student.Ethnic = null;
        student.FathersName = null;
        student.IdentityCardNumber = null;
        student.Gender = default;
        student.ImageUrl = null;
        student.MotherName = null;
        student.PhoneNumber = null;
        student.HomeTown = null;
        student.Password = null;
        student.IssuedOn = DateTime.Today;
        student.Status = 0;
        await OnInitializedAsync();
    }

    private bool CheckMail(string mail)
    {
        var checkExited = ListStudentUps.Any(c => Equals(mail, c.Email));
        return checkExited;
    }
    private bool CheckCMT(string CCCD)
    {
        var checkExited = ListStudentUps.Any(c => Equals(CCCD, c.IdentityCardNumber));
        return checkExited;
    }
    private bool CheckPhoneNumber(string phoneNumber)
    {
        var checkExited = ListStudentUps.Any(c => Equals(phoneNumber, c.PhoneNumber));
        return checkExited;
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
