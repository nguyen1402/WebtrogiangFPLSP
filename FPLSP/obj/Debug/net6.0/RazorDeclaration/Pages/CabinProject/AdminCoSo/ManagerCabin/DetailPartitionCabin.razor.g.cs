// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace FPLSP.Pages.CabinProject.AdminCoSo.ManagerCabin
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using FPLSP;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using FPLSP.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using MudBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using FPLSP.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Blazored.Typeahead;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using CurrieTechnologies.Razor.SweetAlert2;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\CabinProject\AdminCoSo\ManagerCabin\DetailPartitionCabin.razor"
using Blazored.LocalStorage;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\CabinProject\AdminCoSo\ManagerCabin\DetailPartitionCabin.razor"
using Blazored.Toast.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\CabinProject\AdminCoSo\ManagerCabin\DetailPartitionCabin.razor"
using FPLSP.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\CabinProject\AdminCoSo\ManagerCabin\DetailPartitionCabin.razor"
using FPLSP.Data.Securities;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\CabinProject\AdminCoSo\ManagerCabin\DetailPartitionCabin.razor"
using FPLSP.Repositories.Interfaces;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\CabinProject\AdminCoSo\ManagerCabin\DetailPartitionCabin.razor"
using FPLSP.Server.Domain.Entities.CoresParts;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\CabinProject\AdminCoSo\ManagerCabin\DetailPartitionCabin.razor"
using FPLSP.Server.Infrastructure.ViewModels;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\CabinProject\AdminCoSo\ManagerCabin\DetailPartitionCabin.razor"
using FPLSP.Server.Infrastructure.ViewModels.LecturerCPVm;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\CabinProject\AdminCoSo\ManagerCabin\DetailPartitionCabin.razor"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\CabinProject\AdminCoSo\ManagerCabin\DetailPartitionCabin.razor"
using System.Security.Claims;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\CabinProject\AdminCoSo\ManagerCabin\DetailPartitionCabin.razor"
           [Authorize(Roles = "DirectorOfTraining,Staff")]

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Components.RouteAttribute("/detailuserCabin/{GetIdCryto}/{maxlevelCryto}/{IdCoSoCryto}")]
    public partial class DetailPartitionCabin : global::Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 66 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\CabinProject\AdminCoSo\ManagerCabin\DetailPartitionCabin.razor"
 
    string cabin = "CanViewCabinProject";
    [Inject] public IUserIdentityRepo _UserIdentityRepo { get; set; }
    private UserInListRoles _User;
    [Inject]
    public IRoleUserIdentityRepo _roleUserIdentityRepo { get; set; }
    [Inject] public ILecturersCPRepo _lecturersCPRepo { get; set; }
    private List<IdentityRole> _lstRole { get; set; }
    private IdentityRole _role;

    [Inject] public NavigationManager Navigation { get; set; }
    [Inject] public IToastService toastService { get; set; }

    [Parameter]
    public string GetIdCryto { get; set; }
    [Parameter]
    public string maxlevelCryto { get; set; }
    [Parameter]
    public string IdCoSoCryto { get; set; }

    public string IdCoSo { get; set; }
    public string GetId { get; set; }
    public string maxlevel { get; set; }

    //tạo ra 1 list claim redriect
    private List<Claim> _lstRedirect = new List<Claim>();
    [Inject] public UserManager<UserSignIn> _userManager { get; set; }


    [Inject]
    public CryptoServices _cryptoServices { get; set; }
    public DetailPartitionCabin()
    {

        _User = new UserInListRoles();
        _role = new IdentityRole();
    }
    protected override async Task OnInitializedAsync()
    {
        _lstRedirect.Add(new Claim("CanViewCabinProject", "true"));

        IdCoSo = _cryptoServices.Decrypt(IdCoSoCryto.Replace("cabin", "/"));
        GetId = _cryptoServices.Decrypt(GetIdCryto.Replace("cabin", "/"));
        maxlevel = _cryptoServices.Decrypt(maxlevelCryto.Replace("cabin", "/"));
        _User = await _UserIdentityRepo.GetUserRoleById(GetId);
        _lstRole = await _roleUserIdentityRepo.GetAllRolesAsync();
        //xử lý loại trừ các role cấp cao hơn role mà dường dùng truyền vào
        if (maxlevel == "5")
        {
            foreach (var role in _lstRole.ToList())
            {
                if (role.Name != "DirectorOfTraining" && role.Name != "Staff" && role.Name != "Lecturer")
                {
                    _lstRole.Remove(role);
                }
            }
        }
        else if (maxlevel == "3")
        {
            foreach (var role in _lstRole.ToList())
            {
                if (role.Name != "Lecturer")
                {
                    _lstRole.Remove(role);
                }
            }

        }

        var let = await _lecturersCPRepo.GetAllLecturerAsync();



    }

    public void Add(string name)
    {
        if (_User.ListRoles.Any(c => c == name) == false)
        {

            _User.ListRoles.Add(name);
        }
    }
    private async void AddRoleToUser()
    {
        try
        {
            if (_User.ListRedirectClaims.Any(c => c.Type == cabin) == false)
            {
                _User.ListRedirectClaims.Add(_lstRedirect.Find(c => c.Type == cabin));
            }
            UserUpdateRolesHasClaims userUpdateRoles = new UserUpdateRolesHasClaims()
                {
                    ID = GetId,
                    Name = _User.UserName,
                    claims = _User.ListRedirectClaims,
                    RoleNames = _User.ListRoles.ToArray()
                };

            //kiểm tra xem cơ sở cũ ở trongdatabase với cơ sở mới vừa chọn có khác nhau hay không
            var getCurrentUser = await _UserIdentityRepo.GetUserRoleById(GetId);
            foreach (var user in _userManager.Users.ToList().Where(c => c.Id == GetId))
            {
                user.IdTrainingFacility = Guid.Parse(IdCoSo);
                await _userManager.UpdateAsync(user);

            }

            //cập nhật mới lại cho giảng viên
            if (userUpdateRoles.RoleNames.ToList().Any(c => c == "Lecturer"))
            {
                var update = new CreateleatureForTrainVm()
                    {
                        Id = Guid.Parse(_User.Id),
                        Email = _User.UserName,
                        IdTrain = Guid.Parse(IdCoSo)
                    };
                var all = await _lecturersCPRepo.GetAllLecturerAsync();
                foreach (var x in all.Where(c => c.Email == _User.Email))
                {
                    await _lecturersCPRepo.UpdateLecturerTrain(x.Id, update);
                }
            }
            //}
            //}

            var res = await _UserIdentityRepo.AddRolesToUser(userUpdateRoles);
            if (res)
            {

                toastService.ShowSuccess($"Cấp quyền thành công cho {_User.UserName}");
                Navigation.NavigateTo($"/listuseridenOfCabin/{_cryptoServices.Encrypt(maxlevel)}/{_cryptoServices.Encrypt(IdCoSo)}");
            }
            else
            {
                toastService.ShowError($"Cấp quyền thất bại cho {_User.UserName}");
                return;
            }
        }
        catch (Exception)
        {
            toastService.ShowError("Đã xảy ra lỗi, vui lòng thử lại");
            await OnInitializedAsync();
        }


    }
    public void Closed(MudChip chip) => _User.ListRoles.Remove(chip.Text);
    public void RemoveReDirect(MudChip chip)
    {

        _User.ListRedirectClaims.Remove((Claim)chip.Value);
    }


#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
