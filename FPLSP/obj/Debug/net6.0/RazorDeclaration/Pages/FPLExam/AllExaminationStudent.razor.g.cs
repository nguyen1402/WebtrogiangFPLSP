// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace FPLSP.Pages.FPLExam
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using FPLSP;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using FPLSP.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using MudBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using FPLSP.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Blazored.Typeahead;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using CurrieTechnologies.Razor.SweetAlert2;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\FPLExam\AllExaminationStudent.razor"
using AntDesign;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\FPLExam\AllExaminationStudent.razor"
using FPLSP.Repositories.Interfaces.FPLExam;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\FPLExam\AllExaminationStudent.razor"
using FPLSP.Server.Infrastructure.Services.Interfaces.FPLExam;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\FPLExam\AllExaminationStudent.razor"
using FPLSP.Server.Infrastructure.ViewModels.FPLExam;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Components.RouteAttribute("/allofexaminationstudent/{IdStudent}")]
    public partial class AllExaminationStudent : global::Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 149 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Pages\FPLExam\AllExaminationStudent.razor"
       
    private System.Timers.Timer _timer = null!;
    private int _secondsToRun = 0;
    bool loading = true;
    bool flag = false;
    [Inject] public IOnlineExamRoomRepo onlineExamRoomServices { get; set; }
    private List<StudentGoToExamViewModel> _lstExamofStudentById = new List<StudentGoToExamViewModel>();
    private List<StudentGoToExamViewModel> _lstExamofStudentByIdFlag = new List<StudentGoToExamViewModel>();
    [Parameter]
    public string IdStudent { get; set; }

    public StudentToExamSearch _StudentToExamSearch { get; set; } = new StudentToExamSearch();

    protected async override Task OnInitializedAsync()
    {
        flag = true;
        _lstExamofStudentById = await onlineExamRoomServices.GetAllOfExamByIdStudent(IdStudent);
        _lstExamofStudentByIdFlag = await onlineExamRoomServices.GetAllOfExamByIdStudent(IdStudent);
        loading = false;
        flag = false;
    }
    private async Task ForceGoToOnlineRoom(StudentGoToExamViewModel studentGoToExamViewModel)
    {

        NavigationManager.NavigateTo($"/onlineroomhandler/{studentGoToExamViewModel.SecretKey}/{studentGoToExamViewModel.IdUser}",true);
    }
    public async Task Start(int secondsToRun, ExamRoomSupervisorViewModel examRoomSupervisorViewModel)
    {
        _secondsToRun = secondsToRun;

        if (_secondsToRun > 0)
        {
            examRoomSupervisorViewModel.CountDown = TimeSpan.FromSeconds(_secondsToRun).ToString(@"d\:hh\:mm\:ss");
            StateHasChanged();
            _timer.Start();

        }

    }
    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {


            using var periodicTimer = new PeriodicTimer(TimeSpan.FromSeconds(15));
            while (await periodicTimer.WaitForNextTickAsync())
            {
                //cứ 5s là làm mới màn này 1 lần


                Console.WriteLine("refresh");
                flag = true;
                if (!string.IsNullOrEmpty(_StudentToExamSearch.nammon))
                {
                    var result = await onlineExamRoomServices.GetAllOfExamByIdStudent(IdStudent);
                    _lstExamofStudentById = result.Where(c => c.SubjectName.ToLower().Contains(_StudentToExamSearch.nammon.ToLower())).ToList();
                }
                if (_StudentToExamSearch.ngaybatdau != _StudentToExamSearch.ngayketthuc)
                {
                    var result = await onlineExamRoomServices.GetAllOfExamByIdStudent(IdStudent);
                    _lstExamofStudentById = result.Where(c => c.StartTime >= _StudentToExamSearch.ngaybatdau && c.EndTime.Date <= _StudentToExamSearch.ngayketthuc).ToList();
                }
                if (string.IsNullOrEmpty(_StudentToExamSearch.nammon))
                {
                    _lstExamofStudentById = await onlineExamRoomServices.GetAllOfExamByIdStudent(IdStudent);
                }

                await InvokeAsync(() =>
                        {

                            StateHasChanged();
                        });

            }
            flag = false;
        }

        //foreach (var x in _lstShedules)
        //{
        //    _timer = new System.Timers.Timer(1000);
        //    _timer.Elapsed += OnTimedEvent;
        //    _timer.AutoReset = true;
        //    var totalseconds = Convert.ToInt32((x.StartTime - DateTime.Now).TotalSeconds);
        //    await Start(totalseconds, x);
        //}
    }



    private async Task Clear()
    {
        flag = true;
        _StudentToExamSearch = new StudentToExamSearch();
        _lstExamofStudentById = _lstExamofStudentByIdFlag;
        flag = false;
    }

    private async Task GetTasksSearch(StudentToExamSearch _StudentToExamSearch)
    {
        flag = true;
        _lstExamofStudentById = _lstExamofStudentByIdFlag;
        if (!string.IsNullOrEmpty(_StudentToExamSearch.nammon))
        {
            _lstExamofStudentById = _lstExamofStudentById.Where(c => c.SubjectName.ToLower().Contains(_StudentToExamSearch.nammon.ToLower())).ToList();
        }
        if (_StudentToExamSearch.ngaybatdau != null && _StudentToExamSearch.ngayketthuc != null)
    {
            _lstExamofStudentById = _lstExamofStudentById.Where(c => c.StartTime >= _StudentToExamSearch.ngaybatdau && c.EndTime.Date <= _StudentToExamSearch.ngayketthuc).ToList();
        }
        if (string.IsNullOrEmpty(_StudentToExamSearch.nammon))
        {
            _lstExamofStudentById = _lstExamofStudentById;
        }
        flag = false;
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavigationManager { get; set; }
    }
}
#pragma warning restore 1591
