#pragma checksum "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "21b00696394c2fc6d07462facb8f6d881c17b68d"
// <auto-generated/>
#pragma warning disable 1591
namespace FPLSP.Components.CabinProject
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using FPLSP;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using FPLSP.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using MudBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using FPLSP.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using Blazored.Typeahead;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\_Imports.razor"
using CurrieTechnologies.Razor.SweetAlert2;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
using Blazored.Toast.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
using FPLSP.Repositories.Interfaces.CabinProject;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
using FPLSP.Repositories.Interfaces;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
using FPLSP.Server.Domain.Entities.CabinProject;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
using FPLSP.Server.Domain.Entities.CoresParts;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
using FPLSP.Server.Infrastructure.ViewModels.CabinProject.BookingCabin;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
using FPLSP.Server.Infrastructure.ViewModels.CabinProject.BookingRequest;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
using FPLSP.Server.Infrastructure.ViewModels.CabinProject.Cabin;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
using FPLSP.Server.Infrastructure.ViewModels.CabinProject.ShiftOfCabin;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
using FPLSP.Server.Infrastructure.ViewModels.CabinProject.TeachingSchedule;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
using Microsoft.AspNetCore.SignalR.Client;

#line default
#line hidden
#nullable disable
    public partial class DetailShift : global::Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
#nullable restore
#line 12 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
 if (ShowConfirmation)
{

#line default
#line hidden
#nullable disable
            __builder.OpenElement(0, "div");
            __builder.AddAttribute(1, "class", "modal fade show d-block");
            __builder.AddAttribute(2, "id", "exampleModal");
            __builder.AddAttribute(3, "tabindex", "-1");
            __builder.AddAttribute(4, "role", "dialog");
            __builder.AddAttribute(5, "style", "max-height:85vh;");
            __builder.OpenElement(6, "div");
            __builder.AddAttribute(7, "class", "modal-dialog");
            __builder.AddAttribute(8, "role", "document");
            __builder.OpenElement(9, "div");
            __builder.AddAttribute(10, "class", "modal-content");
            __builder.OpenElement(11, "div");
            __builder.AddAttribute(12, "class", "modal-header");
            __builder.OpenElement(13, "h5");
            __builder.AddAttribute(14, "class", "modal-title");
            __builder.AddAttribute(15, "id", "exampleModalLabel");
#nullable restore
#line (18,69)-(18,86) 25 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
__builder.AddContent(16, ConfirmationTitle);

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
            __builder.AddMarkupContent(17, "\r\n                    ");
            __builder.OpenElement(18, "button");
            __builder.AddAttribute(19, "type", "button");
            __builder.AddAttribute(20, "class", "close");
            __builder.AddAttribute(21, "data-dismiss", "modal");
            __builder.AddAttribute(22, "aria-label", "Close");
            __builder.AddAttribute(23, "onclick", global::Microsoft.AspNetCore.Components.EventCallback.Factory.Create<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 20 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
                                  () => OnConfirmationChange(false)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddMarkupContent(24, "<span aria-hidden=\"true\">&times;</span>");
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.AddMarkupContent(25, "\r\n                ");
            __builder.OpenElement(26, "div");
            __builder.AddAttribute(27, "class", "modal-body");
            __builder.OpenComponent<global::Microsoft.AspNetCore.Components.Forms.EditForm>(28);
            __builder.AddAttribute(29, "Model", global::Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<global::System.Object>(
#nullable restore
#line 25 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
                                      bookingCabinVM

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(30, "OnSubmit", global::Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>>(global::Microsoft.AspNetCore.Components.EventCallback.Factory.Create<global::Microsoft.AspNetCore.Components.Forms.EditContext>(this, 
#nullable restore
#line 25 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
                                                                  () => OnConfirmationChange(true)

#line default
#line hidden
#nullable disable
            )));
            __builder.AddAttribute(31, "class", "card card-body bg-light");
            __builder.AddAttribute(32, "id", "details-form");
            __builder.AddAttribute(33, "ChildContent", (global::Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>)((context) => (__builder2) => {
                __builder2.OpenComponent<global::Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator>(34);
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(35, "\r\n                        ");
                __builder2.OpenElement(36, "div");
                __builder2.AddAttribute(37, "class", "form-group pt-2");
                __builder2.AddMarkupContent(38, "<label for=\"name\" class=\"col-md-4 col-form-label\">Giảng Viên:</label>\r\n                            ");
                __builder2.OpenComponent<global::Microsoft.AspNetCore.Components.Forms.InputText>(39);
                __builder2.AddAttribute(40, "readonly", true);
                __builder2.AddAttribute(41, "id", "name");
                __builder2.AddAttribute(42, "class", "form-control");
                __builder2.AddAttribute(43, "Value", global::Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<global::System.String>(
#nullable restore
#line 29 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
                                                                                             LecturerName

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(44, "ValueChanged", global::Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>>(global::Microsoft.AspNetCore.Components.EventCallback.Factory.Create<global::System.String>(this, global::Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => LecturerName = __value, LecturerName))));
                __builder2.AddAttribute(45, "ValueExpression", global::Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<global::System.Linq.Expressions.Expression<System.Func<System.String>>>(() => LecturerName));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(46, "\r\n\r\n                            ");
                __builder2.AddMarkupContent(47, "<label for=\"name\" class=\"col-md-8 col-form-label\">Giảng Viên Dạy Thay:</label>\r\n                            ");
                __builder2.OpenElement(48, "div");
                __builder2.AddAttribute(49, "class", "row");
                __builder2.OpenElement(50, "div");
                __builder2.AddAttribute(51, "class", "col-8");
                global::__Blazor.FPLSP.Components.CabinProject.DetailShift.TypeInference.CreateInputSelect_0(__builder2, 52, 53, "time", 54, " form-select", 55, 
#nullable restore
#line 34 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
                                                                                                   ()=>IdLecturerForExchange

#line default
#line hidden
#nullable disable
                , 56, 
#nullable restore
#line 34 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
                                                                                                                                       IdLecturerForExchange

#line default
#line hidden
#nullable disable
                , 57, global::Microsoft.AspNetCore.Components.EventCallback.Factory.Create(this, 
#nullable restore
#line 34 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
                                                                                                                                                                              (string value) => CheckLecturerForExchange(value)

#line default
#line hidden
#nullable disable
                ), 58, (__builder3) => {
                    __builder3.OpenElement(59, "option");
                    __builder3.AddAttribute(60, "selected");
                    __builder3.AddAttribute(61, "value", 
#nullable restore
#line 35 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
                                                                  string.Empty

#line default
#line hidden
#nullable disable
                    );
                    __builder3.AddMarkupContent(62, "Chọn giảng viên");
                    __builder3.CloseElement();
#nullable restore
#line 36 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
                                         if (listLecturerForExchange.Count() != 0)
                                        {
                                            

#line default
#line hidden
#nullable disable
#nullable restore
#line 38 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
                                             foreach (var lec in listLecturerForExchange)
                                            {

#line default
#line hidden
#nullable disable
                    __builder3.OpenElement(63, "option");
                    __builder3.AddAttribute(64, "value", 
#nullable restore
#line 40 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
                                                                 lec.Id

#line default
#line hidden
#nullable disable
                    );
#nullable restore
#line (40,77)-(40,122) 26 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
__builder3.AddContent(65, lec.Email.Substring(0, lec.Email.Length - 11));

#line default
#line hidden
#nullable disable
                    __builder3.CloseElement();
#nullable restore
#line 41 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
                                            }

#line default
#line hidden
#nullable disable
#nullable restore
#line 41 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
                                             
                                        }

#line default
#line hidden
#nullable disable
                }
                );
                __builder2.CloseElement();
                __builder2.AddMarkupContent(66, "\r\n                                ");
                __builder2.OpenElement(67, "div");
                __builder2.AddAttribute(68, "class", "col-4");
                __builder2.OpenElement(69, "button");
                __builder2.AddAttribute(70, "disabled", 
#nullable restore
#line 46 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
                                                        string.IsNullOrEmpty(IdLecturerForExchange)

#line default
#line hidden
#nullable disable
                );
                __builder2.AddAttribute(71, "class", "btn btn-primary");
                __builder2.AddAttribute(72, "onclick", global::Microsoft.AspNetCore.Components.EventCallback.Factory.Create<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 46 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
                                                                                                                                        ExchangeSchedule

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddMarkupContent(73, "\r\n                                        Đổi lịch\r\n                                    ");
                __builder2.CloseElement();
                __builder2.CloseElement();
                __builder2.CloseElement();
                __builder2.AddMarkupContent(74, "\r\n                            ");
                __builder2.AddMarkupContent(75, "<label for=\"name\" class=\"col-md-4 col-form-label\">Lớp:</label>\r\n                            ");
                __builder2.OpenComponent<global::Microsoft.AspNetCore.Components.Forms.InputText>(76);
                __builder2.AddAttribute(77, "readonly", true);
                __builder2.AddAttribute(78, "id", "name");
                __builder2.AddAttribute(79, "class", "form-control");
                __builder2.AddAttribute(80, "Value", global::Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<global::System.String>(
#nullable restore
#line 52 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
                                                                                             ClassSubjectName

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(81, "ValueChanged", global::Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>>(global::Microsoft.AspNetCore.Components.EventCallback.Factory.Create<global::System.String>(this, global::Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => ClassSubjectName = __value, ClassSubjectName))));
                __builder2.AddAttribute(82, "ValueExpression", global::Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<global::System.Linq.Expressions.Expression<System.Func<System.String>>>(() => ClassSubjectName));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(83, "\r\n                            ");
                __builder2.AddMarkupContent(84, "<label for=\"name\" class=\"col-md-4 col-form-label\">Ca dạy:</label>\r\n                            ");
                __builder2.OpenComponent<global::Microsoft.AspNetCore.Components.Forms.InputText>(85);
                __builder2.AddAttribute(86, "readonly", true);
                __builder2.AddAttribute(87, "id", "name");
                __builder2.AddAttribute(88, "class", "form-control");
                __builder2.AddAttribute(89, "Value", global::Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<global::System.String>(
#nullable restore
#line 54 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
                                                                                             ShiftName

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(90, "ValueChanged", global::Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>>(global::Microsoft.AspNetCore.Components.EventCallback.Factory.Create<global::System.String>(this, global::Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => ShiftName = __value, ShiftName))));
                __builder2.AddAttribute(91, "ValueExpression", global::Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<global::System.Linq.Expressions.Expression<System.Func<System.String>>>(() => ShiftName));
                __builder2.CloseComponent();
                __builder2.AddMarkupContent(92, "\r\n                            ");
                __builder2.AddMarkupContent(93, "<label for=\"name\" class=\"col-md-4 col-form-label\">Cabin:</label>\r\n                            ");
                __builder2.OpenElement(94, "div");
                __builder2.AddAttribute(95, "class", "row");
                __builder2.OpenElement(96, "div");
                __builder2.AddAttribute(97, "class", "col-6");
                __builder2.OpenComponent<global::Microsoft.AspNetCore.Components.Forms.InputText>(98);
                __builder2.AddAttribute(99, "readonly", true);
                __builder2.AddAttribute(100, "id", "name");
                __builder2.AddAttribute(101, "class", "form-control");
                __builder2.AddAttribute(102, "placeholder", "Chưa có cabin");
                __builder2.AddAttribute(103, "Value", global::Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<global::System.String>(
#nullable restore
#line 58 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
                                                                                                     CabinName

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(104, "ValueChanged", global::Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>>(global::Microsoft.AspNetCore.Components.EventCallback.Factory.Create<global::System.String>(this, global::Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => CabinName = __value, CabinName))));
                __builder2.AddAttribute(105, "ValueExpression", global::Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<global::System.Linq.Expressions.Expression<System.Func<System.String>>>(() => CabinName));
                __builder2.CloseComponent();
                __builder2.CloseElement();
                __builder2.AddMarkupContent(106, "\r\n                                ");
                __builder2.OpenElement(107, "div");
                __builder2.AddAttribute(108, "class", "col-6");
                __builder2.OpenElement(109, "button");
                __builder2.AddAttribute(110, "hidden", 
#nullable restore
#line 61 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
                                                      IdCabin!=null

#line default
#line hidden
#nullable disable
                );
                __builder2.AddAttribute(111, "type", "button");
                __builder2.AddAttribute(112, "class", "btn btn-success");
                __builder2.AddAttribute(113, "data-dismiss", "modal");
                __builder2.AddAttribute(114, "onclick", global::Microsoft.AspNetCore.Components.EventCallback.Factory.Create<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 62 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
                                                  () => BookCabin()

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddMarkupContent(115, "\r\n                                        Nhận cabin\r\n                                    ");
                __builder2.CloseElement();
                __builder2.AddMarkupContent(116, "\r\n                                    ");
                __builder2.OpenElement(117, "button");
                __builder2.AddAttribute(118, "hidden", 
#nullable restore
#line 65 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
                                                      IdCabin==null 

#line default
#line hidden
#nullable disable
                );
                __builder2.AddAttribute(119, "type", "button");
                __builder2.AddAttribute(120, "class", "btn btn-danger");
                __builder2.AddAttribute(121, "data-dismiss", "modal");
                __builder2.AddAttribute(122, "onclick", global::Microsoft.AspNetCore.Components.EventCallback.Factory.Create<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 66 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
                                                  () => CancelCabin()

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddMarkupContent(123, "\r\n                                        Hủy cabin\r\n                                    ");
                __builder2.CloseElement();
                __builder2.CloseElement();
                __builder2.CloseElement();
                __builder2.CloseElement();
                __builder2.AddMarkupContent(124, "\r\n                        ");
                __builder2.OpenElement(125, "div");
                __builder2.AddAttribute(126, "hidden", 
#nullable restore
#line 72 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
                                       IdCabin==null

#line default
#line hidden
#nullable disable
                );
                __builder2.AddMarkupContent(127, "<label for=\"name\" class=\"col-md-4 col-form-label\">Lí do hủy cabin vì:</label>\r\n                            ");
                __builder2.OpenComponent<global::Microsoft.AspNetCore.Components.Forms.InputTextArea>(128);
                __builder2.AddAttribute(129, "placeholder", "Nhập lí do hủy cabin");
                __builder2.AddAttribute(130, "Value", global::Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<global::System.String>(
#nullable restore
#line 74 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
                                                        CancelReason

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(131, "ValueChanged", global::Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>>(global::Microsoft.AspNetCore.Components.EventCallback.Factory.Create<global::System.String>(this, global::Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => CancelReason = __value, CancelReason))));
                __builder2.AddAttribute(132, "ValueExpression", global::Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<global::System.Linq.Expressions.Expression<System.Func<System.String>>>(() => CancelReason));
                __builder2.CloseComponent();
                __builder2.CloseElement();
            }
            ));
            __builder.CloseComponent();
            __builder.CloseElement();
            __builder.AddMarkupContent(133, "\r\n                ");
            __builder.OpenElement(134, "div");
            __builder.AddAttribute(135, "class", "modal-footer");
            __builder.OpenElement(136, "button");
            __builder.AddAttribute(137, "type", "button");
            __builder.AddAttribute(138, "class", "btn btn-primary");
            __builder.AddAttribute(139, "data-dismiss", "modal");
            __builder.AddAttribute(140, "onclick", global::Microsoft.AspNetCore.Components.EventCallback.Factory.Create<global::Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 80 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
                                  () => OnConfirmationChange(false)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddMarkupContent(141, "\r\n                        Đóng\r\n                    ");
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.CloseElement();
#nullable restore
#line 87 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
}

#line default
#line hidden
#nullable disable
        }
        #pragma warning restore 1998
#nullable restore
#line 89 "C:\Users\Nguyen Bui\source\repos\FPLSP3\FPLSP\Components\CabinProject\DetailShift.razor"
       
    [Inject] NavigationManager _navigationManager { get; set; }
    [Inject] public IShiftOfCabinApiClient _shiftOfCabinApiClient { get; set; }
    [Inject] public IGroupCabinRepo _groupCabinRepo { get; set; }
    [Inject] public IBookingCabinApiClient _bookingCabinApiClient { get; set; }
    [Inject] public IBookingRequestRepo _bookingRequestRepo { get; set; }
    [Inject] public ISubjectsSpecializedUPRepo _subSpecUPRepo { get; set; }
    [Inject] public ISpecializedUPRepo _specUPRepo { get; set; }
    [Inject] public ICabinRepo _cabinRepo { get; set; }
    [Inject] public IToastService _toastService { get; set; }

    protected bool ShowConfirmation { get; set; }

    [Parameter]
    public string ConfirmationTitle { get; set; } = "";
    [Parameter]
    public string ConfirmationMessage { get; set; } = "";

    [Parameter]
    public Guid IdClass { get; set; }
    [Parameter]
    public Guid IdSubject { get; set; }
    [Parameter]
    public Guid IdLecturer { get; set; }
    [Parameter]
    public Guid IdShift { get; set; }
    [Parameter]
    public Guid? IdCabin { get; set; }

    [Parameter]
    public string? ClassSubjectName { get; set; }
    [Parameter]
    public string? LecturerName { get; set; }
    [Parameter]
    public string? ShiftName { get; set; }
    [Parameter]
    public string? CabinName { get; set; }
    [Parameter]
    public DateTime TeachingDay { get; set; }
    [Parameter]
    public TimeSpan StartShift { get; set; }
    [Parameter]
    public TimeSpan EndShift { get; set; }

    public string CancelReason { get; set; }
    [Inject] SweetAlertService Swal { get; set; }
    [Inject] ILecturersCPRepo lecturersCPRepo { get; set; }
    [Inject] ITeachingScheduleApiClient teachingScheduleApiClient { get; set; }
    [Inject] IShiftOfCabinApiClient shiftOfCabinApiClient { get; set; }

    [Parameter]
    public EventCallback<int> ConfirmationChanged { get; set; }

    BookingCabinCreateVM bookingCabinVM = new BookingCabinCreateVM();

    List<LecturersCP> listLecturerForExchange = new List<LecturersCP>();
    List<ShiftOfCabinFullVM> listFullShift;

    public Guid? IdCabinRandom = null;
    private bool isSuccess;
    private int result;
    DateTime StartTime;
    DateTime EndTime;

    public string IdLecturerForExchange = null;

    public async Task show()
    {
        try
        {
            string url = "http://localhost:5001/SignalRCabinHub";
            HubConnection _connection = null;
            bool isConnected = false;
            string connectionStatus = "Closed";
            _connection = new HubConnectionBuilder()
                .WithUrl(url)
                .Build();

            await _connection.StartAsync();
            isConnected = true;
            connectionStatus = "Connected :-)";

            _connection.Closed += async (s) =>
            {
                isConnected = false;
                connectionStatus = "Disconnected";
                await _connection.StartAsync();
                isConnected = true;
            };

            _connection.On<string>("SignalRCabins", async (res) =>
            {
                if (res == "Done")
                {
                    await OnInitializedAsync();

                    await this.InvokeAsync(() => this.StateHasChanged());
                }
            });

            _connection.On<string>("SignalRGroupCabins", async (res) =>
            {
                if (res == "Done")
                {
                    await OnInitializedAsync();

                    await this.InvokeAsync(() => this.StateHasChanged());
                }
            });

            _connection.On<string>("SignalRBookingCabins", async (res) =>
            {
                if (res == "Done")
                {
                    await OnInitializedAsync();

                    await this.InvokeAsync(() => this.StateHasChanged());
                }
            });

            _connection.On<string>("SignalRTeachingSchedules", async (res) =>
            {
                if (res == "Done")
                {
                    await OnInitializedAsync();

                    await this.InvokeAsync(() => this.StateHasChanged());
                }
            });

            _connection.On<string>("SignalRSemesterBlocks", async (res) =>
            {
                if (res == "Done")
                {
                    await OnInitializedAsync();

                    await this.InvokeAsync(() => this.StateHasChanged());
                }
            });
        }
        catch (Exception ex)
        {


        }
        finally
        {
            StartTime = new DateTime(TeachingDay.Year, TeachingDay.Month, TeachingDay.Day, StartShift.Hours, StartShift.Minutes, StartShift.Seconds);
            EndTime = new DateTime(TeachingDay.Year, TeachingDay.Month, TeachingDay.Day, EndShift.Hours, EndShift.Minutes, EndShift.Seconds);

            listFullShift = await shiftOfCabinApiClient.GetAllInformationOfShiftOfCabin();
            listFullShift = listFullShift == null ? new List<ShiftOfCabinFullVM>() : listFullShift.Where(c => c.IdLecturer != IdLecturer).ToList();

            listLecturerForExchange = await lecturersCPRepo.GetAllLecturerAsync();
            listLecturerForExchange = listLecturerForExchange.Where(c => !listFullShift.Any(x => x.IdShiftOfCabin == IdShift && x.TeachingDay == TeachingDay && x.IdLecturer == c.Id)).OrderBy(c => c.Email).ToList();
        }

        ShowConfirmation = true;
        StateHasChanged();
    }

    public void CheckLecturerForExchange(string value)
    {
        IdLecturerForExchange = value;
    }

    public async Task ExchangeSchedule()
    {
        StartTime = new DateTime(TeachingDay.Year, TeachingDay.Month, TeachingDay.Day, StartShift.Hours, StartShift.Minutes, StartShift.Seconds);

        // Đổi lịch trước ca dạy
        if (DateTime.Now < StartTime)
        {
            if (!string.IsNullOrEmpty(IdLecturerForExchange))
            {
                var listSchedule = await teachingScheduleApiClient.GetAll();
                TeachingScheduleVM objTS = listSchedule == null ? null : listSchedule.FirstOrDefault(c => c.Status == 0 && c.SubjectId == IdSubject && c.ClassId == IdClass && c.IdLecturter == IdLecturer && c.IdShift == IdShift && c.TeachingDay == TeachingDay);

                if (objTS != null)
                {
                    SweetAlertResult result = await Swal.FireAsync(new SweetAlertOptions
                        {
                            Title = "Xác Nhận Cập Nhật Lịch Dạy",
                            Icon = SweetAlertIcon.Warning,
                            ShowCancelButton = true,
                            ConfirmButtonText = "Đồng Ý",
                            CancelButtonText = "Hủy"
                        });

                    if (!string.IsNullOrEmpty(result.Value))
                    {
                        // Update TeachingSchedule
                        var listLecturer = await lecturersCPRepo.GetAllLecturerAsync();
                        listFullShift = await shiftOfCabinApiClient.GetAllInformationOfShiftOfCabin();
                        listFullShift = listFullShift == null ? new List<ShiftOfCabinFullVM>() : listFullShift.Where(c => c.IdLecturer != IdLecturer).ToList();
                        listLecturerForExchange = listLecturer.Where(c => !listFullShift.Any(x => x.IdShiftOfCabin == IdShift && x.TeachingDay == TeachingDay && x.IdLecturer == c.Id)).OrderBy(c => c.LecturersName).ToList();
                        var lecturerWantToExchange = listLecturer.FirstOrDefault(c => c.Id == Guid.Parse(IdLecturerForExchange)).Email;
                        lecturerWantToExchange = lecturerWantToExchange.Substring(0, lecturerWantToExchange.Length - 11);

                        if (listLecturerForExchange.FirstOrDefault(c => c.Id == Guid.Parse(IdLecturerForExchange)) != null)
                        {
                            var lecturer = listLecturer.FirstOrDefault(c => c.Id == IdLecturer).Email;
                            lecturer = lecturer.Substring(0, lecturer.Length - 11);
                            var lecturerExchange = listLecturerForExchange.FirstOrDefault(c => c.Id == Guid.Parse(IdLecturerForExchange)).Email;
                            lecturerExchange = lecturerExchange.Substring(0, lecturerExchange.Length - 11);

                            objTS.IdLecturter = Guid.Parse(IdLecturerForExchange);
                            objTS.Note = $"Giảng viên {lecturerExchange} dạy thay giảng viên {lecturer}";
                            var objUpdate = new TeachingSchedule()
                                {
                                    Id = objTS.Id,
                                    ImportTime = objTS.ImportTime,
                                    IdAdminImport = objTS.IdAdminImport,
                                    SubjectId = objTS.SubjectId,
                                    ClassId = objTS.ClassId,
                                    IdShift = objTS.IdShift,
                                    IdTrainingFacility = objTS.IdTrainingFacility,

                                    TeachingDay = objTS.TeachingDay,
                                    IndexOfTeachingSchedule = objTS.IndexOfTeachingSchedule,
                                    Status = objTS.Status,
                                    IdBlock = objTS.IdBlock,
                                    IdSemester = objTS.IdSemester,
                                    IdLecturter = objTS.IdLecturter,
                                    Note = objTS.Note,
                                    Remote = objTS.Remote
                                };
                            var res = await teachingScheduleApiClient.UpdateTeachingSchedules(objUpdate);

                            // Update BookingCabin
                            var listBookingCabin = await _bookingCabinApiClient.GetAll();

                            var objForUpdate = listBookingCabin.FirstOrDefault(c => c.Status == 1 && c.SubjectId == IdSubject && c.ClassId == IdClass && c.IdShift == IdShift && c.IdLectuter == IdLecturer && c.DateCreated == new DateTime(TeachingDay.Year, TeachingDay.Month, TeachingDay.Day));
                            if (objForUpdate != null)
                            {
                                objForUpdate.IdLectuter = Guid.Parse(IdLecturerForExchange);
                                objForUpdate.CheckinImage = null;
                                objForUpdate.Note = $"Giảng viên {lecturerExchange} dạy thay giảng viên {lecturer}";
                            }

                            var resBK = objForUpdate == null ? true : await _bookingCabinApiClient.Update(objForUpdate.Id, objForUpdate.IdCabin, IdSubject, IdClass, IdShift, new BookingCabinUpdateVM()
                                {
                                    SubjectId = objForUpdate.SubjectId,
                                    ClassId = objForUpdate.ClassId,
                                    IdCabin = objForUpdate.IdCabin,
                                    IdShift = objForUpdate.IdShift,
                                    IdLectuter = objForUpdate.IdLectuter,
                                    CheckinImage = objForUpdate.CheckinImage,
                                    CheckinTime = new DateTime(TeachingDay.Year, TeachingDay.Month, TeachingDay.Day, StartShift.Hours, StartShift.Minutes, StartShift.Seconds),
                                    CheckoutTime = new DateTime(TeachingDay.Year, TeachingDay.Month, TeachingDay.Day, EndShift.Hours, EndShift.Minutes, EndShift.Seconds),
                                    Note = objForUpdate.Note,
                                    DateCreated = objForUpdate.DateCreated,
                                    Status = objForUpdate.Status
                                });

                            if (res == true && resBK == true)
                            {
                                await Swal.FireAsync("Thông Báo", " Cập Nhật Lịch Dạy Thành Công", SweetAlertIcon.Success);
                            }
                            else
                            {
                                await Swal.FireAsync("Thông Báo", " Cập Nhật Lịch Dạy Thất Bại", SweetAlertIcon.Error);
                            }
                        }
                        else
                        {
                            _toastService.ShowError($"Giảng viên {lecturerWantToExchange} không thể dạy thay vì đã có lịch. Vui lòng đổi lịch cho giảng viên khác");
                        }
                    }
                    else if (result.Dismiss == DismissReason.Cancel)
                    {
                        //ở đây xử lý khi hủy upload
                        await Swal.FireAsync("Hủy Cập Nhật Lịch Dạy", "Hủy Cập Nhật Lịch Dạy Thành Công", SweetAlertIcon.Error);
                    }
                }
                else
                {
                    _toastService.ShowError($"Lịch dạy không tồn tại. Vui lòng thử lại");
                }
            }
        }
        else
        {
            _toastService.ShowError($"Chỉ có thể đổi lịch trước khi bắt đầu ca dạy");
        }
        result = 0;
        ShowConfirmation = false;
        await ConfirmationChanged.InvokeAsync(result);
    }
    public async Task BookCabin()
    {
        StartTime = new DateTime(TeachingDay.Year, TeachingDay.Month, TeachingDay.Day, StartShift.Hours, StartShift.Minutes, StartShift.Seconds);
        EndTime = new DateTime(TeachingDay.Year, TeachingDay.Month, TeachingDay.Day, EndShift.Hours, EndShift.Minutes, EndShift.Seconds);

        if (DateTime.Now < EndTime)
        {
            // list cabin trống của ngành
            List<CabinViewModel> listCabin = await _cabinRepo.GetAllCabinAsync();
            listCabin = listCabin == null ? new() : listCabin.Where(c => c.Status == 0).ToList();
            var listBookingCabin = await _bookingCabinApiClient.GetAll();
            //listBookingCabin = listBookingCabin.Where(c => c.Status != 1).ToList();
            var listGroupCabin = await _groupCabinRepo.GetAllGroupCabinAsync();
            listGroupCabin = listGroupCabin.Where(c => c.Status != 1).ToList();
            var listSubSpec = await _subSpecUPRepo.GetAllAsync();
            var specOfSub = listSubSpec.FirstOrDefault(c => c.SubjectId == IdSubject);
            var listSpec = await _specUPRepo.GetAll();

            var specAvailableForBooking = specOfSub == null ? null : listSpec.FirstOrDefault(c => c.Id == specOfSub.SpecializedId);
            listCabin = specAvailableForBooking == null ? listCabin : listCabin.Where(c => listGroupCabin.Any(c => c.IdSpec == specAvailableForBooking.Id || c.IdSpec == specAvailableForBooking.IdSpeciality)).ToList();
            // listCabin chứa những cabin đang không có bookingcabin == 0
            listCabin = listCabin.Where(cabin => !listBookingCabin.Any(c => //c.ClassId == IdClass &&
                                                                            //c.SubjectId == IdSubject &&
                                                                        c.IdShift == IdShift &&
                                                                        c.IdCabin == cabin.Id &&
                                                                        c.IdShift == IdShift &&
                                                                        c.DateCreated == TeachingDay &&
                                                                        c.Status == 0)).ToList();

            // Nếu listCabin null ? BOOKINGREQUEST : Random
            if (listCabin.Count() != 0)
            {
                var length = listCabin.Count();
                // Random
                Random rand = new Random();
                IdCabinRandom = listCabin[rand.Next(length)].Id;
                var x = await _cabinRepo.GetAllCabinAsync();
                CabinName = x.FirstOrDefault(c => c.Id == IdCabinRandom).CabinName;
                SweetAlertResult result = await Swal.FireAsync(new SweetAlertOptions
                    {
                        Title = "Xác Nhận Nhận Cabin",
                        Icon = SweetAlertIcon.Warning,
                        ShowCancelButton = true,
                        ConfirmButtonText = "Đồng Ý",
                        CancelButtonText = "Hủy"
                    });

                if (!string.IsNullOrEmpty(result.Value))
                {
                    await OnConfirmationChange(true);
                }
                else if (result.Dismiss == DismissReason.Cancel)
                {
                    await Swal.FireAsync("Hủy Nhận Cabin", "Hủy Nhận Cabin Thành Công", SweetAlertIcon.Error);
                }
            }
            else
            {
                // BOOKINGREQUEST
                var listBR = await _bookingRequestRepo.GetAllBookingRequestAsync();
                if (!listBR.Any(c => c.IdLectuter == IdLecturer && c.SubjectId == IdSubject && c.ClassId == IdClass && c.StartTime == StartTime && c.EndTime == EndTime && c.Status == 0))
                {
                    var obj = new BookingRequestCreateViewModel()
                        {
                            ContentOfRequest = "Cần xếp giúp cabin",
                            IdLectuter = IdLecturer,
                            SubjectId = IdSubject,
                            ClassId = IdClass,
                            SendingTime = DateTime.Now,
                            FeedBackTime = DateTime.Now,
                            StartTime = StartTime,
                            EndTime = EndTime,
                            Status = 0,
                        };
                    await _bookingRequestRepo.CreateBookingRequest(obj);
                }
                else
                {
                    var objExisted = listBR.FirstOrDefault(c => c.IdLectuter == IdLecturer && c.SubjectId == IdSubject && c.ClassId == IdClass && c.StartTime == StartTime && c.EndTime == EndTime && c.Status == 0);
                    var obj = new BookingRequestUpdateViewModel()
                        {
                            ContentOfRequest = "Cần xếp giúp cabin",
                            IdLectuter = IdLecturer,
                            SubjectId = IdSubject,
                            ClassId = IdClass,
                            FeedBackTime = DateTime.Now,
                            SendingTime = DateTime.Now,
                            StartTime = StartTime,
                            EndTime = EndTime,
                            Status = 0,
                        };
                    await _bookingRequestRepo.UpdateBookingRequest(objExisted.Id, obj);
                }

                await Swal.FireAsync("Đã Gửi Yêu Cầu Xếp Cabin", $"Đã hết cabin của {ShiftName} ngày {TeachingDay.ToString("dd/MM/yyyy")}", SweetAlertIcon.Success);
            }
        }
        else
        {
            _toastService.ShowError($"Đã quá thời gian nhận/hủy cabin");
        }
        result = 0;
        ShowConfirmation = false;
        await ConfirmationChanged.InvokeAsync(result);
    }
    public async Task CancelCabin()
    {
        StartTime = new DateTime(TeachingDay.Year, TeachingDay.Month, TeachingDay.Day, StartShift.Hours, StartShift.Minutes, StartShift.Seconds);
        EndTime = new DateTime(TeachingDay.Year, TeachingDay.Month, TeachingDay.Day, EndShift.Hours, EndShift.Minutes, EndShift.Seconds);
        if (DateTime.Now < EndTime)
        {
            IdCabinRandom = (IdCabin == null) ? IdCabinRandom : Guid.Parse(IdCabin.ToString());
            CancelReason = CancelReason == null ? "" : CancelReason;

            if (CancelReason.Trim().Length == 0)
            {
                _toastService.ShowError($"Không được để trống lí do hủy cabin");
            }
            else
            {
                SweetAlertResult confirm = await Swal.FireAsync(new SweetAlertOptions
                    {
                        Title = "Xác Nhận Hủy Cabin",
                        Icon = SweetAlertIcon.Warning,
                        ShowCancelButton = true,
                        ConfirmButtonText = "Đồng Ý",
                        CancelButtonText = "Hủy"
                    });

                if (!string.IsNullOrEmpty(confirm.Value))
                {
                    var resRequest = true;

                    var listBookingCabin = await _bookingCabinApiClient.GetAll();

                    var obj = listBookingCabin.FirstOrDefault(c => c.Status == 0 && c.SubjectId == IdSubject && c.ClassId == IdClass && c.IdShift == IdShift && c.IdLectuter == IdLecturer && c.IdCabin == Guid.Parse(IdCabinRandom.ToString()) && c.DateCreated == new DateTime(TeachingDay.Year, TeachingDay.Month, TeachingDay.Day));
                    var resBooking = obj == null ? true : await _bookingCabinApiClient.Delete(obj.Id, Guid.Parse(IdCabinRandom.ToString()), IdSubject, IdClass, IdShift);
                    CancelReason = null;
                    if (resRequest && resBooking)
                    {
                        await Swal.FireAsync("Hủy Cabin", "Hủy Cabin Cho Lớp Học Thành Công", SweetAlertIcon.Success);
                    }
                    else
                    {
                        await Swal.FireAsync("Hủy Cabin", "Hủy Cabin Cho Lớp Học Thất Bại", SweetAlertIcon.Error);
                    }
                }
                else if (confirm.Dismiss == DismissReason.Cancel)
                {
                    await Swal.FireAsync("Hủy Thao Tác", "Hủy Thao Tác Thành Công", SweetAlertIcon.Error);
                }
            }
        }
        else
        {
            _toastService.ShowError($"Đã quá thời gian nhận/hủy cabin");
        }
        result = 0;
        ShowConfirmation = false;
        await ConfirmationChanged.InvokeAsync(result);
    }
    protected async Task OnConfirmationChange(bool value)
    {
        /*
        * (result) = (0)->View; (1)->CreateSuccess; (2)->CreateFail; (1)->UpdateSuccess; (2)->UpdateFail;
        */
        IdCabinRandom = (IdCabin == null) ? IdCabinRandom : Guid.Parse(IdCabin.ToString());

        if (value && IdCabinRandom != null)
        {
            var listBookingCabin = await _bookingCabinApiClient.GetAll();
            //listBookingCabin = listBookingCabin.Where(c => c.Status != 1).ToList();

            if (listBookingCabin == null || !listBookingCabin.Any(c => c.ClassId == IdClass &&
                c.SubjectId == IdSubject &&
                c.IdShift == IdShift &&
                c.IdCabin == IdCabinRandom &&
                c.DateCreated == new DateTime(TeachingDay.Year, TeachingDay.Month, TeachingDay.Day)
            )
            )
            {
                var obj = new BookingCabinCreateVM()
                    {
                        Id = Guid.NewGuid(),
                        SubjectId = IdSubject,
                        ClassId = IdClass,
                        IdCabin = Guid.Parse(IdCabinRandom.ToString()),
                        IdShift = IdShift,
                        IdLectuter = IdLecturer,
                        CheckinImage = bookingCabinVM.CheckinImage,
                        CheckinTime = new DateTime(TeachingDay.Year, TeachingDay.Month, TeachingDay.Day, StartShift.Hours, StartShift.Minutes, StartShift.Seconds),
                        CheckoutTime = new DateTime(TeachingDay.Year, TeachingDay.Month, TeachingDay.Day, EndShift.Hours, EndShift.Minutes, EndShift.Seconds),
                        Note = bookingCabinVM.Note,
                        DateCreated = new DateTime(TeachingDay.Year, TeachingDay.Month, TeachingDay.Day),
                        Status = 0
                    };
                var res = await _bookingCabinApiClient.Add(obj);
                result = res ? 1 : 2;
                ShowConfirmation = false;
                await ConfirmationChanged.InvokeAsync(result);
            }
            else
            {
                if (IdCabinRandom != IdCabin)
                {
                    var obj = new BookingCabinUpdateVM()
                        {
                            SubjectId = IdSubject,
                            ClassId = IdClass,
                            IdCabin = Guid.Parse(IdCabinRandom.ToString()),
                            IdShift = IdShift,
                            IdLectuter = IdLecturer,
                            CheckinImage = bookingCabinVM.CheckinImage,
                            CheckinTime = new DateTime(TeachingDay.Year, TeachingDay.Month, TeachingDay.Day, StartShift.Hours, StartShift.Minutes, StartShift.Seconds),
                            CheckoutTime = new DateTime(TeachingDay.Year, TeachingDay.Month, TeachingDay.Day, EndShift.Hours, EndShift.Minutes, EndShift.Seconds),
                            Note = bookingCabinVM.Note,
                            DateCreated = new DateTime(TeachingDay.Year, TeachingDay.Month, TeachingDay.Day),
                            Status = 0
                        };

                    var objForUpdate = listBookingCabin.FirstOrDefault(c => c.Status == 1 && c.SubjectId == IdSubject && c.ClassId == IdClass && c.IdShift == IdShift && c.IdLectuter == IdLecturer && c.IdCabin == Guid.Parse(IdCabinRandom.ToString()) && c.DateCreated == new DateTime(TeachingDay.Year, TeachingDay.Month, TeachingDay.Day));

                    var res = objForUpdate == null ? true : await _bookingCabinApiClient.Update(objForUpdate.Id, Guid.Parse(IdCabinRandom.ToString()), IdSubject, IdClass, IdShift, obj);

                    result = res ? 1 : 2;
                    ShowConfirmation = false;
                    await ConfirmationChanged.InvokeAsync(result);
                }
                else
                {
                    result = 0;
                    ShowConfirmation = false;
                    await ConfirmationChanged.InvokeAsync(result);
                }
            }
        }
        else
        {
            result = 0;
            ShowConfirmation = false;
            await ConfirmationChanged.InvokeAsync(result);
        }
    }

#line default
#line hidden
#nullable disable
    }
}
namespace __Blazor.FPLSP.Components.CabinProject.DetailShift
{
    #line hidden
    internal static class TypeInference
    {
        public static void CreateInputSelect_0<TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.Object __arg0, int __seq1, global::System.Object __arg1, int __seq2, global::System.Linq.Expressions.Expression<global::System.Func<TValue>> __arg2, int __seq3, TValue __arg3, int __seq4, global::Microsoft.AspNetCore.Components.EventCallback<TValue> __arg4, int __seq5, global::Microsoft.AspNetCore.Components.RenderFragment __arg5)
        {
        __builder.OpenComponent<global::Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>>(seq);
        __builder.AddAttribute(__seq0, "id", __arg0);
        __builder.AddAttribute(__seq1, "class", __arg1);
        __builder.AddAttribute(__seq2, "ValueExpression", __arg2);
        __builder.AddAttribute(__seq3, "Value", __arg3);
        __builder.AddAttribute(__seq4, "ValueChanged", __arg4);
        __builder.AddAttribute(__seq5, "ChildContent", __arg5);
        __builder.CloseComponent();
        }
    }
}
#pragma warning restore 1591
