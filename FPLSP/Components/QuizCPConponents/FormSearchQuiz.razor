@using FPLSP.Repositories
@using FPLSP.Server.Domain.Dtos
@using FPLSP.Server.Infrastructure.ViewModels.QuizCPVm

<EditForm Model="@_quizCPListSearch" OnSubmit=@SearchForm>
    <div class="row">
        <div class="col-4">
            <InputSelect @bind-Value="_quizCPListSearch.Status" class="form-select">
                <option value="">Tất cả</option>
                <option value="0">Không hoạt động</option>
                <option value="1">Đang hoạt động</option>
            </InputSelect>
        </div>
        <div class="col-4 ps-0 pe-0">
            <InputText placeholder="Nhập tên Quiz" class="form-control" @bind-Value="_quizCPListSearch.QuizName"></InputText>
        </div>
        <div class="col-4">
            <button type="submit" class="btn btn-primary">Tìm kiếm</button>
            <button class="btn btn-outline-success ms-2" @onclick="() => Undo()">Làm mới</button>
        </div>
    </div>
</EditForm>
@code{
    [Parameter]
        public EventCallback<ListQuizSearch> OnSearch { get; set; }

        private ListQuizSearch _quizCPListSearch = new ListQuizSearch();
        [Inject] public ISubjectClient _iSubjectClient { get; set; }
        public List<SubjectDto> ListSubjectCP { get; set; } = new List<SubjectDto>();

        private async Task SearchForm(EditContext context)
        {
            await OnSearch.InvokeAsync(_quizCPListSearch);
        }
        protected async override Task OnInitializedAsync()
        {
            ListSubjectCP = await _iSubjectClient.GetAllSubjectAsync();
        }
        private async Task Undo()
        {
            _quizCPListSearch.QuizName = "";
            _quizCPListSearch.Status = 1;
            _quizCPListSearch.PageNumber = 1;
            await OnSearch.InvokeAsync(_quizCPListSearch);

        }
}