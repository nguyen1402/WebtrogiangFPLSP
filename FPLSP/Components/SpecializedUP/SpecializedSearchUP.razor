@using FPLSP.Repositories.Interfaces
@using FPLSP.Server.Domain.Dtos
@using FPLSP.Server.Infrastructure.ViewModels.Specialized
@using FPLSP.Server.Infrastructure.ViewModels.SpesializedUP

<EditForm Model="@specializedListSearch" OnSubmit=@SearchForm>
    <div class="row">
        <div class="col-lg-2">
            <InputSelect class="form-select" ValueExpression="@(()=>specializedListSearch.Code)" Value="@specializedListSearch.Code" ValueChanged="@((string? value)=>
            CodeSearch(value))">
                <option value="">Tất cả</option>
                @foreach (var item in _lstAll)
                {
                    <option value="@item.SpecializedCode">@item.SpecializedCode</option>
                }
            </InputSelect>
        </div>
        <div class="col-lg-3">
            <InputSelect class="form-select" ValueExpression="@(()=>specializedListSearch.Status)" Value="@specializedListSearch.Status" ValueChanged="@((int? value)=>
            StatusSearch(value))">
                <option value="">Tất cả</option>
                <option value="0">Chưa hoạt động</option>
                <option value="1">Đang hoạt động</option>
                <option value="2">Ngưng hoạt động</option>
            </InputSelect>
        </div>
        <div class="col-lg-7">
            <div class="input-group mb-3">
                <InputText placeholder="Nhập tên chuyên ngành..." class="form-control" @bind-Value="specializedListSearch.Name"></InputText>
                <div class="input-group-append pl-2">
                    <button type="submit" class="btn btn-outline-primary ">Tìm kiếm</button>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public EventCallback<SpecializedListSearch> OnSearch { set; get; }
    [Inject]
    private ISpecializedUPRepo _specializedUPRepo { get; set; }
    private List<SpecializedDto> _lstAll = new List<SpecializedDto>();

    private SpecializedListSearch specializedListSearch = new SpecializedListSearch();

    protected override async Task OnInitializedAsync()
    {
        _lstAll = await _specializedUPRepo.GetAll();

    }

    private async Task SearchForm(EditContext context)
    {
        await OnSearch.InvokeAsync(specializedListSearch);
    }
    private void StatusSearch(int? a)
    {
        specializedListSearch.Status = a;
        SearchForm(null);
    }
    private void CodeSearch(string? a)
    {
        specializedListSearch.Code = a;
        SearchForm(null);
    }
}
